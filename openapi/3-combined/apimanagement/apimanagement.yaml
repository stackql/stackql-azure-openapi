openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: ApiManagementClient
  description: Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.
  version: '2021-08-01'
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      properties:
        error:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ErrorResponseBody'
          description: Properties of the Error Response.
      description: Error Response.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: REST API operation
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: The object that describes the operation.
          properties:
            provider:
              description: Friendly name of the resource provider
              type: string
            operation:
              description: 'Operation type: read, write, delete, listKeys/action, etc.'
              type: string
            resource:
              description: Resource type on which the operation is performed.
              type: string
            description:
              description: Friendly name of the operation
              type: string
        origin:
          type: string
          description: The operation origin.
        properties:
          type: object
          x-ms-client-flatten: true
          description: The operation properties.
    OperationListResult:
      description: Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    OutboundEnvironmentEndpointList:
      description: Collection of Outbound Environment Endpoints
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/OutboundEnvironmentEndpoint'
          x-ms-identifiers: []
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    OutboundEnvironmentEndpoint:
      description: Endpoints accessed for a common purpose that the Api Management Service requires outbound network access to.
      type: object
      properties:
        category:
          description: The type of service accessed by the Api Management Service, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory.
          type: string
        endpoints:
          description: The endpoints that the Api Management Service reaches the service at.
          type: array
          items:
            $ref: '#/components/schemas/EndpointDependency'
          x-ms-identifiers:
            - domainName
    EndpointDependency:
      description: A domain name that a service is reached at.
      type: object
      properties:
        domainName:
          description: The domain name of the dependency.
          type: string
        endpointDetails:
          description: The Ports used when connecting to DomainName.
          type: array
          items:
            $ref: '#/components/schemas/EndpointDetail'
          x-ms-identifiers:
            - region
            - port
    EndpointDetail:
      description: Current TCP connectivity information from the Api Management Service to a single endpoint.
      type: object
      properties:
        port:
          format: int32
          description: The port an endpoint is connected to.
          type: integer
        region:
          description: The region of the dependency.
          type: string
    ResourceSkuResults:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSkuResult'
          x-ms-identifiers:
            - resourceType
            - sku/name
          description: The list of skus available for the service.
        nextLink:
          type: string
          description: The uri to fetch the next page of API Management service Skus.
      required:
        - value
      description: The API Management service SKUs operation response.
    ResourceSkuResult:
      properties:
        resourceType:
          readOnly: true
          type: string
          description: The type of resource the SKU applies to.
        sku:
          $ref: '#/components/schemas/ResourceSku'
          readOnly: true
          description: Specifies API Management SKU.
        capacity:
          $ref: '#/components/schemas/ResourceSkuCapacity'
          readOnly: true
          description: Specifies the number of API Management units.
      description: Describes an available API Management service SKU.
    ResourceSkuCapacity:
      properties:
        minimum:
          type: integer
          readOnly: true
          format: int32
          description: The minimum capacity.
        maximum:
          type: integer
          readOnly: true
          format: int32
          description: The maximum capacity that can be set.
        default:
          type: integer
          readOnly: true
          format: int32
          description: The default capacity.
        scaleType:
          type: string
          readOnly: true
          description: The scale type applicable to the sku.
          enum:
            - automatic
            - manual
            - none
          x-ms-enum:
            name: ResourceSkuCapacityScaleType
            modelAsString: true
            values:
              - value: automatic
                description: Supported scale type automatic.
              - value: manual
                description: Supported scale type manual.
              - value: none
                description: Scaling not supported.
      description: Describes scaling information of a SKU.
    ResourceSku:
      properties:
        name:
          type: string
          description: Name of the Sku.
          externalDocs:
            url: https://azure.microsoft.com/en-us/pricing/details/api-management/
          enum:
            - Developer
            - Standard
            - Premium
            - Basic
            - Consumption
            - Isolated
          x-ms-enum:
            name: SkuType
            modelAsString: true
            values:
              - value: Developer
                description: Developer SKU of Api Management.
              - value: Standard
                description: Standard SKU of Api Management.
              - value: Premium
                description: Premium SKU of Api Management.
              - value: Basic
                description: Basic SKU of Api Management.
              - value: Consumption
                description: Consumption SKU of Api Management.
              - value: Isolated
                description: Isolated SKU of Api Management.
      description: Describes an available API Management SKU.
    CertificateInformation:
      properties:
        expiry:
          type: string
          format: date-time
          description: 'Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
        thumbprint:
          type: string
          description: Thumbprint of the certificate.
        subject:
          type: string
          description: Subject of the certificate.
      required:
        - expiry
        - thumbprint
        - subject
      description: SSL certificate information.
    CertificateConfiguration:
      properties:
        encodedCertificate:
          type: string
          description: Base64 Encoded certificate.
        certificatePassword:
          type: string
          description: Certificate Password.
        storeName:
          description: The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
          type: string
          enum:
            - CertificateAuthority
            - Root
        certificate:
          $ref: '#/components/schemas/CertificateInformation'
          description: Certificate information.
      required:
        - storeName
      description: Certificate configuration which consist of non-trusted intermediates and root certificates.
    HostnameConfiguration:
      properties:
        type:
          type: string
          description: Hostname type.
          enum:
            - Proxy
            - Portal
            - Management
            - Scm
            - DeveloperPortal
          x-ms-enum:
            name: HostnameType
            modelAsString: true
        hostName:
          type: string
          description: Hostname to configure on the Api Management service.
        keyVaultId:
          type: string
          description: Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with aka.ms/apimmsi. The secret should be of type *application/x-pkcs12*
        identityClientId:
          type: string
          description: System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate.
        encodedCertificate:
          type: string
          description: Base64 Encoded certificate.
        certificatePassword:
          type: string
          description: Certificate Password.
        defaultSslBinding:
          type: boolean
          description: Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
          default: false
        negotiateClientCertificate:
          type: boolean
          description: Specify true to always negotiate client certificate on the hostname. Default Value is false.
          default: false
        certificate:
          $ref: '#/components/schemas/CertificateInformation'
          description: Certificate information.
        certificateSource:
          type: string
          description: Certificate Source.
          enum:
            - Managed
            - KeyVault
            - Custom
            - BuiltIn
          x-ms-enum:
            name: CertificateSource
            modelAsString: true
        certificateStatus:
          type: string
          description: Certificate Status.
          enum:
            - Completed
            - Failed
            - InProgress
          x-ms-enum:
            name: CertificateStatus
            modelAsString: true
      required:
        - type
        - hostName
      description: Custom hostname configuration.
    VirtualNetworkConfiguration:
      properties:
        vnetid:
          readOnly: true
          type: string
          description: The virtual network ID. This is typically a GUID. Expect a null GUID by default.
        subnetname:
          readOnly: true
          type: string
          description: The name of the subnet.
        subnetResourceId:
          type: string
          pattern: ^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$
          description: The full resource ID of a subnet in a virtual network to deploy the API Management service in.
      description: Configuration of a virtual network to which API Management service is deployed.
    AdditionalLocation:
      properties:
        location:
          type: string
          description: The location name of the additional region among Azure Data center regions.
        sku:
          $ref: '#/components/schemas/ApiManagementServiceSkuProperties'
          description: SKU properties of the API Management service.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting where the resource needs to come from.
        publicIPAddresses:
          type: array
          items:
            type: string
          readOnly: true
          description: Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard, Premium and Isolated SKU.
        privateIPAddresses:
          type: array
          items:
            type: string
          readOnly: true
          description: Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard, Premium and Isolated SKU.
        publicIpAddressId:
          type: string
          description: Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the location. Supported only for Premium SKU being deployed in Virtual Network.
        virtualNetworkConfiguration:
          $ref: '#/components/schemas/VirtualNetworkConfiguration'
          description: Virtual network configuration for the location.
        gatewayRegionalUrl:
          type: string
          description: Gateway URL of the API Management service in the Region.
          readOnly: true
        disableGateway:
          type: boolean
          description: Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
          default: false
        platformVersion:
          type: string
          description: Compute Platform Version running the service.
          readOnly: true
          enum:
            - undetermined
            - stv1
            - stv2
            - mtv1
          x-ms-enum:
            name: PlatformVersion
            modelAsString: true
            values:
              - value: undetermined
                description: Platform version cannot be determined, as compute platform is not deployed.
              - value: stv1
                description: Platform running the service on Single Tenant V1 platform.
              - value: stv2
                description: Platform running the service on Single Tenant V2 platform.
              - value: mtv1
                description: Platform running the service on Multi Tenant V1 platform.
      required:
        - location
        - sku
      description: Description of an additional API Management resource location.
    ApiManagementServiceBackupRestoreParameters:
      properties:
        storageAccount:
          type: string
          description: The name of the Azure storage account (used to place/retrieve the backup).
        containerName:
          type: string
          description: The name of the blob container (used to place/retrieve the backup).
        backupName:
          type: string
          description: The name of the backup file to create/retrieve.
        accessType:
          type: string
          description: The type of access to be used for the storage account.
          default: AccessKey
          enum:
            - AccessKey
            - SystemAssignedManagedIdentity
            - UserAssignedManagedIdentity
          x-ms-enum:
            name: AccessType
            modelAsString: true
            values:
              - value: AccessKey
                description: Use access key.
              - value: SystemAssignedManagedIdentity
                description: Use system assigned managed identity.
              - value: UserAssignedManagedIdentity
                description: Use user assigned managed identity.
        accessKey:
          type: string
          description: Storage account access key. Required only if `accessType` is set to `AccessKey`.
        clientId:
          type: string
          description: The Client ID of user assigned managed identity. Required only if `accessType` is set to `UserAssignedManagedIdentity`.
      required:
        - storageAccount
        - containerName
        - backupName
      description: Parameters supplied to the Backup/Restore of an API Management service operation.
    ApiManagementServiceProperties:
      properties:
        publisherEmail:
          type: string
          description: Publisher email.
          maxLength: 100
        publisherName:
          type: string
          description: Publisher name.
          maxLength: 100
      allOf:
        - $ref: '#/components/schemas/ApiManagementServiceBaseProperties'
      required:
        - publisherEmail
        - publisherName
      description: Properties of an API Management service resource description.
    ApiManagementServiceUpdateProperties:
      properties:
        publisherEmail:
          type: string
          description: Publisher email.
          maxLength: 100
        publisherName:
          type: string
          description: Publisher name.
          maxLength: 100
      allOf:
        - $ref: '#/components/schemas/ApiManagementServiceBaseProperties'
      description: Properties of an API Management service resource description.
    ApiManagementServiceBaseProperties:
      properties:
        notificationSenderEmail:
          type: string
          description: Email address from which the notification will be sent.
          maxLength: 100
        provisioningState:
          type: string
          description: 'The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.'
          readOnly: true
        targetProvisioningState:
          type: string
          description: The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
          readOnly: true
        createdAtUtc:
          type: string
          format: date-time
          description: 'Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
          readOnly: true
        gatewayUrl:
          type: string
          description: Gateway URL of the API Management service.
          readOnly: true
        gatewayRegionalUrl:
          type: string
          description: Gateway URL of the API Management service in the Default Region.
          readOnly: true
        portalUrl:
          type: string
          description: Publisher portal endpoint Url of the API Management service.
          readOnly: true
        managementApiUrl:
          type: string
          description: Management API endpoint URL of the API Management service.
          readOnly: true
        scmUrl:
          type: string
          description: SCM endpoint URL of the API Management service.
          readOnly: true
        developerPortalUrl:
          type: string
          description: DEveloper Portal endpoint URL of the API Management service.
          readOnly: true
        hostnameConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/HostnameConfiguration'
          x-ms-identifiers:
            - hostName
            - type
          description: Custom hostname configuration of the API Management service.
        publicIPAddresses:
          type: array
          items:
            type: string
          readOnly: true
          description: Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard, Premium and Isolated SKU.
        privateIPAddresses:
          type: array
          items:
            type: string
          readOnly: true
          description: Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard, Premium and Isolated SKU.
        publicIpAddressId:
          type: string
          description: Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the region. Supported only for Developer and Premium SKU being deployed in Virtual Network.
        publicNetworkAccess:
          description: Whether or not public endpoint access is allowed for this API Management service.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        virtualNetworkConfiguration:
          $ref: '#/components/schemas/VirtualNetworkConfiguration'
          description: Virtual network configuration of the API Management service.
        additionalLocations:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalLocation'
          x-ms-identifiers:
            - location
            - sku
          description: Additional datacenter locations of the API Management service.
        customProperties:
          type: object
          additionalProperties:
            type: string
          description: 'Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties'' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting''s default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can''t be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384'
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/CertificateConfiguration'
          x-ms-identifiers:
            - certificate/thumbprint
          description: List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
        enableClientCertificate:
          type: boolean
          description: Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.
          default: false
        disableGateway:
          type: boolean
          description: Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region.
          default: false
        virtualNetworkType:
          type: string
          description: The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
          default: None
          enum:
            - None
            - External
            - Internal
          x-ms-enum:
            name: VirtualNetworkType
            modelAsString: true
            values:
              - value: None
                description: The service is not part of any Virtual Network.
              - value: External
                description: The service is part of Virtual Network and it is accessible from Internet.
              - value: Internal
                description: The service is part of Virtual Network and it is only accessible from within the virtual network.
        apiVersionConstraint:
          $ref: '#/components/schemas/ApiVersionConstraint'
          description: Control Plane Apis version constraint for the API Management service.
        restore:
          type: boolean
          description: Undelete Api Management Service if it was previously soft-deleted. If this flag is specified and set to True all other properties will be ignored.
          default: false
        privateEndpointConnections:
          type: array
          items:
            $ref: '#/components/schemas/RemotePrivateEndpointConnectionWrapper'
          description: List of Private Endpoint Connections of this service.
        platformVersion:
          type: string
          description: Compute Platform Version running the service in this location.
          readOnly: true
          enum:
            - undetermined
            - stv1
            - stv2
            - mtv1
          x-ms-enum:
            name: PlatformVersion
            modelAsString: true
            values:
              - value: undetermined
                description: Platform version cannot be determined, as compute platform is not deployed.
              - value: stv1
                description: Platform running the service on Single Tenant V1 platform.
              - value: stv2
                description: Platform running the service on Single Tenant V2 platform.
              - value: mtv1
                description: Platform running the service on Multi Tenant V1 platform.
      description: Base Properties of an API Management service resource description.
    ApiVersionConstraint:
      properties:
        minApiVersion:
          type: string
          description: Limit control plane API calls to API Management service with version equal to or newer than this value.
          example: '2019-01-01'
      description: Control Plane Apis version constraint for the API Management service.
    ApiManagementServiceSkuProperties:
      properties:
        name:
          type: string
          description: Name of the Sku.
          externalDocs:
            url: https://azure.microsoft.com/en-us/pricing/details/api-management/
          enum:
            - Developer
            - Standard
            - Premium
            - Basic
            - Consumption
            - Isolated
          x-ms-enum:
            name: SkuType
            modelAsString: true
            values:
              - value: Developer
                description: Developer SKU of Api Management.
              - value: Standard
                description: Standard SKU of Api Management.
              - value: Premium
                description: Premium SKU of Api Management.
              - value: Basic
                description: Basic SKU of Api Management.
              - value: Consumption
                description: Consumption SKU of Api Management.
              - value: Isolated
                description: Isolated SKU of Api Management.
        capacity:
          type: integer
          format: int32
          description: Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
      required:
        - name
        - capacity
      description: API Management service resource SKU properties.
    ApiManagementServiceResource:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiManagementServiceProperties'
          description: Properties of the API Management service.
        sku:
          $ref: '#/components/schemas/ApiManagementServiceSkuProperties'
          description: SKU properties of the API Management service.
        identity:
          $ref: '#/components/schemas/ApiManagementServiceIdentity'
          description: Managed service identity of the Api Management service.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        location:
          type: string
          description: Resource location.
          x-ms-mutability:
            - read
            - create
        etag:
          type: string
          description: ETag of the resource.
          readOnly: true
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting where the resource needs to come from.
      allOf:
        - $ref: '#/components/schemas/ApimResource'
      required:
        - location
        - sku
        - properties
      description: A single API Management service resource in List or Get response.
    ApimResource:
      description: The Resource definition.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          type: string
          description: Resource name.
          readOnly: true
        type:
          readOnly: true
          type: string
          description: Resource type for API Management resource is set to Microsoft.ApiManagement.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      x-ms-azure-resource: true
    ApiManagementServiceUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiManagementServiceUpdateProperties'
          description: Properties of the API Management service.
        sku:
          $ref: '#/components/schemas/ApiManagementServiceSkuProperties'
          description: SKU properties of the API Management service.
        identity:
          $ref: '#/components/schemas/ApiManagementServiceIdentity'
          description: Managed service identity of the Api Management service.
        etag:
          type: string
          description: ETag of the resource.
          readOnly: true
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting where the resource needs to come from.
      allOf:
        - $ref: '#/components/schemas/ApimResource'
      description: Parameter supplied to Update Api Management Service.
    ApiManagementServiceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApiManagementServiceResource'
          description: Result of the List API Management services operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of API Management services.
      required:
        - value
      description: The response of the List API Management services operation.
    ApiManagementServiceGetSsoTokenResult:
      properties:
        redirectUri:
          type: string
          description: Redirect URL to the Publisher Portal containing the SSO token.
      description: The response of the GetSsoToken operation.
    ApiManagementServiceCheckNameAvailabilityParameters:
      properties:
        name:
          type: string
          description: The name to check for availability.
      required:
        - name
      description: Parameters supplied to the CheckNameAvailability operation.
    ApiManagementServiceNameAvailabilityResult:
      properties:
        nameAvailable:
          type: boolean
          description: True if the name is available and can be used to create a new API Management service; otherwise false.
          readOnly: true
        message:
          type: string
          description: If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already in use, and direct them to select a different name.
          readOnly: true
        reason:
          type: string
          description: Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported characters, etc.)  AlreadyExists indicates that the name is already in use and is therefore unavailable.
          enum:
            - Valid
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: NameAvailabilityReason
            modelAsString: false
      description: Response of the CheckNameAvailability operation.
    ApiManagementServiceGetDomainOwnershipIdentifierResult:
      properties:
        domainOwnershipIdentifier:
          type: string
          description: The domain ownership identifier value.
          readOnly: true
      description: Response of the GetDomainOwnershipIdentifier operation.
    ApiManagementServiceApplyNetworkConfigurationParameters:
      properties:
        location:
          type: string
          description: Location of the Api Management service to update for a multi-region service. For a service deployed in a single region, this parameter is not required.
      description: Parameter supplied to the Apply Network configuration operation.
    ApiManagementServiceIdentity:
      description: Identity properties of the Api Management service resource.
      properties:
        type:
          type: string
          description: The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ApimIdentityType
            modelAsString: true
        principalId:
          type: string
          format: uuid
          readOnly: true
          description: The principal id of the identity.
        tenantId:
          type: string
          format: uuid
          readOnly: true
          description: The client tenant id of the identity.
        userAssignedIdentities:
          description: "The list of user identities associated with the resource. The user identity \r\ndictionary key references will be ARM resource ids in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserIdentityProperties'
      required:
        - type
    UserIdentityProperties:
      type: object
      properties:
        principalId:
          description: The principal id of user assigned identity.
          type: string
        clientId:
          description: The client id of user assigned identity.
          type: string
    ErrorFieldContract:
      properties:
        code:
          type: string
          description: Property level error code.
        message:
          type: string
          description: Human-readable representation of property-level error.
        target:
          type: string
          description: Property name.
      description: Error Field contract.
    ErrorResponseBody:
      properties:
        code:
          type: string
          description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
        message:
          type: string
          description: Human-readable representation of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorFieldContract'
          x-ms-identifiers:
            - message
            - target
          description: The list of invalid fields send in request, in case of validation error.
      description: Error Body contract.
    RegionContract:
      properties:
        name:
          type: string
          description: Region name.
          readOnly: true
        isMasterRegion:
          description: whether Region is the master region.
          type: boolean
        isDeleted:
          description: whether Region is deleted.
          type: boolean
      description: Region profile.
    RegionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RegionContract'
          x-ms-identifiers:
            - name
          description: Lists of Regions.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Lists Regions operation response details.
    ApiManagementSkuCapacity:
      properties:
        minimum:
          type: integer
          readOnly: true
          format: int32
          description: The minimum capacity.
        maximum:
          type: integer
          readOnly: true
          format: int32
          description: The maximum capacity that can be set.
        default:
          type: integer
          readOnly: true
          format: int32
          description: The default capacity.
        scaleType:
          type: string
          readOnly: true
          description: The scale type applicable to the sku.
          enum:
            - Automatic
            - Manual
            - None
          x-ms-enum:
            name: ApiManagementSkuCapacityScaleType
            modelAsString: false
      description: Describes scaling information of a SKU.
    ApiManagementSkuCosts:
      properties:
        meterID:
          type: string
          readOnly: true
          description: Used for querying price from commerce.
        quantity:
          type: integer
          readOnly: true
          format: int64
          description: The multiplier is needed to extend the base metered cost.
        extendedUnit:
          type: string
          readOnly: true
          description: An invariant to show the extended unit.
      description: Describes metadata for retrieving price info.
    ApiManagementSkuCapabilities:
      properties:
        name:
          type: string
          readOnly: true
          description: An invariant to describe the feature.
        value:
          type: string
          readOnly: true
          description: An invariant if the feature is measured by quantity.
      description: Describes The SKU capabilities object.
    ApiManagementSkuZoneDetails:
      properties:
        name:
          type: array
          readOnly: true
          items:
            type: string
          description: The set of zones that the SKU is available in with the specified capabilities.
        capabilities:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ApiManagementSkuCapabilities'
          x-ms-identifiers:
            - name
          description: A list of capabilities that are available for the SKU in the specified list of zones.
      description: Describes The zonal capabilities of a SKU.
    ApiManagementSkuRestrictions:
      properties:
        type:
          type: string
          readOnly: true
          description: The type of restrictions.
          enum:
            - Location
            - Zone
          x-ms-enum:
            name: ApiManagementSkuRestrictionsType
            modelAsString: false
        values:
          type: array
          readOnly: true
          items:
            type: string
          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
        restrictionInfo:
          $ref: '#/components/schemas/ApiManagementSkuRestrictionInfo'
          readOnly: true
          description: The information about the restriction where the SKU cannot be used.
        reasonCode:
          type: string
          readOnly: true
          description: The reason for restriction.
          enum:
            - QuotaId
            - NotAvailableForSubscription
          x-ms-enum:
            name: ApiManagementSkuRestrictionsReasonCode
            modelAsString: false
      description: Describes scaling information of a SKU.
    ApiManagementSku:
      properties:
        resourceType:
          readOnly: true
          type: string
          description: The type of resource the SKU applies to.
        name:
          readOnly: true
          type: string
          description: The name of SKU.
        tier:
          readOnly: true
          type: string
          description: Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
        size:
          readOnly: true
          type: string
          description: The Size of the SKU.
        family:
          readOnly: true
          type: string
          description: The Family of this particular SKU.
        kind:
          readOnly: true
          type: string
          description: The Kind of resources that are supported in this SKU.
        capacity:
          $ref: '#/components/schemas/ApiManagementSkuCapacity'
          readOnly: true
          description: Specifies the number of virtual machines in the scale set.
        locations:
          type: array
          readOnly: true
          items:
            type: string
          description: The set of locations that the SKU is available.
        locationInfo:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ApiManagementSkuLocationInfo'
          x-ms-identifiers:
            - location
          description: A list of locations and availability zones in those locations where the SKU is available.
        apiVersions:
          type: array
          readOnly: true
          items:
            type: string
          description: The api versions that support this SKU.
        costs:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ApiManagementSkuCosts'
          x-ms-identifiers:
            - meterID
          description: Metadata for retrieving price info.
        capabilities:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ApiManagementSkuCapabilities'
          x-ms-identifiers:
            - name
          description: A name value pair to describe the capability.
        restrictions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ApiManagementSkuRestrictions'
          x-ms-identifiers: []
          description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
      description: Describes an available ApiManagement SKU.
    ApiManagementSkuLocationInfo:
      properties:
        location:
          readOnly: true
          type: string
          description: Location of the SKU
        zones:
          readOnly: true
          type: array
          items:
            type: string
          description: List of availability zones where the SKU is supported.
        zoneDetails:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ApiManagementSkuZoneDetails'
          x-ms-identifiers:
            - name
          description: Details of capabilities available to a SKU in specific zones.
    ApiManagementSkuRestrictionInfo:
      properties:
        locations:
          readOnly: true
          type: array
          items:
            type: string
          description: Locations where the SKU is restricted
        zones:
          readOnly: true
          type: array
          items:
            type: string
          description: List of availability zones where the SKU is restricted.
    ApiManagementSkusResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApiManagementSku'
          x-ms-identifiers:
            - name
            - resourceType
          description: The list of skus available for the subscription.
        nextLink:
          type: string
          readOnly: true
          description: The URI to fetch the next page of Resource Skus. Call ListNext() with this URI to fetch the next page of Resource Skus
      required:
        - value
      description: The List Resource Skus operation response.
    ConnectivityStatusContract:
      properties:
        name:
          type: string
          description: The hostname of the resource which the service depends on. This can be the database, storage or any other azure resource on which the service depends upon.
          minLength: 1
        status:
          type: string
          enum:
            - initializing
            - success
            - failure
          x-ms-enum:
            name: ConnectivityStatusType
            modelAsString: true
          description: Resource Connectivity Status Type identifier.
        error:
          type: string
          description: Error details of the connectivity to the resource.
        lastUpdated:
          type: string
          format: date-time
          description: |
            The date when the resource connectivity status was last updated. This status should be updated every 15 minutes. If this status has not been updated, then it means that the service has lost network connectivity to the resource, from inside the Virtual Network.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        lastStatusChange:
          type: string
          format: date-time
          description: |
            The date when the resource connectivity status last Changed from success to failure or vice-versa. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        resourceType:
          type: string
          description: Resource Type.
        isOptional:
          type: boolean
          description: Whether this is optional.
      required:
        - name
        - status
        - lastUpdated
        - lastStatusChange
        - resourceType
        - isOptional
      description: Details about connectivity to a resource.
    NetworkStatusContractByLocation:
      properties:
        location:
          type: string
          description: Location of service
          minLength: 1
        networkStatus:
          $ref: '#/components/schemas/NetworkStatusContract'
          description: Network status in Location
      description: Network Status in the Location
    NetworkStatusContract:
      properties:
        dnsServers:
          type: array
          items:
            type: string
          description: Gets the list of DNS servers IPV4 addresses.
        connectivityStatus:
          type: array
          items:
            $ref: '#/components/schemas/ConnectivityStatusContract'
          x-ms-identifiers:
            - name
            - resourceType
          description: Gets the list of Connectivity Status to the Resources on which the service depends upon.
      required:
        - dnsServers
        - connectivityStatus
      description: Network Status details.
    AccessInformationCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessInformationContract'
          description: Page values.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged AccessInformation list representation.
    AccessInformationContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessInformationContractProperties'
          description: AccessInformation entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Tenant Settings.
    AccessInformationContractProperties:
      properties:
        id:
          type: string
          description: Access Information type ('access' or 'gitAccess')
        principalId:
          type: string
          description: Principal (User) Identifier.
        enabled:
          type: boolean
          description: Determines whether direct access is enabled.
      description: Tenant access information contract of the API Management service.
    AccessInformationSecretsContract:
      properties:
        id:
          type: string
          description: Access Information type ('access' or 'gitAccess')
        principalId:
          type: string
          description: Principal (User) Identifier.
        primaryKey:
          type: string
          description: Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
        secondaryKey:
          type: string
          description: Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
        enabled:
          type: boolean
          description: Determines whether direct access is enabled.
      description: Tenant access information contract of the API Management service.
    AccessInformationCreateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessInformationCreateParameterProperties'
          description: Tenant access information update parameter properties.
      description: Tenant access information update parameters.
    AccessInformationCreateParameterProperties:
      properties:
        principalId:
          type: string
          description: Principal (User) Identifier.
        primaryKey:
          type: string
          description: Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
        secondaryKey:
          type: string
          description: Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
        enabled:
          type: boolean
          description: Determines whether direct access is enabled.
      description: Tenant access information update parameters of the API Management service
    AccessInformationUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessInformationUpdateParameterProperties'
          description: Tenant access information update parameter properties.
      description: Tenant access information update parameters.
    AccessInformationUpdateParameterProperties:
      properties:
        enabled:
          type: boolean
          description: Determines whether direct access is enabled.
      description: Tenant access information update parameters of the API Management service
    TenantSettingsCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TenantSettingsContract'
          description: Page values.
          readOnly: true
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged AccessInformation list representation.
    TenantSettingsContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TenantSettingsContractProperties'
          description: TenantSettings entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Tenant Settings.
    TenantSettingsContractProperties:
      properties:
        settings:
          type: object
          additionalProperties:
            type: string
          description: Tenant settings
      description: Tenant access information contract of the API Management service.
    ApiCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApiContract'
          description: Page values.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged API list representation.
    ApiContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiContractProperties'
          description: API entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: API details.
    ApiContractProperties:
      properties:
        sourceApiId:
          type: string
          description: API identifier of the source API.
        displayName:
          type: string
          description: API name. Must be 1 to 300 characters long.
          minLength: 1
          maxLength: 300
        serviceUrl:
          type: string
          description: Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
          minLength: 0
          maxLength: 2000
        path:
          type: string
          description: Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
          minLength: 0
          maxLength: 400
        protocols:
          type: array
          items:
            type: string
            enum:
              - http
              - https
              - ws
              - wss
            x-ms-enum:
              name: Protocol
              modelAsString: true
          description: Describes on which protocols the operations in this API can be invoked.
        apiVersionSet:
          description: Version set details
          $ref: '#/components/schemas/ApiVersionSetContractDetails'
      allOf:
        - $ref: '#/components/schemas/ApiEntityBaseContract'
      required:
        - path
      description: API Entity Properties
    ApiCreateOrUpdateParameter:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiCreateOrUpdateProperties'
          description: API entity create of update properties.
      description: API Create or Update Parameters.
    ApiCreateOrUpdateProperties:
      properties:
        value:
          type: string
          description: Content value when Importing an API.
        format:
          type: string
          description: Format of the Content in which the API is getting imported.
          enum:
            - wadl-xml
            - wadl-link-json
            - swagger-json
            - swagger-link-json
            - wsdl
            - wsdl-link
            - openapi
            - openapi+json
            - openapi-link
            - openapi+json-link
            - graphql-link
          x-ms-enum:
            name: ContentFormat
            modelAsString: true
            values:
              - value: wadl-xml
                description: The contents are inline and Content type is a WADL document.
              - value: wadl-link-json
                description: The WADL document is hosted on a publicly accessible internet address.
              - value: swagger-json
                description: The contents are inline and Content Type is a OpenAPI 2.0 JSON Document.
              - value: swagger-link-json
                description: The OpenAPI 2.0 JSON document is hosted on a publicly accessible internet address.
              - value: wsdl
                description: The contents are inline and the document is a WSDL/Soap document.
              - value: wsdl-link
                description: The WSDL document is hosted on a publicly accessible internet address.
              - value: openapi
                description: The contents are inline and Content Type is a OpenAPI 3.0 YAML Document.
              - value: openapi+json
                description: The contents are inline and Content Type is a OpenAPI 3.0 JSON Document.
              - value: openapi-link
                description: The OpenAPI 3.0 YAML document is hosted on a publicly accessible internet address.
              - value: openapi+json-link
                description: The OpenAPI 3.0 JSON document is hosted on a publicly accessible internet address.
              - value: graphql-link
                description: The GraphQL API endpoint hosted on a publicly accessible internet address.
        wsdlSelector:
          type: object
          description: Criteria to limit import of WSDL to a subset of the document.
          properties:
            wsdlServiceName:
              type: string
              description: Name of service to import from WSDL
            wsdlEndpointName:
              type: string
              description: Name of endpoint(port) to import from WSDL
        apiType:
          type: string
          description: |-
            Type of API to create. 
             * `http` creates a REST API 
             * `soap` creates a SOAP pass-through API  
             * `websocket` creates websocket API 
             * `graphql` creates GraphQL API.
          enum:
            - http
            - soap
            - websocket
            - graphql
          x-ms-client-name: SoapApiType
          x-ms-enum:
            name: SoapApiType
            modelAsString: true
            values:
              - value: http
                description: Imports a SOAP API having a RESTful front end.
                name: SoapToRest
              - value: soap
                description: Imports the SOAP API having a SOAP front end.
                name: SoapPassThrough
              - value: websocket
                description: Imports the API having a Websocket front end.
                name: WebSocket
              - value: graphql
                description: Imports the API having a GraphQL front end.
                name: GraphQL
      allOf:
        - $ref: '#/components/schemas/ApiContractProperties'
      description: API Create or Update Properties.
    ApiEntityBaseContract:
      properties:
        description:
          type: string
          description: Description of the API. May include HTML formatting tags.
        authenticationSettings:
          $ref: '#/components/schemas/AuthenticationSettingsContract'
          description: Collection of authentication settings included into this API.
        subscriptionKeyParameterNames:
          $ref: '#/components/schemas/SubscriptionKeyParameterNamesContract'
          description: Protocols over which API is made available.
        type:
          type: string
          description: Type of API.
          enum:
            - http
            - soap
            - websocket
            - graphql
          x-ms-client-name: ApiType
          x-ms-enum:
            name: ApiType
            modelAsString: true
        apiRevision:
          type: string
          description: Describes the revision of the API. If no value is provided, default revision 1 is created
          minLength: 1
          maxLength: 100
        apiVersion:
          type: string
          description: Indicates the version identifier of the API if the API is versioned
          maxLength: 100
        isCurrent:
          type: boolean
          description: Indicates if API revision is current api revision.
        isOnline:
          type: boolean
          description: Indicates if API revision is accessible via the gateway.
          readOnly: true
        apiRevisionDescription:
          type: string
          description: Description of the API Revision.
          maxLength: 256
        apiVersionDescription:
          type: string
          description: Description of the API Version.
          maxLength: 256
        apiVersionSetId:
          type: string
          description: A resource identifier for the related ApiVersionSet.
        subscriptionRequired:
          type: boolean
          description: Specifies whether an API or Product subscription is required for accessing the API.
        termsOfServiceUrl:
          type: string
          description: ' A URL to the Terms of Service for the API. MUST be in the format of a URL.'
        contact:
          $ref: '#/components/schemas/ApiContactInformation'
          description: Contact information for the API.
        license:
          $ref: '#/components/schemas/ApiLicenseInformation'
          description: License information for the API.
      description: API base contract details.
    ApiContactInformation:
      type: object
      properties:
        name:
          type: string
          description: The identifying name of the contact person/organization
        url:
          type: string
          description: The URL pointing to the contact information. MUST be in the format of a URL
        email:
          type: string
          description: The email address of the contact person/organization. MUST be in the format of an email address
      description: API contact information
    ApiLicenseInformation:
      type: object
      description: API license information
      properties:
        name:
          type: string
          description: The license name used for the API
        url:
          type: string
          description: A URL to the license used for the API. MUST be in the format of a URL
    ApiExportResult:
      properties:
        id:
          type: string
          description: ResourceId of the API which was exported.
        format:
          type: string
          enum:
            - swagger-link-json
            - wadl-link-json
            - wsdl-link+xml
            - openapi-link
          x-ms-client-name: ExportResultFormat
          x-ms-enum:
            name: ExportResultFormat
            modelAsString: true
            values:
              - value: swagger-link-json
                description: The API Definition is exported in OpenAPI Specification 2.0 format to the Storage Blob.
                name: Swagger
              - value: wsdl-link+xml
                description: The API Definition is exported in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap`
                name: Wsdl
              - value: wadl-link-json
                description: Export the API Definition in WADL Schema to Storage Blob.
                name: Wadl
              - value: openapi-link
                description: Export the API Definition in OpenAPI Specification 3.0 to Storage Blob.
                name: OpenApi
          description: Format in which the API Details are exported to the Storage Blob with Sas Key valid for 5 minutes.
        value:
          type: object
          description: The object defining the schema of the exported API Detail
          properties:
            link:
              type: string
              description: Link to the Storage Blob containing the result of the export operation. The Blob Uri is only valid for 5 minutes.
      description: API Export result.
    ApiReleaseCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApiReleaseContract'
          description: Page values.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged ApiRelease list representation.
    ApiReleaseContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiReleaseContractProperties'
          description: ApiRelease entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: ApiRelease details.
    ApiReleaseContractProperties:
      properties:
        apiId:
          type: string
          description: Identifier of the API the release belongs to.
        createdDateTime:
          type: string
          readOnly: true
          format: date-time
          description: 'The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.'
        updatedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The time the API release was updated.
        notes:
          type: string
          description: Release Notes
      description: API Release details
    ApiRevisionCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApiRevisionContract'
          x-ms-identifiers:
            - apiId
          description: Page values.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged API Revision list representation.
    ApiRevisionContract:
      properties:
        apiId:
          type: string
          readOnly: true
          description: Identifier of the API Revision.
        apiRevision:
          type: string
          minLength: 1
          maxLength: 100
          readOnly: true
          description: Revision number of API.
        createdDateTime:
          type: string
          readOnly: true
          format: date-time
          description: 'The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.'
        updatedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: 'The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.'
        description:
          type: string
          readOnly: true
          maxLength: 256
          description: Description of the API Revision.
        privateUrl:
          type: string
          readOnly: true
          description: Gateway URL for accessing the non-current API Revision.
        isOnline:
          type: boolean
          readOnly: true
          description: Indicates if API revision is the current api revision.
        isCurrent:
          type: boolean
          readOnly: true
          description: Indicates if API revision is accessible via the gateway.
      description: Summary of revision metadata.
    ApiRevisionInfoContract:
      description: Object used to create an API Revision or Version based on an existing API Revision
      properties:
        sourceApiId:
          type: string
          description: Resource identifier of API to be used to create the revision from.
        apiVersionName:
          type: string
          maxLength: 100
          description: Version identifier for the new API Version.
        apiRevisionDescription:
          type: string
          maxLength: 256
          description: Description of new API Revision.
        apiVersionSet:
          description: Version set details
          $ref: '#/components/schemas/ApiVersionSetContractDetails'
    ApiTagResourceContractProperties:
      properties:
        id:
          type: string
          description: API identifier in the form /apis/{apiId}.
        name:
          type: string
          description: API name.
          minLength: 1
          maxLength: 300
        serviceUrl:
          type: string
          description: Absolute URL of the backend service implementing this API.
          minLength: 1
          maxLength: 2000
        path:
          type: string
          description: Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
          minLength: 0
          maxLength: 400
        protocols:
          type: array
          items:
            type: string
            enum:
              - http
              - https
              - ws
              - wss
            x-ms-enum:
              name: Protocol
              modelAsString: true
          description: Describes on which protocols the operations in this API can be invoked.
      allOf:
        - $ref: '#/components/schemas/ApiEntityBaseContract'
      description: API contract properties for the Tag Resources.
    ApiUpdateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiContractUpdateProperties'
          description: Properties of the API entity that can be updated.
      description: API update contract details.
    ApiContractUpdateProperties:
      properties:
        displayName:
          type: string
          description: API name.
          minLength: 1
          maxLength: 300
        serviceUrl:
          type: string
          description: Absolute URL of the backend service implementing this API.
          minLength: 1
          maxLength: 2000
        path:
          type: string
          description: Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
          minLength: 0
          maxLength: 400
        protocols:
          type: array
          items:
            type: string
            enum:
              - http
              - https
              - ws
              - wss
            x-ms-enum:
              name: Protocol
              modelAsString: true
          description: Describes on which protocols the operations in this API can be invoked.
      allOf:
        - $ref: '#/components/schemas/ApiEntityBaseContract'
      description: API update contract properties.
    ApiVersionSetCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApiVersionSetContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged API Version Set list representation.
    ApiVersionSetContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiVersionSetContractProperties'
          description: API VersionSet contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: API Version Set Contract details.
    ApiVersionSetContractDetails:
      description: 'An API Version Set contains the common configuration for a set of API Versions relating '
      properties:
        id:
          type: string
          description: Identifier for existing API Version Set. Omit this value to create a new Version Set.
        name:
          type: string
          description: The display Name of the API Version Set.
        description:
          type: string
          description: Description of API Version Set.
        versioningScheme:
          type: string
          description: An value that determines where the API Version identifier will be located in a HTTP request.
          enum:
            - Segment
            - Query
            - Header
        versionQueryName:
          type: string
          description: Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
        versionHeaderName:
          type: string
          description: Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
    ApiVersionSetContractProperties:
      properties:
        displayName:
          type: string
          description: Name of API Version Set
          minLength: 1
          maxLength: 100
        versioningScheme:
          type: string
          description: An value that determines where the API Version identifier will be located in a HTTP request.
          enum:
            - Segment
            - Query
            - Header
          x-ms-enum:
            name: versioningScheme
            modelAsString: true
            values:
              - value: Segment
                description: The API Version is passed in a path segment.
              - value: Query
                description: The API Version is passed in a query parameter.
              - value: Header
                description: The API Version is passed in a HTTP header.
      allOf:
        - $ref: '#/components/schemas/ApiVersionSetEntityBase'
      required:
        - displayName
        - versioningScheme
      description: Properties of an API Version Set.
    ApiVersionSetEntityBase:
      properties:
        description:
          type: string
          description: Description of API Version Set.
        versionQueryName:
          type: string
          description: Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
          minLength: 1
          maxLength: 100
        versionHeaderName:
          type: string
          description: Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
          minLength: 1
          maxLength: 100
      description: API Version set base parameters
    ApiVersionSetUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiVersionSetUpdateParametersProperties'
          description: Parameters to update or create an API Version Set Contract.
      description: Parameters to update or create an API Version Set Contract.
    ApiVersionSetUpdateParametersProperties:
      properties:
        displayName:
          type: string
          description: Name of API Version Set
          minLength: 1
          maxLength: 100
        versioningScheme:
          type: string
          description: An value that determines where the API Version identifier will be located in a HTTP request.
          enum:
            - Segment
            - Query
            - Header
          x-ms-enum:
            name: versioningScheme
            modelAsString: true
            values:
              - value: Segment
                description: The API Version is passed in a path segment.
              - value: Query
                description: The API Version is passed in a query parameter.
              - value: Header
                description: The API Version is passed in a HTTP header.
      allOf:
        - $ref: '#/components/schemas/ApiVersionSetEntityBase'
      description: Properties used to create or update an API Version Set.
    AuthenticationSettingsContract:
      properties:
        oAuth2:
          $ref: '#/components/schemas/OAuth2AuthenticationSettingsContract'
          description: OAuth2 Authentication settings
        openid:
          $ref: '#/components/schemas/OpenIdAuthenticationSettingsContract'
          description: OpenID Connect Authentication Settings
      description: API Authentication Settings.
    AuthorizationServerCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationServerContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged OAuth2 Authorization Servers list representation.
    AuthorizationServerContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AuthorizationServerContractProperties'
          description: Properties of the External OAuth authorization server Contract.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: External OAuth authorization server settings.
    AuthorizationServerContractBaseProperties:
      properties:
        description:
          type: string
          description: Description of the authorization server. Can contain HTML formatting tags.
        authorizationMethods:
          type: array
          items:
            type: string
            enum:
              - HEAD
              - OPTIONS
              - TRACE
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
            x-ms-enum:
              name: AuthorizationMethod
              modelAsString: false
          description: HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
        clientAuthenticationMethod:
          type: array
          items:
            type: string
            enum:
              - Basic
              - Body
            x-ms-enum:
              name: ClientAuthenticationMethod
              modelAsString: true
              values:
                - value: Basic
                  description: Basic Client Authentication method.
                - value: Body
                  description: Body based Authentication method.
          description: Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.
        tokenBodyParameters:
          type: array
          items:
            $ref: '#/components/schemas/TokenBodyParameterContract'
          x-ms-identifiers:
            - name
          description: 'Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.'
        tokenEndpoint:
          type: string
          description: OAuth token endpoint. Contains absolute URI to entity being referenced.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-3.1
        supportState:
          type: boolean
          description: If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-3.1
        defaultScope:
          type: string
          description: Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-3.3
        bearerTokenSendingMethods:
          type: array
          items:
            type: string
            enum:
              - authorizationHeader
              - query
            x-ms-enum:
              name: BearerTokenSendingMethod
              modelAsString: true
          description: 'Specifies the mechanism by which access token is passed to the API. '
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-4
        resourceOwnerUsername:
          type: string
          description: Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
        resourceOwnerPassword:
          type: string
          description: Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
      description: External OAuth authorization server Update settings contract.
    AuthorizationServerContractProperties:
      properties:
        displayName:
          type: string
          description: User-friendly authorization server name.
          minLength: 1
          maxLength: 50
        clientRegistrationEndpoint:
          type: string
          description: Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
        authorizationEndpoint:
          type: string
          description: OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
        grantTypes:
          type: array
          items:
            type: string
            enum:
              - authorizationCode
              - implicit
              - resourceOwnerPassword
              - clientCredentials
            x-ms-enum:
              name: GrantType
              modelAsString: true
              values:
                - value: authorizationCode
                  description: Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1.
                - value: implicit
                  description: Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2.
                - value: resourceOwnerPassword
                  description: Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3.
                - value: clientCredentials
                  description: Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4.
          description: Form of an authorization grant, which the client uses to request the access token.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-4
        clientId:
          type: string
          description: Client or app id registered with this authorization server.
        clientSecret:
          x-ms-secret: true
          type: string
          description: Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
      allOf:
        - $ref: '#/components/schemas/AuthorizationServerContractBaseProperties'
      required:
        - displayName
        - clientRegistrationEndpoint
        - authorizationEndpoint
        - clientId
        - grantTypes
      description: External OAuth authorization server settings Properties.
    AuthorizationServerUpdateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AuthorizationServerUpdateContractProperties'
          description: Properties of the External OAuth authorization server update Contract.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: External OAuth authorization server settings.
    AuthorizationServerUpdateContractProperties:
      properties:
        displayName:
          type: string
          description: User-friendly authorization server name.
          minLength: 1
          maxLength: 50
        clientRegistrationEndpoint:
          type: string
          description: Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
        authorizationEndpoint:
          type: string
          description: OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
        grantTypes:
          type: array
          items:
            type: string
            enum:
              - authorizationCode
              - implicit
              - resourceOwnerPassword
              - clientCredentials
            x-ms-enum:
              name: GrantType
              modelAsString: true
              values:
                - value: authorizationCode
                  description: Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1.
                - value: implicit
                  description: Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2.
                - value: resourceOwnerPassword
                  description: Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3.
                - value: clientCredentials
                  description: Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4.
          description: Form of an authorization grant, which the client uses to request the access token.
          externalDocs:
            url: http://tools.ietf.org/html/rfc6749#section-4
        clientId:
          type: string
          description: Client or app id registered with this authorization server.
        clientSecret:
          x-ms-secret: true
          type: string
          description: Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
      allOf:
        - $ref: '#/components/schemas/AuthorizationServerContractBaseProperties'
      description: External OAuth authorization server Update settings contract.
    AuthorizationServerSecretsContract:
      properties:
        clientSecret:
          type: string
          description: oAuth Authorization Server Secrets.
        resourceOwnerUsername:
          type: string
          description: Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
        resourceOwnerPassword:
          type: string
          description: Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
      description: OAuth Server Secrets Contract.
    BackendAuthorizationHeaderCredentials:
      properties:
        scheme:
          type: string
          description: Authentication Scheme name.
          minLength: 1
          maxLength: 100
        parameter:
          type: string
          description: Authentication Parameter value.
          minLength: 1
          maxLength: 300
      required:
        - scheme
        - parameter
      description: Authorization header information.
    BackendBaseParameters:
      properties:
        title:
          type: string
          description: Backend Title.
          minLength: 1
          maxLength: 300
        description:
          type: string
          description: Backend Description.
          minLength: 1
          maxLength: 2000
        resourceId:
          type: string
          description: Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or API Apps.
          minLength: 1
          maxLength: 2000
        properties:
          $ref: '#/components/schemas/BackendProperties'
          description: Backend Properties contract
        credentials:
          $ref: '#/components/schemas/BackendCredentialsContract'
          description: Backend Credentials Contract Properties
        proxy:
          $ref: '#/components/schemas/BackendProxyContract'
          description: Backend Proxy Contract Properties
        tls:
          $ref: '#/components/schemas/BackendTlsProperties'
          description: Backend TLS Properties
      description: Backend entity base Parameter set.
    BackendCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BackendContract'
          description: Backend values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Backend list representation.
    BackendContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BackendContractProperties'
          description: Backend entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Backend details.
    BackendContractProperties:
      properties:
        url:
          type: string
          description: Runtime Url of the Backend.
          minLength: 1
          maxLength: 2000
        protocol:
          type: string
          enum:
            - http
            - soap
          x-ms-enum:
            name: BackendProtocol
            modelAsString: true
            values:
              - value: http
                description: The Backend is a RESTful service.
              - value: soap
                description: The Backend is a SOAP service.
          description: Backend communication protocol.
      allOf:
        - $ref: '#/components/schemas/BackendBaseParameters'
      required:
        - url
        - protocol
      description: Parameters supplied to the Create Backend operation.
    BackendCredentialsContract:
      properties:
        certificateIds:
          type: array
          items:
            type: string
          maxItems: 32
          description: List of Client Certificate Ids.
        certificate:
          type: array
          items:
            type: string
          maxItems: 32
          description: List of Client Certificate Thumbprints. Will be ignored if certificatesIds are provided.
        query:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Query Parameter description.
        header:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Header Parameter description.
        authorization:
          description: Authorization header authentication
          $ref: '#/components/schemas/BackendAuthorizationHeaderCredentials'
      description: Details of the Credentials used to connect to Backend.
    BackendProperties:
      properties:
        serviceFabricCluster:
          $ref: '#/components/schemas/BackendServiceFabricClusterProperties'
          description: Backend Service Fabric Cluster Properties
      description: Properties specific to the Backend Type.
    BackendProxyContract:
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/system.net.webproxy(v=vs.110).aspx
        description: Backend entity uses these details to connect to a WebProxy.
      properties:
        url:
          type: string
          description: WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
          minLength: 1
          maxLength: 2000
        username:
          type: string
          description: Username to connect to the WebProxy server
        password:
          type: string
          description: Password to connect to the WebProxy Server
      required:
        - url
      description: Details of the Backend WebProxy Server to use in the Request to Backend.
    BackendReconnectContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BackendReconnectProperties'
          description: Reconnect request properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Reconnect request parameters.
    BackendReconnectProperties:
      properties:
        after:
          type: string
          format: duration
          description: Duration in ISO8601 format after which reconnect will be initiated. Minimum duration of the Reconnect is PT2M.
      description: Properties to control reconnect requests.
    BackendServiceFabricClusterProperties:
      properties:
        clientCertificateId:
          description: The client certificate id for the management endpoint.
          type: string
        clientCertificatethumbprint:
          description: The client certificate thumbprint for the management endpoint. Will be ignored if certificatesIds are provided
          type: string
        maxPartitionResolutionRetries:
          description: Maximum number of retries while attempting resolve the partition.
          format: int32
          type: integer
        managementEndpoints:
          type: array
          items:
            type: string
          description: The cluster management endpoint.
        serverCertificateThumbprints:
          type: array
          items:
            type: string
          description: Thumbprints of certificates cluster management service uses for tls communication
        serverX509Names:
          type: array
          items:
            $ref: '#/components/schemas/X509CertificateName'
          x-ms-identifiers:
            - name
          description: Server X509 Certificate Names Collection
      required:
        - managementEndpoints
      description: Properties of the Service Fabric Type Backend.
    BackendTlsProperties:
      properties:
        validateCertificateChain:
          description: Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
          type: boolean
          default: true
        validateCertificateName:
          description: Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
          type: boolean
          default: true
      description: Properties controlling TLS Certificate Validation.
    BackendUpdateParameterProperties:
      properties:
        url:
          type: string
          description: Runtime Url of the Backend.
          minLength: 1
          maxLength: 2000
        protocol:
          type: string
          enum:
            - http
            - soap
          x-ms-enum:
            name: BackendProtocol
            modelAsString: true
            values:
              - value: http
                description: The Backend is a RESTful service.
              - value: soap
                description: The Backend is a SOAP service.
          description: Backend communication protocol.
      allOf:
        - $ref: '#/components/schemas/BackendBaseParameters'
      description: Parameters supplied to the Update Backend operation.
    BackendUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BackendUpdateParameterProperties'
          description: Backend entity update contract properties.
      description: Backend update parameters.
    BearerTokenSendingMethodsContract:
      type: string
      description: Form of an authorization grant, which the client uses to request the access token.
      enum:
        - authorizationHeader
        - query
      x-ms-enum:
        modelAsString: true
        name: bearerTokenSendingMethods
        values:
          - value: authorizationHeader
            description: Access token will be transmitted in the Authorization header using Bearer schema
          - value: query
            description: Access token will be transmitted as query parameters.
    BodyDiagnosticSettings:
      properties:
        bytes:
          type: integer
          format: int32
          maximum: 8192
          description: Number of request body bytes to log.
      description: Body logging settings.
    CacheCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CacheContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Caches list representation.
    CacheContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CacheContractProperties'
          description: Cache properties details.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Cache details.
    CacheContractProperties:
      properties:
        description:
          type: string
          description: Cache description
          maxLength: 2000
        connectionString:
          type: string
          description: Runtime connection string to cache
          maxLength: 300
        useFromLocation:
          type: string
          description: Location identifier to use cache from (should be either 'default' or valid Azure region identifier)
          maxLength: 256
        resourceId:
          type: string
          description: Original uri of entity in external system cache points to
          maxLength: 2000
      required:
        - connectionString
        - useFromLocation
      description: Properties of the Cache contract.
    CacheUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CacheUpdateProperties'
          description: Cache update properties details.
      description: Cache update details.
    CacheUpdateProperties:
      properties:
        description:
          type: string
          description: Cache description
          maxLength: 2000
        connectionString:
          type: string
          description: Runtime connection string to cache
          maxLength: 300
        useFromLocation:
          type: string
          description: Location identifier to use cache from (should be either 'default' or valid Azure region identifier)
          maxLength: 256
        resourceId:
          type: string
          description: Original uri of entity in external system cache points to
          maxLength: 2000
      description: Parameters supplied to the Update Cache operation.
    CertificateCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CertificateContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Certificates list representation.
    CertificateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CertificateContractProperties'
          description: Certificate properties details.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Certificate details.
    CertificateContractProperties:
      properties:
        subject:
          type: string
          description: Subject attribute of the certificate.
        thumbprint:
          type: string
          description: Thumbprint of the certificate.
        expirationDate:
          type: string
          format: date-time
          description: |
            Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        keyVault:
          $ref: '#/components/schemas/KeyVaultContractProperties'
          description: KeyVault location details of the certificate.
      required:
        - subject
        - thumbprint
        - expirationDate
      description: Properties of the Certificate contract.
    CertificateCreateOrUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CertificateCreateOrUpdateProperties'
          description: Certificate create or update properties details.
      description: Certificate create or update details.
    CertificateCreateOrUpdateProperties:
      properties:
        data:
          type: string
          description: Base 64 encoded certificate using the application/x-pkcs12 representation.
        password:
          type: string
          description: Password for the Certificate
        keyVault:
          $ref: '#/components/schemas/KeyVaultContractCreateProperties'
          description: KeyVault location details of the certificate.
      description: Parameters supplied to the CreateOrUpdate certificate operation.
    DataMasking:
      properties:
        queryParams:
          type: array
          items:
            $ref: '#/components/schemas/DataMaskingEntity'
          x-ms-identifiers: []
          description: Masking settings for Url query parameters
        headers:
          type: array
          items:
            $ref: '#/components/schemas/DataMaskingEntity'
          x-ms-identifiers: []
          description: Masking settings for headers
    DataMaskingEntity:
      properties:
        value:
          type: string
          description: The name of an entity to mask (e.g. a name of a header or a query parameter).
        mode:
          type: string
          enum:
            - Mask
            - Hide
          x-ms-enum:
            name: DataMaskingMode
            modelAsString: true
            values:
              - value: Mask
                description: Mask the value of an entity.
              - value: Hide
                description: Hide the presence of an entity.
          description: Data masking mode.
    DeployConfigurationParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DeployConfigurationParameterProperties'
          description: Deploy Configuration Parameter contract properties.
      description: Deploy Tenant Configuration Contract.
    DeployConfigurationParameterProperties:
      properties:
        branch:
          type: string
          description: The name of the Git branch from which the configuration is to be deployed to the configuration database.
        force:
          type: boolean
          description: The value enforcing deleting subscriptions to products that are deleted in this update.
      required:
        - branch
      description: Parameters supplied to the Deploy Configuration operation.
    DiagnosticCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Diagnostic list representation.
    DiagnosticContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiagnosticContractProperties'
          description: Diagnostic entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Diagnostic details.
    DiagnosticContractProperties:
      properties:
        alwaysLog:
          type: string
          enum:
            - allErrors
          x-ms-enum:
            name: AlwaysLog
            modelAsString: true
            values:
              - value: allErrors
                description: Always log all erroneous request regardless of sampling settings.
          description: Specifies for what type of messages sampling settings should not apply.
        loggerId:
          type: string
          description: Resource Id of a target logger.
        sampling:
          $ref: '#/components/schemas/SamplingSettings'
          description: Sampling settings for Diagnostic.
        frontend:
          $ref: '#/components/schemas/PipelineDiagnosticSettings'
          description: Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
        backend:
          $ref: '#/components/schemas/PipelineDiagnosticSettings'
          description: Diagnostic settings for incoming/outgoing HTTP messages to the Backend
        logClientIp:
          type: boolean
          description: Log the ClientIP. Default is false.
        httpCorrelationProtocol:
          type: string
          enum:
            - None
            - Legacy
            - W3C
          x-ms-enum:
            name: HttpCorrelationProtocol
            modelAsString: true
            values:
              - value: None
                description: Do not read and inject correlation headers.
              - value: Legacy
                description: Inject Request-Id and Request-Context headers with request correlation data. See https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/HttpCorrelationProtocol.md.
              - value: W3C
                description: Inject Trace Context headers. See https://w3c.github.io/trace-context.
          description: Sets correlation protocol to use for Application Insights diagnostics.
        verbosity:
          type: string
          enum:
            - verbose
            - information
            - error
          x-ms-enum:
            name: Verbosity
            modelAsString: true
            values:
              - value: verbose
                description: All the traces emitted by trace policies will be sent to the logger attached to this diagnostic instance.
              - value: information
                description: Traces with 'severity' set to 'information' and 'error' will be sent to the logger attached to this diagnostic instance.
              - value: error
                description: Only traces with 'severity' set to 'error' will be sent to the logger attached to this diagnostic instance.
          description: The verbosity level applied to traces emitted by trace policies.
        operationNameFormat:
          type: string
          enum:
            - Name
            - Url
          x-ms-enum:
            name: OperationNameFormat
            modelAsString: true
            values:
              - value: Name
                description: API_NAME;rev=API_REVISION - OPERATION_NAME
              - value: Url
                description: HTTP_VERB URL
          description: The format of the Operation Name for Application Insights telemetries. Default is Name.
        metrics:
          type: boolean
          description: Emit custom metrics via emit-metric policy. Applicable only to Application Insights diagnostic settings.
      required:
        - loggerId
      description: Diagnostic Entity Properties
    EmailTemplateCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EmailTemplateContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged email template list representation.
    EmailTemplateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EmailTemplateContractProperties'
          description: Email Template entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Email Template details.
    EmailTemplateContractProperties:
      properties:
        subject:
          type: string
          description: Subject of the Template.
          minLength: 1
          maxLength: 1000
        body:
          type: string
          description: Email Template Body. This should be a valid XDocument
          minLength: 1
        title:
          type: string
          description: Title of the Template.
        description:
          type: string
          description: Description of the Email Template.
        isDefault:
          type: boolean
          description: Whether the template is the default template provided by API Management or has been edited.
          readOnly: true
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/EmailTemplateParametersContractProperties'
          x-ms-identifiers:
            - title
          description: Email Template Parameter values.
      required:
        - body
        - subject
      description: Email Template Contract properties.
    EmailTemplateParametersContractProperties:
      properties:
        name:
          type: string
          description: Template parameter name.
          minLength: 1
          maxLength: 256
          pattern: ^[A-Za-z0-9-._]+$
        title:
          type: string
          description: Template parameter title.
          minLength: 1
          maxLength: 4096
        description:
          type: string
          description: Template parameter description.
          minLength: 1
          maxLength: 256
          pattern: ^[A-Za-z0-9-._]+$
      description: Email Template Parameter contract.
    EmailTemplateUpdateParameterProperties:
      properties:
        subject:
          type: string
          description: Subject of the Template.
          minLength: 1
          maxLength: 1000
        title:
          type: string
          description: Title of the Template.
        description:
          type: string
          description: Description of the Email Template.
        body:
          type: string
          description: Email Template Body. This should be a valid XDocument
          minLength: 1
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/EmailTemplateParametersContractProperties'
          x-ms-identifiers:
            - title
          description: Email Template Parameter values.
      description: Email Template Update Contract properties.
    EmailTemplateUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EmailTemplateUpdateParameterProperties'
          description: Email Template Update contract properties.
      description: Email Template update Parameters.
    GenerateSsoUrlResult:
      properties:
        value:
          type: string
          description: Redirect Url containing the SSO URL value.
      description: Generate SSO Url operations response details.
    GroupCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GroupContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Group list representation.
    GroupContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GroupContractProperties'
          description: Group entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Contract details.
    GroupContractProperties:
      properties:
        displayName:
          type: string
          description: Group name.
          maxLength: 300
          minLength: 1
        description:
          type: string
          description: Group description. Can contain HTML formatting tags.
          maxLength: 1000
        builtIn:
          readOnly: true
          type: boolean
          description: true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
        type:
          type: string
          description: Group type.
          enum:
            - custom
            - system
            - external
          x-ms-enum:
            name: GroupType
            modelAsString: false
        externalId:
          type: string
          description: For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
      required:
        - displayName
      description: Group contract Properties.
    GroupCreateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GroupCreateParametersProperties'
          description: Properties supplied to Create Group operation.
      description: Parameters supplied to the Create Group operation.
    GroupCreateParametersProperties:
      properties:
        displayName:
          type: string
          description: Group name.
          maxLength: 300
          minLength: 1
        description:
          type: string
          description: Group description.
        type:
          type: string
          description: Group type.
          enum:
            - custom
            - system
            - external
          x-ms-enum:
            name: GroupType
            modelAsString: false
        externalId:
          type: string
          description: Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
      required:
        - displayName
      description: Parameters supplied to the Create Group operation.
    GroupUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GroupUpdateParametersProperties'
          description: Group entity update contract properties.
      description: Parameters supplied to the Update Group operation.
    GroupUpdateParametersProperties:
      properties:
        displayName:
          type: string
          description: Group name.
          maxLength: 300
          minLength: 1
        description:
          type: string
          description: Group description.
        type:
          type: string
          description: Group type.
          enum:
            - custom
            - system
            - external
          x-ms-enum:
            name: GroupType
            modelAsString: false
        externalId:
          type: string
          description: Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
      description: Parameters supplied to the Update Group operation.
    HttpMessageDiagnostic:
      properties:
        headers:
          type: array
          items:
            type: string
          description: Array of HTTP Headers to log.
        body:
          $ref: '#/components/schemas/BodyDiagnosticSettings'
          description: Body logging settings.
        dataMasking:
          $ref: '#/components/schemas/DataMasking'
          description: Data masking settings.
      description: Http message diagnostic settings.
    IdentityProviderBaseParameters:
      properties:
        type:
          type: string
          enum:
            - facebook
            - google
            - microsoft
            - twitter
            - aad
            - aadB2C
          x-ms-enum:
            name: IdentityProviderType
            modelAsString: true
            values:
              - value: facebook
                description: Facebook as Identity provider.
              - value: google
                description: Google as Identity provider.
              - value: microsoft
                description: Microsoft Live as Identity provider.
              - value: twitter
                description: Twitter as Identity provider.
              - value: aad
                description: Azure Active Directory as Identity provider.
              - value: aadB2C
                description: Azure Active Directory B2C as Identity provider.
          description: Identity Provider Type identifier.
        signinTenant:
          type: string
          description: The TenantId to use instead of Common when logging into Active Directory
        allowedTenants:
          type: array
          items:
            type: string
          maxItems: 32
          description: List of Allowed Tenants when configuring Azure Active Directory login.
        authority:
          type: string
          description: OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
        signupPolicyName:
          type: string
          description: Signup Policy Name. Only applies to AAD B2C Identity Provider.
          minLength: 1
        signinPolicyName:
          type: string
          description: Signin Policy Name. Only applies to AAD B2C Identity Provider.
          minLength: 1
        profileEditingPolicyName:
          type: string
          description: Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
          minLength: 1
        passwordResetPolicyName:
          type: string
          description: Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
          minLength: 1
      description: Identity Provider Base Parameter Properties.
    IdentityProviderCreateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IdentityProviderCreateContractProperties'
          description: Identity Provider contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Identity Provider details.
    IdentityProviderCreateContractProperties:
      properties:
        clientId:
          type: string
          description: Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
          minLength: 1
        clientSecret:
          x-ms-secret: true
          type: string
          description: Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
          minLength: 1
      allOf:
        - $ref: '#/components/schemas/IdentityProviderBaseParameters'
      required:
        - clientId
        - clientSecret
      description: The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.
    IdentityProviderContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IdentityProviderContractProperties'
          description: Identity Provider contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Identity Provider details.
    IdentityProviderContractProperties:
      properties:
        clientId:
          type: string
          description: Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
          minLength: 1
        clientSecret:
          x-ms-secret: true
          type: string
          description: Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
          minLength: 1
      allOf:
        - $ref: '#/components/schemas/IdentityProviderBaseParameters'
      required:
        - clientId
      description: The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.
    IdentityProviderList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IdentityProviderContract'
          description: Identity Provider configuration values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: List of all the Identity Providers configured on the service instance.
    IdentityProviderUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IdentityProviderUpdateProperties'
          description: Identity Provider update properties.
      description: Parameters supplied to update Identity Provider
    IdentityProviderUpdateProperties:
      properties:
        clientId:
          type: string
          description: Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
          minLength: 1
        clientSecret:
          x-ms-secret: true
          type: string
          description: Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.
          minLength: 1
      allOf:
        - $ref: '#/components/schemas/IdentityProviderBaseParameters'
      description: Parameters supplied to the Update Identity Provider operation.
    IssueAttachmentCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IssueAttachmentContract'
          description: Issue Attachment values.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged Issue Attachment list representation.
    IssueAttachmentContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IssueAttachmentContractProperties'
          description: Properties of the Issue Attachment.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Issue Attachment Contract details.
    IssueAttachmentContractProperties:
      properties:
        title:
          type: string
          description: Filename by which the binary data will be saved.
        contentFormat:
          type: string
          description: Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.
        content:
          type: string
          description: An HTTP link or Base64-encoded binary data.
      required:
        - title
        - contentFormat
        - content
      description: Issue Attachment contract Properties.
    IssueCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IssueContract'
          description: Issue values.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged Issue list representation.
    IssueCommentCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IssueCommentContract'
          description: Issue Comment values.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged Issue Comment list representation.
    IssueCommentContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IssueCommentContractProperties'
          description: Properties of the Issue Comment.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Issue Comment Contract details.
    IssueCommentContractProperties:
      properties:
        text:
          type: string
          description: Comment text.
        createdDate:
          type: string
          format: date-time
          description: Date and time when the comment was created.
        userId:
          type: string
          description: A resource identifier for the user who left the comment.
      required:
        - text
        - userId
      description: Issue Comment contract Properties.
    IssueContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IssueContractProperties'
          description: Properties of the Issue.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Issue Contract details.
    IssueContractBaseProperties:
      properties:
        createdDate:
          type: string
          format: date-time
          description: Date and time when the issue was created.
        state:
          type: string
          description: Status of the issue.
          enum:
            - proposed
            - open
            - removed
            - resolved
            - closed
          x-ms-enum:
            name: State
            modelAsString: true
            values:
              - value: proposed
                description: The issue is proposed.
              - value: open
                description: The issue is opened.
              - value: removed
                description: The issue was removed.
              - value: resolved
                description: The issue is now resolved.
              - value: closed
                description: The issue was closed.
        apiId:
          type: string
          description: A resource identifier for the API the issue was created for.
      description: Issue contract Base Properties.
    IssueContractProperties:
      properties:
        title:
          type: string
          description: The issue title.
        description:
          type: string
          description: Text describing the issue.
        userId:
          type: string
          description: A resource identifier for the user created the issue.
      required:
        - title
        - description
        - userId
      allOf:
        - $ref: '#/components/schemas/IssueContractBaseProperties'
      description: Issue contract Properties.
    IssueUpdateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IssueUpdateContractProperties'
          description: Issue entity Update contract properties.
      description: Issue update Parameters.
    IssueUpdateContractProperties:
      properties:
        title:
          type: string
          description: The issue title.
        description:
          type: string
          description: Text describing the issue.
        userId:
          type: string
          description: A resource identifier for the user created the issue.
      allOf:
        - $ref: '#/components/schemas/IssueContractBaseProperties'
      description: Issue contract Update Properties.
    KeyVaultContractCreateProperties:
      properties:
        secretIdentifier:
          type: string
          description: Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi
        identityClientId:
          type: string
          description: Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
      description: Create keyVault contract details.
    KeyVaultContractProperties:
      properties:
        lastStatus:
          $ref: '#/components/schemas/KeyVaultLastAccessStatusContractProperties'
          description: Last time sync and refresh status of secret from key vault.
      allOf:
        - $ref: '#/components/schemas/KeyVaultContractCreateProperties'
      description: KeyVault contract details.
    KeyVaultLastAccessStatusContractProperties:
      properties:
        code:
          type: string
          description: Last status code for sync and refresh of secret from key vault.
        message:
          type: string
          description: Details of the error else empty.
        timeStampUtc:
          type: string
          format: date-time
          description: |
            Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
      description: Issue contract Update Properties.
    LoggerCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LoggerContract'
          description: Logger values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Logger list representation.
    LoggerContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LoggerContractProperties'
          description: Logger entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Logger details.
    LoggerContractProperties:
      properties:
        loggerType:
          type: string
          description: Logger type.
          enum:
            - azureEventHub
            - applicationInsights
            - azureMonitor
          x-ms-enum:
            name: LoggerType
            modelAsString: true
            values:
              - value: azureEventHub
                description: Azure Event Hub as log destination.
              - value: applicationInsights
                description: Azure Application Insights as log destination.
              - value: azureMonitor
                description: Azure Monitor
        description:
          type: string
          description: Logger description.
          maxLength: 256
        credentials:
          type: object
          additionalProperties:
            type: string
          description: |-
            The name and SendRule connection string of the event hub for azureEventHub logger.
            Instrumentation key for applicationInsights logger.
          example:
            name: apim
            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
        isBuffered:
          type: boolean
          description: Whether records are buffered in the logger before publishing. Default is assumed to be true.
        resourceId:
          type: string
          description: Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
      required:
        - loggerType
      description: The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.
    LoggerUpdateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LoggerUpdateParameters'
          description: Logger entity update contract properties.
      description: Logger update contract.
    LoggerUpdateParameters:
      properties:
        loggerType:
          type: string
          description: Logger type.
          enum:
            - azureEventHub
            - applicationInsights
            - azureMonitor
          x-ms-enum:
            name: LoggerType
            modelAsString: true
            values:
              - value: azureEventHub
                description: Azure Event Hub as log destination.
              - value: applicationInsights
                description: Azure Application Insights as log destination.
              - value: azureMonitor
                description: Azure Monitor
        description:
          type: string
          description: Logger description.
        credentials:
          type: object
          additionalProperties:
            type: string
          description: Logger credentials.
        isBuffered:
          type: boolean
          description: Whether records are buffered in the logger before publishing. Default is assumed to be true.
      description: Parameters supplied to the Update Logger operation.
    NotificationCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NotificationContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Notification list representation.
    NotificationContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NotificationContractProperties'
          description: Notification entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Notification details.
    NotificationContractProperties:
      properties:
        title:
          type: string
          description: Title of the Notification.
          minLength: 1
          maxLength: 1000
        description:
          type: string
          description: Description of the Notification.
        recipients:
          $ref: '#/components/schemas/RecipientsContractProperties'
          description: Recipient Parameter values.
      required:
        - title
      description: Notification Contract properties.
    OAuth2AuthenticationSettingsContract:
      properties:
        authorizationServerId:
          type: string
          description: OAuth authorization server identifier.
        scope:
          type: string
          description: operations scope.
      description: API OAuth2 Authentication settings details.
    OpenIdAuthenticationSettingsContract:
      properties:
        openidProviderId:
          type: string
          description: OAuth authorization server identifier.
        bearerTokenSendingMethods:
          description: How to send token to the server.
          type: array
          items:
            $ref: '#/components/schemas/BearerTokenSendingMethodsContract'
      description: API OAuth2 Authentication settings details.
    OpenIdConnectProviderCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OpenidConnectProviderContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged OpenIdProviders list representation.
    OpenidConnectProviderContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OpenidConnectProviderContractProperties'
          description: OpenId Connect Provider contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: OpenId Connect Provider details.
    OpenidConnectProviderContractProperties:
      properties:
        displayName:
          type: string
          description: User-friendly OpenID Connect Provider name.
          maxLength: 50
        description:
          type: string
          description: User-friendly description of OpenID Connect Provider.
        metadataEndpoint:
          type: string
          description: Metadata endpoint URI.
        clientId:
          type: string
          description: Client ID of developer console which is the client application.
        clientSecret:
          x-ms-secret: true
          type: string
          description: Client Secret of developer console which is the client application.
      required:
        - displayName
        - metadataEndpoint
        - clientId
      description: OpenID Connect Providers Contract.
    OpenidConnectProviderUpdateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OpenidConnectProviderUpdateContractProperties'
          description: OpenId Connect Provider Update contract properties.
      description: Parameters supplied to the Update OpenID Connect Provider operation.
    OpenidConnectProviderUpdateContractProperties:
      properties:
        displayName:
          type: string
          description: User-friendly OpenID Connect Provider name.
          maxLength: 50
        description:
          type: string
          description: User-friendly description of OpenID Connect Provider.
        metadataEndpoint:
          type: string
          description: Metadata endpoint URI.
        clientId:
          type: string
          description: Client ID of developer console which is the client application.
        clientSecret:
          x-ms-secret: true
          type: string
          description: Client Secret of developer console which is the client application.
      description: Parameters supplied to the Update OpenID Connect Provider operation.
    OperationCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OperationContract'
          description: Page values.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged Operation list representation.
    OperationContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OperationContractProperties'
          description: Properties of the Operation Contract.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: API Operation details.
    OperationContractProperties:
      properties:
        displayName:
          type: string
          description: Operation Name.
          minLength: 1
          maxLength: 300
        method:
          type: string
          description: A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
          externalDocs:
            description: As defined by RFC.
            url: http://www.rfc-editor.org/rfc/rfc7230.txt
        urlTemplate:
          type: string
          description: 'Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}'
          minLength: 1
          maxLength: 1000
      allOf:
        - $ref: '#/components/schemas/OperationEntityBaseContract'
      required:
        - displayName
        - method
        - urlTemplate
      description: Operation Contract Properties
    OperationEntityBaseContract:
      properties:
        templateParameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterContract'
          x-ms-identifiers:
            - name
            - type
          description: Collection of URL template parameters.
        description:
          type: string
          description: Description of the operation. May include HTML formatting tags.
          maxLength: 1000
        request:
          $ref: '#/components/schemas/RequestContract'
          description: An entity containing request details.
        responses:
          type: array
          items:
            $ref: '#/components/schemas/ResponseContract'
          x-ms-identifiers: []
          description: Array of Operation responses.
        policies:
          type: string
          description: Operation Policies
      description: API Operation Entity Base Contract details.
    OperationResultContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OperationResultContractProperties'
          description: Properties of the Operation Contract.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Long Running Git Operation Results.
    OperationResultContractProperties:
      properties:
        id:
          type: string
          description: Operation result identifier.
        status:
          type: string
          description: Status of an async operation.
          enum:
            - Started
            - InProgress
            - Succeeded
            - Failed
          x-ms-enum:
            name: AsyncOperationStatus
            modelAsString: false
        started:
          type: string
          format: date-time
          description: |
            Start time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        updated:
          type: string
          format: date-time
          description: |
            Last update time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        resultInfo:
          type: string
          description: Optional result info.
        error:
          $ref: '#/components/schemas/ErrorResponseBody'
          description: Error Body Contract
        actionLog:
          type: array
          items:
            $ref: '#/components/schemas/OperationResultLogItemContract'
          x-ms-identifiers:
            - objectKey
          readOnly: true
          description: This property if only provided as part of the TenantConfiguration_Validate operation. It contains the log the entities which will be updated/created/deleted as part of the TenantConfiguration_Deploy operation.
      description: Operation Result.
    OperationResultLogItemContract:
      properties:
        objectType:
          type: string
          description: The type of entity contract.
        action:
          type: string
          description: Action like create/update/delete.
        objectKey:
          type: string
          description: Identifier of the entity being created/updated/deleted.
      description: Log of the entity being created, updated or deleted.
    OperationTagResourceContractProperties:
      properties:
        id:
          type: string
          description: Identifier of the operation in form /operations/{operationId}.
        name:
          type: string
          description: Operation name.
          readOnly: true
        apiName:
          type: string
          description: API Name.
          readOnly: true
        apiRevision:
          type: string
          description: API Revision.
          readOnly: true
        apiVersion:
          type: string
          description: API Version.
          readOnly: true
        description:
          type: string
          description: Operation Description.
          readOnly: true
        method:
          type: string
          description: A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
          externalDocs:
            description: As defined by RFC.
            url: http://www.rfc-editor.org/rfc/rfc7230.txt
          readOnly: true
        urlTemplate:
          type: string
          description: 'Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}'
          readOnly: true
      description: Operation Entity contract Properties.
    OperationUpdateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OperationUpdateContractProperties'
          description: Properties of the API Operation entity that can be updated.
      description: API Operation Update Contract details.
    OperationUpdateContractProperties:
      properties:
        displayName:
          type: string
          description: Operation Name.
          minLength: 1
          maxLength: 300
        method:
          type: string
          description: A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
          externalDocs:
            description: As defined by RFC.
            url: http://www.rfc-editor.org/rfc/rfc7230.txt
        urlTemplate:
          type: string
          description: 'Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}'
          minLength: 1
          maxLength: 1000
      allOf:
        - $ref: '#/components/schemas/OperationEntityBaseContract'
      description: Operation Update Contract Properties.
    ParameterContract:
      properties:
        name:
          type: string
          description: Parameter name.
        description:
          type: string
          description: Parameter description.
        type:
          type: string
          description: Parameter type.
        defaultValue:
          type: string
          description: Default parameter value.
        required:
          type: boolean
          description: Specifies whether parameter is required or not.
        values:
          type: array
          items:
            type: string
          description: Parameter values.
        schemaId:
          type: string
          description: Schema identifier.
        typeName:
          type: string
          description: Type name defined by the schema.
        examples:
          $ref: '#/components/schemas/ParameterExamplesContract'
          description: Exampled defined for the parameter.
      required:
        - name
        - type
      description: Operation parameters details.
    ParameterExamplesContract:
      additionalProperties:
        $ref: '#/components/schemas/ParameterExampleContract'
        description: Parameter example.
      description: Parameter examples.
    ParameterExampleContract:
      description: Parameter example.
      properties:
        summary:
          type: string
          description: Short description for the example
        description:
          type: string
          description: Long description for the example
        value:
          description: Example value. May be a primitive value, or an object.
        externalValue:
          type: string
          description: A URL that points to the literal example
    PipelineDiagnosticSettings:
      properties:
        request:
          $ref: '#/components/schemas/HttpMessageDiagnostic'
          description: Diagnostic settings for request.
        response:
          $ref: '#/components/schemas/HttpMessageDiagnostic'
          description: Diagnostic settings for response.
      description: Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
    PolicyCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PolicyContract'
          description: Policy Contract value.
        count:
          type: integer
          format: int64
          description: Total record count number.
        nextLink:
          type: string
          description: Next page link if any.
      description: The response of the list policy operation.
    PolicyContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PolicyContractProperties'
          description: Properties of the Policy.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Policy Contract details.
    PolicyContractProperties:
      properties:
        value:
          type: string
          description: Contents of the Policy as defined by the format.
        format:
          type: string
          description: Format of the policyContent.
          enum:
            - xml
            - xml-link
            - rawxml
            - rawxml-link
          x-ms-enum:
            name: PolicyContentFormat
            modelAsString: true
            values:
              - value: xml
                description: The contents are inline and Content type is an XML document.
              - value: xml-link
                description: The policy XML document is hosted on a http endpoint accessible from the API Management service.
              - value: rawxml
                description: The contents are inline and Content type is a non XML encoded policy document.
              - value: rawxml-link
                description: The policy document is not Xml encoded and is hosted on a http endpoint accessible from the API Management service.
          default: xml
      required:
        - value
      description: Policy contract Properties.
    PolicyDescriptionContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PolicyDescriptionContractProperties'
          description: Policy description contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Policy description details.
    PolicyDescriptionContractProperties:
      properties:
        description:
          type: string
          description: Policy description.
          readOnly: true
        scope:
          type: integer
          format: int64
          description: Binary OR value of the Snippet scope.
          readOnly: true
      description: Policy description properties.
    PolicyDescriptionCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PolicyDescriptionContract'
          description: Descriptions of APIM policies.
        count:
          type: integer
          format: int64
          description: Total record count number.
      description: Descriptions of APIM policies.
    PortalDelegationSettings:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PortalDelegationSettingsProperties'
          description: Delegation settings contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Delegation settings for a developer portal.
    PortalDelegationSettingsProperties:
      properties:
        url:
          type: string
          description: A delegation Url.
        validationKey:
          x-ms-secret: true
          type: string
          description: A base64-encoded validation key to validate, that a request is coming from Azure API Management.
        subscriptions:
          $ref: '#/components/schemas/SubscriptionsDelegationSettingsProperties'
          description: Subscriptions delegation settings.
        userRegistration:
          $ref: '#/components/schemas/RegistrationDelegationSettingsProperties'
          description: User registration delegation settings.
      description: Delegation settings contract properties.
    PortalSettingsCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PortalSettingsContract'
          description: Descriptions of APIM policies.
        count:
          type: integer
          format: int64
          description: Total record count number.
      description: Descriptions of APIM policies.
    PortalSettingsContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PortalSettingsContractProperties'
          description: Portal Settings contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Portal Settings for the Developer Portal.
    PortalSettingsContractProperties:
      properties:
        url:
          type: string
          description: A delegation Url.
        validationKey:
          x-ms-secret: true
          type: string
          description: A base64-encoded validation key to validate, that a request is coming from Azure API Management.
        subscriptions:
          $ref: '#/components/schemas/SubscriptionsDelegationSettingsProperties'
          description: Subscriptions delegation settings.
        userRegistration:
          $ref: '#/components/schemas/RegistrationDelegationSettingsProperties'
          description: User registration delegation settings.
        enabled:
          type: boolean
          description: Redirect Anonymous users to the Sign-In page.
        termsOfService:
          type: object
          $ref: '#/components/schemas/TermsOfServiceProperties'
          description: Terms of service contract properties.
      description: Sign-in settings contract properties.
    PortalSigninSettingProperties:
      properties:
        enabled:
          type: boolean
          description: Redirect Anonymous users to the Sign-In page.
      description: Sign-in settings contract properties.
    PortalSigninSettings:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PortalSigninSettingProperties'
          description: Sign-in settings contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Sign-In settings for the Developer Portal.
    PortalSignupSettings:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PortalSignupSettingsProperties'
          description: Sign-up settings contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Sign-Up settings for a developer portal.
    PortalSignupSettingsProperties:
      properties:
        enabled:
          type: boolean
          description: Allow users to sign up on a developer portal.
        termsOfService:
          type: object
          $ref: '#/components/schemas/TermsOfServiceProperties'
          description: Terms of service contract properties.
      description: Sign-up settings contract properties.
    ProductCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProductContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Products list representation.
    ProductContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProductContractProperties'
          description: Product entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Product details.
    ProductContractProperties:
      properties:
        displayName:
          type: string
          description: Product name.
          minLength: 1
          maxLength: 300
      allOf:
        - $ref: '#/components/schemas/ProductEntityBaseParameters'
      required:
        - displayName
      description: Product profile.
    ProductEntityBaseParameters:
      properties:
        description:
          type: string
          description: Product description. May include HTML formatting tags.
          minLength: 0
          maxLength: 1000
        terms:
          type: string
          description: Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
        subscriptionRequired:
          description: Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.
          type: boolean
        approvalRequired:
          description: whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.
          type: boolean
        subscriptionsLimit:
          type: integer
          format: int32
          description: Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
        state:
          type: string
          description: whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
          enum:
            - notPublished
            - published
          x-ms-enum:
            name: ProductState
            modelAsString: false
      description: Product Entity Base Parameters
    ProductTagResourceContractProperties:
      properties:
        id:
          type: string
          description: Identifier of the product in the form of /products/{productId}
        name:
          type: string
          description: Product name.
          minLength: 1
          maxLength: 300
      allOf:
        - $ref: '#/components/schemas/ProductEntityBaseParameters'
      required:
        - name
      description: Product profile.
    ProductUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProductUpdateProperties'
          description: Product entity Update contract properties.
      description: Product Update parameters.
    ProductUpdateProperties:
      properties:
        displayName:
          type: string
          description: Product name.
          maxLength: 300
          minLength: 1
      allOf:
        - $ref: '#/components/schemas/ProductEntityBaseParameters'
      description: Parameters supplied to the Update Product operation.
    NamedValueCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NamedValueContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged NamedValue list representation.
    NamedValueCreateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NamedValueCreateContractProperties'
          description: NamedValue entity contract properties for PUT operation.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: NamedValue details.
    NamedValueCreateContractProperties:
      properties:
        displayName:
          type: string
          description: Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
          minLength: 1
          maxLength: 256
          pattern: ^[A-Za-z0-9-._]+$
        value:
          type: string
          description: Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
          maxLength: 4096
        keyVault:
          $ref: '#/components/schemas/KeyVaultContractCreateProperties'
          description: KeyVault location details of the namedValue.
      allOf:
        - $ref: '#/components/schemas/NamedValueEntityBaseParameters'
      required:
        - displayName
      description: NamedValue Contract properties.
    NamedValueContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NamedValueContractProperties'
          description: NamedValue entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: NamedValue details.
    NamedValueContractProperties:
      properties:
        displayName:
          type: string
          description: Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
          minLength: 1
          maxLength: 256
          pattern: ^[A-Za-z0-9-._]+$
        value:
          type: string
          description: Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
          maxLength: 4096
        keyVault:
          $ref: '#/components/schemas/KeyVaultContractProperties'
          description: KeyVault location details of the namedValue.
      allOf:
        - $ref: '#/components/schemas/NamedValueEntityBaseParameters'
      required:
        - displayName
      description: NamedValue Contract properties.
    NamedValueEntityBaseParameters:
      properties:
        tags:
          type: array
          items:
            type: string
          maxItems: 32
          description: Optional tags that when provided can be used to filter the NamedValue list.
        secret:
          description: Determines whether the value is a secret and should be encrypted or not. Default value is false.
          type: boolean
      description: NamedValue Entity Base Parameters set.
    NamedValueUpdateParameterProperties:
      properties:
        displayName:
          type: string
          description: Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
          minLength: 1
          maxLength: 256
          pattern: ^[A-Za-z0-9-._]+$
        value:
          type: string
          description: Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace.
          minLength: 1
          maxLength: 4096
        keyVault:
          $ref: '#/components/schemas/KeyVaultContractCreateProperties'
          description: KeyVault location details of the namedValue.
      allOf:
        - $ref: '#/components/schemas/NamedValueEntityBaseParameters'
      description: NamedValue Contract properties.
    NamedValueUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NamedValueUpdateParameterProperties'
          description: NamedValue entity Update contract properties.
      description: NamedValue update Parameters.
    QuotaCounterCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/QuotaCounterContract'
          x-ms-identifiers:
            - counterKey
            - periodKey
          description: Quota counter values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Quota Counter list representation.
    QuotaCounterContract:
      properties:
        counterKey:
          type: string
          description: The Key value of the Counter. Must not be empty.
          minLength: 1
        periodKey:
          type: string
          description: Identifier of the Period for which the counter was collected. Must not be empty.
          minLength: 1
        periodStartTime:
          type: string
          format: date-time
          description: |
            The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        periodEndTime:
          type: string
          format: date-time
          description: |
            The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        value:
          $ref: '#/components/schemas/QuotaCounterValueContractProperties'
          description: Quota Value Properties
      required:
        - counterKey
        - periodKey
        - periodStartTime
        - periodEndTime
      description: Quota counter details.
    QuotaCounterValueContract:
      properties:
        value:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/QuotaCounterValueContractProperties'
          description: Quota counter Value Properties.
      description: Quota counter value details.
    QuotaCounterValueContractProperties:
      properties:
        callsCount:
          type: integer
          format: int32
          description: Number of times Counter was called.
        kbTransferred:
          type: number
          format: double
          description: Data Transferred in KiloBytes.
      description: Quota counter value details.
    QuotaCounterValueUpdateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/QuotaCounterValueContractProperties'
          description: Quota counter value details.
      description: Quota counter value details.
    RecipientEmailCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RecipientEmailContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Recipient User list representation.
    RecipientEmailContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RecipientEmailContractProperties'
          description: Recipient Email contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Recipient Email details.
    RecipientEmailContractProperties:
      properties:
        email:
          type: string
          description: User Email subscribed to notification.
      description: Recipient Email Contract Properties.
    RecipientsContractProperties:
      properties:
        emails:
          type: array
          items:
            type: string
          description: List of Emails subscribed for the notification.
        users:
          type: array
          items:
            type: string
          description: List of Users subscribed for the notification.
      description: Notification Parameter contract.
    RecipientUserCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RecipientUserContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Recipient User list representation.
    RecipientUserContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RecipientUsersContractProperties'
          description: Recipient User entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Recipient User details.
    RecipientUsersContractProperties:
      properties:
        userId:
          type: string
          description: API Management UserId subscribed to notification.
      description: Recipient User Contract Properties.
    RegistrationDelegationSettingsProperties:
      properties:
        enabled:
          type: boolean
          description: Enable or disable delegation for user registration.
      description: User registration delegation settings properties.
    ReportCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ReportRecordContract'
          x-ms-identifiers:
            - name
            - userId
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Report records list representation.
    ReportRecordContract:
      properties:
        name:
          type: string
          description: Name depending on report endpoint specifies product, API, operation or developer name.
        timestamp:
          type: string
          format: date-time
          description: |
            Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        interval:
          type: string
          description: Length of aggregation period.  Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).
        country:
          type: string
          description: Country to which this record data is related.
        region:
          type: string
          description: Country region to which this record data is related.
        zip:
          type: string
          description: Zip code to which this record data is related.
        userId:
          readOnly: true
          type: string
          description: User identifier path. /users/{userId}
        productId:
          readOnly: true
          type: string
          description: Product identifier path. /products/{productId}
        apiId:
          type: string
          description: API identifier path. /apis/{apiId}
        operationId:
          type: string
          description: Operation identifier path. /apis/{apiId}/operations/{operationId}
        apiRegion:
          type: string
          description: API region identifier.
        subscriptionId:
          type: string
          description: Subscription identifier path. /subscriptions/{subscriptionId}
        callCountSuccess:
          type: integer
          format: int32
          description: Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect
        callCountBlocked:
          type: integer
          format: int32
          description: Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests
        callCountFailed:
          type: integer
          format: int32
          description: Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600
        callCountOther:
          type: integer
          format: int32
          description: Number of other calls.
        callCountTotal:
          type: integer
          format: int32
          description: Total number of calls.
        bandwidth:
          type: integer
          format: int64
          description: Bandwidth consumed.
        cacheHitCount:
          type: integer
          format: int32
          description: Number of times when content was served from cache policy.
        cacheMissCount:
          type: integer
          format: int32
          description: Number of times content was fetched from backend.
        apiTimeAvg:
          type: number
          format: double
          description: Average time it took to process request.
        apiTimeMin:
          type: number
          format: double
          description: Minimum time it took to process request.
        apiTimeMax:
          type: number
          format: double
          description: Maximum time it took to process request.
        serviceTimeAvg:
          type: number
          format: double
          description: Average time it took to process request on backend.
        serviceTimeMin:
          type: number
          format: double
          description: Minimum time it took to process request on backend.
        serviceTimeMax:
          type: number
          format: double
          description: Maximum time it took to process request on backend.
      description: Report data.
    RepresentationContract:
      properties:
        contentType:
          type: string
          description: Specifies a registered or custom content type for this representation, e.g. application/xml.
        schemaId:
          type: string
          description: Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
        typeName:
          type: string
          description: Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
        formParameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterContract'
          x-ms-identifiers:
            - name
            - type
          description: Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
        examples:
          $ref: '#/components/schemas/ParameterExamplesContract'
          description: Exampled defined for the representation.
      required:
        - contentType
      description: Operation request/response representation details.
    RequestContract:
      properties:
        description:
          type: string
          description: Operation request description.
        queryParameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterContract'
          x-ms-identifiers:
            - name
            - type
          description: Collection of operation request query parameters.
        headers:
          type: array
          items:
            $ref: '#/components/schemas/ParameterContract'
          x-ms-identifiers:
            - name
            - type
          description: Collection of operation request headers.
        representations:
          type: array
          items:
            $ref: '#/components/schemas/RepresentationContract'
          x-ms-identifiers: []
          description: Collection of operation request representations.
      description: Operation request details.
    RequestReportCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RequestReportRecordContract'
          x-ms-identifiers:
            - url
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
      description: Paged Report records list representation.
    RequestReportRecordContract:
      properties:
        apiId:
          type: string
          description: API identifier path. /apis/{apiId}
        operationId:
          type: string
          description: Operation identifier path. /apis/{apiId}/operations/{operationId}
        productId:
          readOnly: true
          type: string
          description: Product identifier path. /products/{productId}
        userId:
          readOnly: true
          type: string
          description: User identifier path. /users/{userId}
        method:
          type: string
          description: The HTTP method associated with this request..
        url:
          type: string
          description: The full URL associated with this request.
        ipAddress:
          type: string
          description: The client IP address associated with this request.
        backendResponseCode:
          type: string
          description: The HTTP status code received by the gateway as a result of forwarding this request to the backend.
        responseCode:
          type: integer
          format: int32
          description: The HTTP status code returned by the gateway.
        responseSize:
          type: integer
          format: int32
          description: The size of the response returned by the gateway.
        timestamp:
          type: string
          format: date-time
          description: The date and time when this request was received by the gateway in ISO 8601 format.
        cache:
          type: string
          description: Specifies if response cache was involved in generating the response. If the value is none, the cache was not used. If the value is hit, cached response was returned. If the value is miss, the cache was used but lookup resulted in a miss and request was fulfilled by the backend.
        apiTime:
          type: number
          format: double
          description: The total time it took to process this request.
        serviceTime:
          type: number
          format: double
          description: he time it took to forward this request to the backend and get the response back.
        apiRegion:
          type: string
          description: Azure region where the gateway that processed this request is located.
        subscriptionId:
          type: string
          description: Subscription identifier path. /subscriptions/{subscriptionId}
        requestId:
          type: string
          description: Request Identifier.
        requestSize:
          type: integer
          format: int32
          description: The size of this request..
      description: Request Report data.
    ResponseContract:
      properties:
        statusCode:
          type: integer
          format: int32
          description: Operation response HTTP status code.
        description:
          type: string
          description: Operation response description.
        representations:
          type: array
          items:
            $ref: '#/components/schemas/RepresentationContract'
          x-ms-identifiers: []
          description: Collection of operation response representations.
        headers:
          type: array
          items:
            $ref: '#/components/schemas/ParameterContract'
          x-ms-identifiers:
            - name
            - type
          description: Collection of operation response headers.
      required:
        - statusCode
      description: Operation response details.
    SamplingSettings:
      properties:
        samplingType:
          type: string
          description: Sampling type.
          enum:
            - fixed
          x-ms-enum:
            name: SamplingType
            modelAsString: true
            values:
              - value: fixed
                description: Fixed-rate sampling.
        percentage:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: Rate of sampling for fixed-rate sampling.
      description: Sampling settings for Diagnostic.
    SaveConfigurationParameter:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SaveConfigurationParameterProperties'
          description: Properties of the Save Configuration Parameters.
      description: Save Tenant Configuration Contract details.
    SaveConfigurationParameterProperties:
      properties:
        branch:
          type: string
          description: The name of the Git branch in which to commit the current configuration snapshot.
        force:
          type: boolean
          description: The value if true, the current configuration database is committed to the Git repository, even if the Git repository has newer changes that would be overwritten.
      required:
        - branch
      description: Parameters supplied to the Save Tenant Configuration operation.
    SchemaCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SchemaContract'
          description: API Schema Contract value.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: The response of the list schema operation.
    SchemaContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SchemaContractProperties'
          description: Properties of the API Schema.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: API Schema Contract details.
    SchemaContractProperties:
      properties:
        contentType:
          type: string
          description: Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.
        document:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SchemaDocumentProperties'
          description: Create or update Properties of the API Schema Document.
      required:
        - contentType
      description: API Schema create or update contract Properties.
    SchemaDocumentProperties:
      properties:
        value:
          type: string
          description: Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI.
        definitions:
          type: object
          description: Types definitions. Used for Swagger/OpenAPI v1 schemas only, null otherwise.
        components:
          type: object
          description: Types definitions. Used for Swagger/OpenAPI v2/v3 schemas only, null otherwise.
      description: Api Schema Document Properties.
    GlobalSchemaCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GlobalSchemaContract'
          description: Global Schema Contract value.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: The response of the list schema operation.
    GlobalSchemaContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GlobalSchemaContractProperties'
          description: Properties of the Global Schema.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Global Schema Contract details.
    GlobalSchemaContractProperties:
      properties:
        schemaType:
          type: string
          description: Schema Type. Immutable.
          enum:
            - xml
            - json
          x-ms-client-name: SchemaType
          x-ms-enum:
            name: SchemaType
            modelAsString: true
            values:
              - value: xml
                description: Xml schema type.
                name: Xml
              - value: json
                description: Json schema type.
                name: Json
        description:
          type: string
          description: Free-form schema entity description.
        value:
          description: Json-encoded string for non json-based schema.
        document:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GlobalSchemaDocumentProperties'
          description: Global Schema document object for json-based schema formats(e.g. json schema).
      required:
        - schemaType
      description: Schema create or update contract Properties.
    GlobalSchemaDocumentProperties:
      type: object
      description: Global Schema Document Properties.
    SubscriptionCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Subscriptions list representation.
    SubscriptionContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SubscriptionContractProperties'
          description: Subscription contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Subscription details.
    SubscriptionContractProperties:
      properties:
        ownerId:
          type: string
          description: The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier.
        scope:
          type: string
          description: Scope like /products/{productId} or /apis or /apis/{apiId}.
        displayName:
          type: string
          description: The name of the subscription, or null if the subscription has no name.
          minLength: 0
          maxLength: 100
        state:
          type: string
          description: Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
          enum:
            - suspended
            - active
            - expired
            - submitted
            - rejected
            - cancelled
          x-ms-enum:
            name: SubscriptionState
            modelAsString: false
        createdDate:
          type: string
          format: date-time
          description: |
            Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
          readOnly: true
        startDate:
          type: string
          format: date-time
          description: |
            Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        expirationDate:
          type: string
          format: date-time
          description: |
            Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        endDate:
          type: string
          format: date-time
          description: |
            Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        notificationDate:
          type: string
          format: date-time
          description: |
            Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        primaryKey:
          x-ms-secret: true
          type: string
          description: Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
          minLength: 1
          maxLength: 256
        secondaryKey:
          x-ms-secret: true
          type: string
          description: Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
          minLength: 1
          maxLength: 256
        stateComment:
          type: string
          description: Optional subscription comment added by an administrator when the state is changed to the 'rejected'.
        allowTracing:
          type: boolean
          description: Determines whether tracing is enabled
          x-apim-code-nillable: true
      required:
        - scope
        - state
      description: Subscription details.
    SubscriptionCreateParameterProperties:
      properties:
        ownerId:
          type: string
          description: User (user id path) for whom subscription is being created in form /users/{userId}
        scope:
          type: string
          description: Scope like /products/{productId} or /apis or /apis/{apiId}.
        displayName:
          type: string
          description: Subscription name.
          minLength: 1
          maxLength: 100
        primaryKey:
          type: string
          description: Primary subscription key. If not specified during request key will be generated automatically.
          minLength: 1
          maxLength: 256
        secondaryKey:
          type: string
          description: Secondary subscription key. If not specified during request key will be generated automatically.
          minLength: 1
          maxLength: 256
        state:
          type: string
          description: Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
          enum:
            - suspended
            - active
            - expired
            - submitted
            - rejected
            - cancelled
          x-ms-enum:
            name: SubscriptionState
            modelAsString: false
        allowTracing:
          type: boolean
          description: Determines whether tracing can be enabled
      required:
        - scope
        - displayName
      description: Parameters supplied to the Create subscription operation.
    SubscriptionCreateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SubscriptionCreateParameterProperties'
          description: Subscription contract properties.
      description: Subscription create details.
    SubscriptionKeyParameterNamesContract:
      properties:
        header:
          type: string
          description: Subscription key header name.
        query:
          type: string
          description: Subscription key query string parameter name.
      description: Subscription key parameter names details.
      example:
        subscriptionKeyParameterNames:
          query: customQueryParameterName
          header: customHeaderParameterName
    SubscriptionsDelegationSettingsProperties:
      properties:
        enabled:
          type: boolean
          description: Enable or disable delegation for subscriptions.
      description: Subscriptions delegation settings properties.
    SubscriptionUpdateParameterProperties:
      properties:
        ownerId:
          type: string
          description: 'User identifier path: /users/{userId}'
        scope:
          type: string
          description: Scope like /products/{productId} or /apis or /apis/{apiId}
        expirationDate:
          type: string
          format: date-time
          description: 'Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
        displayName:
          type: string
          description: Subscription name.
        primaryKey:
          type: string
          description: Primary subscription key.
          minLength: 1
          maxLength: 256
        secondaryKey:
          type: string
          description: Secondary subscription key.
          minLength: 1
          maxLength: 256
        state:
          type: string
          description: Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
          enum:
            - suspended
            - active
            - expired
            - submitted
            - rejected
            - cancelled
          x-ms-enum:
            name: SubscriptionState
            modelAsString: false
        stateComment:
          type: string
          description: Comments describing subscription state change by the administrator when the state is changed to the 'rejected'.
        allowTracing:
          type: boolean
          description: Determines whether tracing can be enabled
      description: Parameters supplied to the Update subscription operation.
    SubscriptionUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SubscriptionUpdateParameterProperties'
          description: Subscription Update contract properties.
      description: Subscription update details.
    TagCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TagContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Tag list representation.
    TagContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TagContractProperties'
          description: Tag entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Tag Contract details.
    TagContractProperties:
      properties:
        displayName:
          type: string
          description: Tag name.
          maxLength: 160
          minLength: 1
      required:
        - displayName
      description: Tag contract Properties.
    TagCreateUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TagContractProperties'
          description: Properties supplied to Create Tag operation.
      description: Parameters supplied to Create/Update Tag operations.
    TagDescriptionBaseProperties:
      properties:
        description:
          type: string
          description: Description of the Tag.
        externalDocsUrl:
          type: string
          description: Absolute URL of external resources describing the tag.
          maxLength: 2000
        externalDocsDescription:
          type: string
          description: Description of the external resources describing the tag.
      description: Parameters supplied to the Create TagDescription operation.
    TagDescriptionCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TagDescriptionContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged TagDescription list representation.
    TagDescriptionContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TagDescriptionContractProperties'
          description: TagDescription entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Contract details.
    TagDescriptionContractProperties:
      properties:
        tagId:
          type: string
          description: Identifier of the tag in the form of /tags/{tagId}
        displayName:
          type: string
          description: Tag name.
          maxLength: 160
          minLength: 1
      allOf:
        - $ref: '#/components/schemas/TagDescriptionBaseProperties'
      description: TagDescription contract Properties.
    TagDescriptionCreateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TagDescriptionBaseProperties'
          description: Properties supplied to Create TagDescription operation.
      description: Parameters supplied to the Create TagDescription operation.
    TagResourceCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TagResourceContract'
          x-ms-identifiers:
            - tag/id
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Tag list representation.
    TagResourceContract:
      properties:
        tag:
          $ref: '#/components/schemas/TagTagResourceContractProperties'
          description: Tag associated with the resource.
        api:
          $ref: '#/components/schemas/ApiTagResourceContractProperties'
          description: API associated with the tag.
        operation:
          $ref: '#/components/schemas/OperationTagResourceContractProperties'
          description: Operation associated with the tag.
        product:
          $ref: '#/components/schemas/ProductTagResourceContractProperties'
          description: Product associated with the tag.
      required:
        - tag
      description: TagResource contract properties.
    TagTagResourceContractProperties:
      properties:
        id:
          type: string
          description: Tag identifier
        name:
          type: string
          description: Tag Name
          minLength: 1
          maxLength: 160
      description: Contract defining the Tag property in the Tag Resource Contract
    TenantConfigurationSyncStateContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TenantConfigurationSyncStateContractProperties'
          description: Properties returned Tenant Configuration Sync State check.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Result of Tenant Configuration Sync State.
    TenantConfigurationSyncStateContractProperties:
      properties:
        branch:
          type: string
          description: The name of Git branch.
        commitId:
          type: string
          description: The latest commit Id.
        isExport:
          type: boolean
          description: value indicating if last sync was save (true) or deploy (false) operation.
        isSynced:
          type: boolean
          description: value indicating if last synchronization was later than the configuration change.
        isGitEnabled:
          type: boolean
          description: value indicating whether Git configuration access is enabled.
        syncDate:
          type: string
          format: date-time
          description: |
            The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        configurationChangeDate:
          type: string
          format: date-time
          description: |
            The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        lastOperationId:
          type: string
          description: Most recent tenant configuration operation identifier
      description: Tenant Configuration Synchronization State.
    TermsOfServiceProperties:
      properties:
        text:
          type: string
          description: A terms of service text.
        enabled:
          type: boolean
          description: Display terms of service during a sign-up process.
        consentRequired:
          type: boolean
          description: Ask user for consent to the terms of service.
      description: Terms of service contract properties.
    TokenBodyParameterContract:
      properties:
        name:
          type: string
          description: body parameter name.
        value:
          type: string
          description: body parameter value.
      required:
        - name
        - value
      description: OAuth acquire token request body parameter (www-url-form-encoded).
    UserCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/UserContract'
          description: Page values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged Users list representation.
    UserContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UserContractProperties'
          description: User entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: User details.
    UserContractProperties:
      properties:
        firstName:
          type: string
          description: First name.
        lastName:
          type: string
          description: Last name.
        email:
          type: string
          description: Email address.
        registrationDate:
          type: string
          format: date-time
          description: |
            Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        groups:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GroupContractProperties'
          x-ms-identifiers:
            - displayName
          description: Collection of groups user is part of.
      allOf:
        - $ref: '#/components/schemas/UserEntityBaseParameters'
      description: User profile.
    UserCreateParameterProperties:
      properties:
        email:
          type: string
          description: Email address. Must not be empty and must be unique within the service instance.
          minLength: 1
          maxLength: 254
        firstName:
          type: string
          description: First name.
          minLength: 1
          maxLength: 100
        lastName:
          type: string
          description: Last name.
          minLength: 1
          maxLength: 100
        password:
          type: string
          description: User Password. If no value is provided, a default password is generated.
        appType:
          type: string
          description: Determines the type of application which send the create user request. Default is legacy portal.
          enum:
            - portal
            - developerPortal
          x-ms-enum:
            name: AppType
            modelAsString: true
            values:
              - value: portal
                description: User create request was sent by legacy developer portal.
              - value: developerPortal
                description: User create request was sent by new developer portal.
        confirmation:
          type: string
          description: Determines the type of confirmation e-mail that will be sent to the newly created user.
          enum:
            - signup
            - invite
          x-ms-enum:
            name: Confirmation
            modelAsString: true
            values:
              - value: signup
                description: Send an e-mail to the user confirming they have successfully signed up.
              - value: invite
                description: Send an e-mail inviting the user to sign-up and complete registration.
      allOf:
        - $ref: '#/components/schemas/UserEntityBaseParameters'
      required:
        - email
        - firstName
        - lastName
      description: Parameters supplied to the Create User operation.
    UserCreateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UserCreateParameterProperties'
          description: User entity create contract properties.
      description: User create details.
    UserEntityBaseParameters:
      properties:
        state:
          type: string
          description: Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
          enum:
            - active
            - blocked
            - pending
            - deleted
          default: active
          x-ms-enum:
            name: UserState
            modelAsString: true
            values:
              - value: active
                description: User state is active.
              - value: blocked
                description: User is blocked. Blocked users cannot authenticate at developer portal or call API.
              - value: pending
                description: User account is pending. Requires identity confirmation before it can be made active.
              - value: deleted
                description: User account is closed. All identities and related entities are removed.
        note:
          type: string
          description: Optional note about a user set by the administrator.
        identities:
          type: array
          items:
            $ref: '#/components/schemas/UserIdentityContract'
          description: Collection of user identities.
      description: User Entity Base Parameters set.
    UserIdentityCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/UserIdentityContract'
          description: User Identity values.
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
      description: List of Users Identity list representation.
    UserIdentityContract:
      properties:
        provider:
          type: string
          description: Identity provider name.
        id:
          type: string
          description: Identifier value within provider.
      description: User identity details.
    UserTokenParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UserTokenParameterProperties'
          description: User Token Parameter contract properties.
      description: Get User Token parameters.
    UserTokenParameterProperties:
      properties:
        keyType:
          type: string
          description: The Key to be used to generate token for user.
          enum:
            - primary
            - secondary
          default: primary
          x-ms-enum:
            name: KeyType
            modelAsString: false
        expiry:
          type: string
          format: date-time
          description: |
            The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
      required:
        - keyType
        - expiry
      description: Parameters supplied to the Get User Token operation.
    UserTokenResult:
      properties:
        value:
          type: string
          description: Shared Access Authorization token for the User.
      description: Get User Token response details.
    UserUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UserUpdateParametersProperties'
          description: User entity update contract properties.
      description: User update parameters.
    UserUpdateParametersProperties:
      properties:
        email:
          type: string
          description: Email address. Must not be empty and must be unique within the service instance.
          minLength: 1
          maxLength: 254
        password:
          type: string
          description: User Password.
        firstName:
          type: string
          description: First name.
          minLength: 1
          maxLength: 100
        lastName:
          type: string
          description: Last name.
          minLength: 1
          maxLength: 100
      allOf:
        - $ref: '#/components/schemas/UserEntityBaseParameters'
      description: Parameters supplied to the Update User operation.
    X509CertificateName:
      properties:
        name:
          description: Common Name of the Certificate.
          type: string
        issuerCertificateThumbprint:
          description: Thumbprint for the Issuer of the Certificate.
          type: string
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-windows-cluster-x509-security
      description: Properties of server X509Names.
    ClientSecretContract:
      properties:
        clientSecret:
          type: string
          description: Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.
      description: Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.
    NamedValueSecretContract:
      properties:
        value:
          type: string
          description: This is secret value of the NamedValue entity.
      description: Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.
    PortalSettingValidationKeyContract:
      properties:
        validationKey:
          type: string
          description: This is secret value of the validation key in portal settings.
      description: Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.
    SubscriptionKeysContract:
      properties:
        primaryKey:
          type: string
          description: Subscription primary key.
          minLength: 1
          maxLength: 256
        secondaryKey:
          type: string
          description: Subscription secondary key.
          minLength: 1
          maxLength: 256
      description: Subscription keys.
    GatewayCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GatewayContract'
          description: Page values.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Total record count number across all pages.
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged Gateway list representation.
    GatewayContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GatewayContractProperties'
          description: Gateway details.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Gateway details.
    GatewayContractProperties:
      properties:
        locationData:
          $ref: '#/components/schemas/ResourceLocationDataContract'
          description: Gateway location.
        description:
          type: string
          description: Gateway description
          maxLength: 1000
      description: Properties of the Gateway contract.
    ResourceLocationDataContract:
      properties:
        name:
          type: string
          description: A canonical name for the geographic or physical location.
          maxLength: 256
        city:
          type: string
          description: The city or locality where the resource is located.
          maxLength: 256
        district:
          type: string
          description: The district, state, or province where the resource is located.
          maxLength: 256
        countryOrRegion:
          type: string
          description: The country or region where the resource is located.
          maxLength: 256
      required:
        - name
      description: Resource location data properties.
    GatewayKeysContract:
      properties:
        primary:
          type: string
          description: Primary gateway key.
        secondary:
          type: string
          description: Secondary gateway key.
      description: Gateway authentication keys.
    GatewayTokenRequestContract:
      properties:
        keyType:
          type: string
          description: The Key to be used to generate gateway token.
          enum:
            - primary
            - secondary
          default: primary
          x-ms-enum:
            name: KeyType
            modelAsString: false
        expiry:
          type: string
          format: date-time
          description: |
            The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
      required:
        - keyType
        - expiry
      description: Gateway token request contract properties.
    GatewayTokenContract:
      properties:
        value:
          type: string
          description: Shared Access Authentication token value for the Gateway.
      description: Gateway access token.
    GatewayKeyRegenerationRequestContract:
      properties:
        keyType:
          type: string
          description: The Key being regenerated.
          enum:
            - primary
            - secondary
          x-ms-enum:
            name: KeyType
            modelAsString: false
      required:
        - keyType
      description: Gateway key regeneration request contract properties.
    GatewayHostnameConfigurationCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GatewayHostnameConfigurationContract'
          description: Page values.
          readOnly: true
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged Gateway hostname configuration list representation.
    GatewayHostnameConfigurationContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GatewayHostnameConfigurationContractProperties'
          description: Gateway hostname configuration details.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Gateway hostname configuration details.
    GatewayHostnameConfigurationContractProperties:
      properties:
        hostname:
          type: string
          description: Hostname value. Supports valid domain name, partial or full wildcard
        certificateId:
          type: string
          description: Identifier of Certificate entity that will be used for TLS connection establishment
        negotiateClientCertificate:
          type: boolean
          description: Determines whether gateway requests client certificate
        tls10Enabled:
          type: boolean
          description: Specifies if TLS 1.0 is supported
        tls11Enabled:
          type: boolean
          description: Specifies if TLS 1.1 is supported
        http2Enabled:
          type: boolean
          description: Specifies if HTTP/2.0 is supported
      description: Gateway hostname configuration details.
    GatewayCertificateAuthorityCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GatewayCertificateAuthorityContract'
          description: Page values.
          readOnly: true
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged Gateway certificate authority list representation.
    GatewayCertificateAuthorityContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GatewayCertificateAuthorityContractProperties'
          description: Gateway certificate authority details.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Gateway certificate authority details.
    GatewayCertificateAuthorityContractProperties:
      properties:
        isTrusted:
          type: boolean
          description: Determines whether certificate authority is trusted.
      description: Gateway certificate authority details.
    AssociationContract:
      properties:
        properties:
          x-ms-client-flatten: true
          properties:
            provisioningState:
              type: string
              description: Provisioning state.
              enum:
                - created
              x-ms-enum:
                name: ProvisioningState
                modelAsString: false
          description: Association entity contract properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Association entity details.
    ContentTypeCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ContentTypeContract'
          description: Collection of content types.
          readOnly: true
        nextLink:
          type: string
          description: Next page link, if any.
          readOnly: true
      description: Paged list of content types.
    ContentTypeContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ContentTypeContractProperties'
          description: Properties of the content type.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Content type contract details.
    ContentTypeContractProperties:
      properties:
        id:
          type: string
          description: Content type identifier
        name:
          type: string
          description: Content type name. Must be 1 to 250 characters long.
        description:
          type: string
          description: Content type description.
        schema:
          type: object
          description: Content type schema.
        version:
          type: string
          description: Content type version.
    ContentItemCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ContentItemContract'
          description: Collection of content items.
          readOnly: true
        nextLink:
          type: string
          description: Next page link, if any.
          readOnly: true
      description: Paged list of content items.
    ContentItemContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ContentItemContractProperties'
          description: Properties of the content item.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Content type contract details.
    ContentItemContractProperties:
      properties: {}
      additionalProperties: true
    DeletedServicesCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DeletedServiceContract'
          description: Page values.
          readOnly: true
        nextLink:
          type: string
          description: Next page link if any.
          readOnly: true
      description: Paged deleted API Management Services List Representation.
    DeletedServiceContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DeletedServiceContractProperties'
          description: Deleted API Management Service details.
        location:
          readOnly: true
          type: string
          description: API Management Service Master Location.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Deleted API Management Service information.
    DeletedServiceContractProperties:
      properties:
        serviceId:
          type: string
          description: Fully-qualified API Management Service Resource ID
        scheduledPurgeDate:
          type: string
          format: date-time
          description: 'UTC Date and Time when the service will be automatically purged. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.'
        deletionDate:
          type: string
          format: date-time
          description: 'UTC Timestamp when the service was soft-deleted. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.'
    PortalRevisionCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PortalRevisionContract'
          description: Collection of portal revisions.
          readOnly: true
        nextLink:
          type: string
          description: Next page link, if any.
          readOnly: true
      description: Paged list of portal revisions.
    PortalRevisionContract:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PortalRevisionContractProperties'
          description: Properties of the portal revisions.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Portal Revision's contract details.
    PortalRevisionContractProperties:
      properties:
        description:
          type: string
          description: Portal revision description.
          maxLength: 2000
        statusDetails:
          type: string
          description: Portal revision publishing status details.
          maxLength: 2000
          readOnly: true
        status:
          type: string
          description: Status of the portal's revision.
          enum:
            - pending
            - publishing
            - completed
            - failed
          x-ms-enum:
            modelAsString: true
            name: portalRevisionStatus
            values:
              - value: pending
                description: Portal's revision has been queued.
              - value: publishing
                description: Portal's revision is being published.
              - value: completed
                description: Portal's revision publishing completed.
              - value: failed
                description: Portal's revision publishing failed.
          readOnly: true
        isCurrent:
          type: boolean
          description: Indicates if the portal's revision is public.
        createdDateTime:
          type: string
          readOnly: true
          format: date-time
          description: Portal's revision creation date and time.
        updatedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: Last updated date and time.
    PrivateEndpointConnectionRequest:
      description: A request to approve or reject a private endpoint connection
      type: object
      properties:
        id:
          description: Private Endpoint Connection Resource Id.
          type: string
        properties:
          type: object
          description: The connection state of the private endpoint connection.
          properties:
            privateLinkServiceConnectionState:
              $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
              description: A collection of information about the state of the connection between service consumer and provider.
    RemotePrivateEndpointConnectionWrapper:
      description: Remote Private Endpoint Connection resource.
      type: object
      properties:
        id:
          description: Private Endpoint connection resource id
          type: string
        name:
          description: Private Endpoint Connection Name
          type: string
        type:
          description: Private Endpoint Connection Resource Type
          type: string
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionWrapperProperties'
          x-ms-client-flatten: true
          description: Resource properties.
    PrivateEndpointConnectionWrapperProperties:
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/ArmIdWrapper'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          type: string
          readOnly: true
          description: The provisioning state of the private endpoint connection resource.
        groupIds:
          type: array
          items:
            type: string
          readOnly: true
          description: All the Group ids.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
      type: object
    ArmIdWrapper:
      description: A wrapper for an ARM resource id
      type: object
      properties:
        id:
          type: string
          readOnly: true
    ConnectivityCheckRequest:
      description: A request to perform the connectivity check operation on a API Management service.
      type: object
      required:
        - source
        - destination
      properties:
        source:
          description: Definitions about the connectivity check origin.
          type: object
          required:
            - region
          properties:
            region:
              description: The API Management service region from where to start the connectivity check operation.
              type: string
              example: westus
            instance:
              description: The particular VMSS instance from which to fire the request.
              type: integer
              format: int64
        destination:
          description: The connectivity check operation destination.
          type: object
          required:
            - address
            - port
          properties:
            address:
              description: Destination address. Can either be an IP address or a FQDN.
              type: string
              example: microsoft.com
            port:
              description: Destination port.
              type: integer
              format: int64
              example: 80
        preferredIPVersion:
          description: The IP version to be used. Only IPv4 is supported for now.
          type: string
          enum:
            - IPv4
          x-ms-enum:
            name: PreferredIPVersion
            modelAsString: true
        protocol:
          description: The request's protocol. Specific protocol configuration can be available based on this selection. The specified destination address must be coherent with this value.
          type: string
          enum:
            - TCP
            - HTTP
            - HTTPS
          x-ms-enum:
            name: ConnectivityCheckProtocol
            modelAsString: true
        protocolConfiguration:
          description: Protocol-specific configuration.
          type: object
          properties:
            HTTPConfiguration:
              description: Configuration for HTTP or HTTPS requests.
              type: object
              properties:
                method:
                  description: The HTTP method to be used.
                  type: string
                  enum:
                    - GET
                    - POST
                  x-ms-enum:
                    name: Method
                    modelAsString: true
                validStatusCodes:
                  type: array
                  description: List of HTTP status codes considered valid for the request response.
                  items:
                    type: integer
                    format: int64
                headers:
                  type: array
                  description: List of headers to be included in the request.
                  items:
                    $ref: '#/components/schemas/HTTPHeader'
                  x-ms-identifiers:
                    - name
    HTTPHeader:
      description: HTTP header and it's value.
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: Header name.
        value:
          type: string
          description: Header value.
    ConnectivityCheckResponse:
      description: Information on the connectivity status.
      type: object
      properties:
        hops:
          readOnly: true
          type: array
          description: List of hops between the source and the destination.
          items:
            $ref: '#/components/schemas/ConnectivityHop'
        connectionStatus:
          readOnly: true
          type: string
          enum:
            - Unknown
            - Connected
            - Disconnected
            - Degraded
          x-ms-enum:
            name: ConnectionStatus
            modelAsString: true
          description: The connection status.
        avgLatencyInMs:
          description: Average latency in milliseconds.
          readOnly: true
          type: integer
          format: int64
        minLatencyInMs:
          description: Minimum latency in milliseconds.
          readOnly: true
          type: integer
          format: int64
        maxLatencyInMs:
          description: Maximum latency in milliseconds.
          readOnly: true
          type: integer
          format: int64
        probesSent:
          description: Total number of probes sent.
          readOnly: true
          type: integer
          format: int64
        probesFailed:
          description: Number of failed probes.
          readOnly: true
          type: integer
          format: int64
    ConnectivityHop:
      description: Information about a hop between the source and the destination.
      type: object
      properties:
        type:
          description: The type of the hop.
          readOnly: true
          type: string
        id:
          description: The ID of the hop.
          readOnly: true
          type: string
        address:
          description: The IP address of the hop.
          readOnly: true
          type: string
        resourceId:
          description: The ID of the resource corresponding to this hop.
          readOnly: true
          type: string
        nextHopIds:
          readOnly: true
          type: array
          description: List of next hop identifiers.
          items:
            type: string
        issues:
          readOnly: true
          type: array
          description: List of issues.
          items:
            $ref: '#/components/schemas/ConnectivityIssue'
          x-ms-identifiers: []
    ConnectivityIssue:
      description: Information about an issue encountered in the process of checking for connectivity.
      type: object
      properties:
        origin:
          readOnly: true
          type: string
          enum:
            - Local
            - Inbound
            - Outbound
          x-ms-enum:
            name: Origin
            modelAsString: true
          description: The origin of the issue.
        severity:
          readOnly: true
          type: string
          enum:
            - Error
            - Warning
          x-ms-enum:
            name: Severity
            modelAsString: true
          description: The severity of the issue.
        type:
          readOnly: true
          type: string
          enum:
            - Unknown
            - AgentStopped
            - GuestFirewall
            - DnsResolution
            - SocketBind
            - NetworkSecurityRule
            - UserDefinedRoute
            - PortThrottled
            - Platform
          x-ms-enum:
            name: IssueType
            modelAsString: true
          description: The type of issue.
        context:
          readOnly: true
          type: array
          description: Provides additional context on the issue.
          items:
            $ref: '#/components/schemas/IssueContext'
          x-ms-identifiers: []
    IssueContext:
      description: A key-value pair that provides additional context on the issue.
      type: object
      additionalProperties:
        type: string
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
    PrivateEndpointConnection:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: The Private Endpoint Connection resource.
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A private link resource
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Version of the API to be used with the client request.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: Operation identifier within an API. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    AccessParameter:
      name: accessName
      in: path
      description: The identifier of the Access configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - access
          - gitAccess
        x-ms-enum:
          modelAsString: true
          name: AccessIdName
        type: string
    SettingsParameter:
      name: settingsType
      in: path
      description: The identifier of the settings.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - public
        x-ms-enum:
          modelAsString: true
          name: settingsTypeName
        type: string
    ApiIdParameter:
      name: apiId
      in: path
      description: API identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        type: string
    ApiIdRevParameter:
      name: apiId
      in: path
      description: API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
        type: string
    ApiVersionSetIdParameter:
      name: versionSetId
      in: path
      description: Api Version Set identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        pattern: ^[^*#&+:<>?]+$
        type: string
    AppTypeParameter:
      name: appType
      in: query
      description: Determines the type of application which send the create user request. Default is legacy publisher portal.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - portal
          - developerPortal
        x-ms-enum:
          name: AppType
          modelAsString: true
          values:
            - value: portal
              description: User create request was sent by legacy developer portal.
            - value: developerPortal
              description: User create request was sent by new developer portal.
        default: portal
        type: string
    AttachmentIdParameter:
      name: attachmentId
      in: path
      description: Attachment identifier within an Issue. Must be unique in the current Issue.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
        type: string
    AuthenticationServerIdParameter:
      name: authsid
      in: path
      description: Identifier of the authorization server.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        pattern: ^[^*#&+:<>?]+$
        type: string
    BackendIdParameter:
      name: backendId
      in: path
      description: Identifier of the Backend entity. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        type: string
    CacheIdParameter:
      name: cacheId
      in: path
      description: Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        pattern: ^[^*#&+:<>?]+$
        type: string
    CertificateIdParameter:
      name: certificateId
      in: path
      description: Identifier of the certificate entity. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        pattern: ^[^*#&+:<>?]+$
        type: string
    CommentIdParameter:
      name: commentId
      in: path
      description: Comment identifier within an Issue. Must be unique in the current Issue.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
        type: string
    ConfigurationParameter:
      name: configurationName
      in: path
      description: The identifier of the Git Configuration Operation.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - configuration
        x-ms-enum:
          modelAsString: true
          name: configurationIdName
        type: string
    DiagnosticIdParameter:
      name: diagnosticId
      in: path
      description: Diagnostic identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        pattern: ^[^*#&+:<>?]+$
        type: string
    EmailParameter:
      name: email
      in: path
      description: Email identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    GroupIdParameter:
      name: groupId
      in: path
      description: Group identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        type: string
    IdentityProviderNameParameter:
      name: identityProviderName
      in: path
      description: Identity Provider Type identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - facebook
          - google
          - microsoft
          - twitter
          - aad
          - aadB2C
        x-ms-enum:
          name: IdentityProviderType
          modelAsString: true
          values:
            - value: facebook
              description: Facebook as Identity provider.
            - value: google
              description: Google as Identity provider.
            - value: microsoft
              description: Microsoft Live as Identity provider.
            - value: twitter
              description: Twitter as Identity provider.
            - value: aad
              description: Azure Active Directory as Identity provider.
            - value: aadB2C
              description: Azure Active Directory B2C as Identity provider.
        type: string
    IfMatchOptionalParameter:
      name: If-Match
      in: header
      description: ETag of the Entity. Not required when creating an entity, but required when updating an entity.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    IfMatchRequiredParameter:
      name: If-Match
      in: header
      description: ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    IssueIdParameter:
      name: issueId
      in: path
      description: Issue identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
        type: string
    LocationNameParameter:
      name: locationName
      in: path
      description: Location in which the API Management service is deployed. This is one of the Azure Regions like West US, East US, South Central US.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LoggerIdParameter:
      name: loggerId
      in: path
      description: Logger identifier. Must be unique in the API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
        type: string
    NotificationNameParameter:
      name: notificationName
      in: path
      description: Notification Name Identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - RequestPublisherNotificationMessage
          - PurchasePublisherNotificationMessage
          - NewApplicationNotificationMessage
          - BCC
          - NewIssuePublisherNotificationMessage
          - AccountClosedPublisher
          - QuotaLimitApproachingPublisherNotificationMessage
        x-ms-enum:
          name: NotificationName
          modelAsString: true
          values:
            - value: RequestPublisherNotificationMessage
              description: The following email recipients and users will receive email notifications about subscription requests for API products requiring approval.
            - value: PurchasePublisherNotificationMessage
              description: The following email recipients and users will receive email notifications about new API product subscriptions.
            - value: NewApplicationNotificationMessage
              description: The following email recipients and users will receive email notifications when new applications are submitted to the application gallery.
            - value: BCC
              description: The following recipients will receive blind carbon copies of all emails sent to developers.
            - value: NewIssuePublisherNotificationMessage
              description: The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal.
            - value: AccountClosedPublisher
              description: The following email recipients and users will receive email notifications when developer closes his account.
            - value: QuotaLimitApproachingPublisherNotificationMessage
              description: The following email recipients and users will receive email notifications when subscription usage gets close to usage quota.
        type: string
    NotifySubscriptionStateChangeParameter:
      name: notify
      in: query
      description: |-
        Notify change in Subscription State. 
         - If false, do not send any email notification for change of state of subscription 
         - If true, send email notification of change of state of subscription 
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    OpenIdConnectIdParameter:
      name: opid
      in: path
      description: Identifier of the OpenID Connect Provider.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
        type: string
    PolicyExportFormat:
      name: format
      in: query
      description: Policy Export Format.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - xml
          - rawxml
        x-ms-enum:
          name: PolicyExportFormat
          modelAsString: true
          values:
            - value: xml
              description: The contents are inline and Content type is an XML document.
            - value: rawxml
              description: The contents are inline and Content type is a non XML encoded policy document.
        default: xml
        type: string
    PolicyIdParameter:
      name: policyId
      in: path
      description: The identifier of the Policy.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - policy
        x-ms-enum:
          modelAsString: true
          name: PolicyIdName
        type: string
    PortalRevisionIdParameter:
      name: portalRevisionId
      in: path
      description: Portal revision identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        type: string
    ProductIdParameter:
      name: productId
      in: path
      description: Product identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 256
        type: string
    NamedValueIdParameter:
      name: namedValueId
      in: path
      description: Identifier of the NamedValue.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
        type: string
    QuotaCounterKeyParameter:
      name: quotaCounterKey
      in: path
      description: Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QuotaPeriodKeyParameter:
      name: quotaPeriodKey
      in: path
      description: Quota period key identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ReleaseIdParameter:
      name: releaseId
      in: path
      description: Release identifier within an API. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        pattern: ^[^*#&+:<>?]+$
        type: string
    ServiceNameParameter:
      name: serviceName
      in: path
      description: The name of the API Management service.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 50
        pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
        type: string
    SkipQueryParameter:
      name: $skip
      in: query
      description: Number of records to skip.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        minimum: 0
        type: integer
    SubscriptionEntityIdParameter:
      name: sid
      in: path
      description: Subscription entity Identifier. The entity represents the association between a user and a product in API Management.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 256
        pattern: ^[^*#&+:<>?]+$
        type: string
    TagIdParameter:
      name: tagId
      in: path
      description: Tag identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        pattern: ^[^*#&+:<>?]+$
        type: string
    TagDescriptionIdParameter:
      name: tagDescriptionId
      in: path
      description: Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        pattern: ^[^*#&+:<>?]+$
        type: string
    TemplateNameParameter:
      name: templateName
      in: path
      description: Email Template Name Identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - applicationApprovedNotificationMessage
          - accountClosedDeveloper
          - quotaLimitApproachingDeveloperNotificationMessage
          - newDeveloperNotificationMessage
          - emailChangeIdentityDefault
          - inviteUserNotificationMessage
          - newCommentNotificationMessage
          - confirmSignUpIdentityDefault
          - newIssueNotificationMessage
          - purchaseDeveloperNotificationMessage
          - passwordResetIdentityDefault
          - passwordResetByAdminNotificationMessage
          - rejectDeveloperNotificationMessage
          - requestDeveloperNotificationMessage
        x-ms-enum:
          name: TemplateName
          modelAsString: true
        type: string
    TopQueryParameter:
      name: $top
      in: query
      description: Number of records to return.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        minimum: 1
        type: integer
    UserIdParameter:
      name: userId
      in: path
      description: User identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        type: string
    GatewayIdParameter:
      name: gatewayId
      in: path
      description: Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        type: string
    GatewayHostnameConfigurationIdParameter:
      name: hcId
      in: path
      description: Gateway hostname configuration identifier. Must be unique in the scope of parent Gateway entity.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        type: string
    ContentTypeIdParameter:
      name: contentTypeId
      in: path
      description: Content type identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        type: string
    ContentItemIdParameter:
      name: contentItemId
      in: path
      description: Content item identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        type: string
    SchemaIdParameter:
      name: schemaId
      in: path
      description: Schema id identifier. Must be unique in the current API Management service instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 80
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant:
    x-api-version: '2021-08-01'
    get:
      tags:
        - TenantAccess
      operationId: TenantAccess_ListByService
      description: Returns list of access infos - for Git and Management endpoints.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: Not used
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of TenantAccessInfo entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessInformationCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/AccessInformationContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - TenantAccess
      operationId: TenantAccess_GetEntityTag
      description: Tenant access metadata
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccessParameter'
      responses:
        '200':
          description: Operation completed successfully.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - TenantAccess
      operationId: TenantAccess_Get
      description: Get tenant access information details without secrets.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccessParameter'
      responses:
        '200':
          description: Tenant Access information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessInformationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - TenantAccess
      operationId: TenantAccess_Create
      description: Update tenant access information details.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/AccessParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to retrieve the Tenant Access Information.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessInformationCreateParameters'
      responses:
        '200':
          description: Tenant Access information was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessInformationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - TenantAccess
      operationId: TenantAccess_Update
      description: Update tenant access information details.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/AccessParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to retrieve the Tenant Access Information.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessInformationUpdateParameters'
      responses:
        '200':
          description: Tenant Access information was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessInformationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regeneratePrimaryKey:
    x-api-version: '2021-08-01'
    post:
      tags:
        - TenantAccess
      operationId: TenantAccess_RegeneratePrimaryKey
      description: Regenerate primary access key
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccessParameter'
      responses:
        '204':
          description: The primary key was successfully regenerated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regenerateSecondaryKey:
    x-api-version: '2021-08-01'
    post:
      tags:
        - TenantAccess
      operationId: TenantAccess_RegenerateSecondaryKey
      description: Regenerate secondary access key
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccessParameter'
      responses:
        '204':
          description: The secondary key was successfully regenerated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/listSecrets:
    x-api-version: '2021-08-01'
    post:
      tags:
        - TenantAccess
      operationId: TenantAccess_ListSecrets
      description: Get tenant access information details.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccessParameter'
      responses:
        '200':
          description: Tenant Access information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessInformationSecretsContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regeneratePrimaryKey:
    x-api-version: '2021-08-01'
    post:
      tags:
        - TenantAccessGit
      operationId: TenantAccessGit_RegeneratePrimaryKey
      description: Regenerate primary access key for GIT.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccessParameter'
      responses:
        '204':
          description: The primary key was successfully regenerated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regenerateSecondaryKey:
    x-api-version: '2021-08-01'
    post:
      tags:
        - TenantAccessGit
      operationId: TenantAccessGit_RegenerateSecondaryKey
      description: Regenerate secondary access key for GIT.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccessParameter'
      responses:
        '204':
          description: The secondary key was successfully regenerated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/deploy:
    x-api-version: '2021-08-01'
    post:
      tags:
        - TenantConfiguration
      operationId: TenantConfiguration_Deploy
      description: This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete.
      externalDocs:
        description: To deploy any service configuration changes to the API Management service instance
        url: https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-deploy-any-service-configuration-changes-to-the-api-management-service-instance
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ConfigurationParameter'
      requestBody:
        description: Deploy Configuration parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployConfigurationParameters'
      responses:
        '200':
          description: Result of applying changes from Git branch to database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultContract'
        '202':
          description: 'Accepted: Location header contains the URL where the status of the long running operation can be checked.'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/save:
    x-api-version: '2021-08-01'
    post:
      tags:
        - TenantConfiguration
      operationId: TenantConfiguration_Save
      description: This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete.
      externalDocs:
        description: To save the service configuration to the Git repository
        url: https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-save-the-service-configuration-to-the-git-repository
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ConfigurationParameter'
      requestBody:
        description: Save Configuration parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveConfigurationParameter'
      responses:
        '200':
          description: Result of creating a commit in the repository.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultContract'
        '202':
          description: 'Accepted: Location header contains the URL where the status of the long running operation can be checked.'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/validate:
    x-api-version: '2021-08-01'
    post:
      tags:
        - TenantConfiguration
      operationId: TenantConfiguration_Validate
      description: This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ConfigurationParameter'
      requestBody:
        description: Validate Configuration parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployConfigurationParameters'
      responses:
        '200':
          description: Result of validating the changes in the specified Git branch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultContract'
        '202':
          description: 'Accepted: Location header contains the URL where the status of the long running operation can be checked.'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/syncState:
    x-api-version: '2021-08-01'
    get:
      tags:
        - TenantConfigurationSyncState
      operationId: TenantConfiguration_GetSyncState
      description: Gets the status of the most recent synchronization between the configuration database and the Git repository.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ConfigurationParameter'
      responses:
        '200':
          description: Sync state result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigurationSyncStateContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/connectivityCheck:
    x-api-version: '2021-08-01'
    post:
      x-ms-long-running-operation-options:
        final-state-via: location
      tags:
        - PerformConnectivityCheck
      operationId: PerformConnectivityCheckAsync
      description: Performs a connectivity check between the API Management service and a given destination, and returns metrics for the connection, as well as errors encountered while trying to establish it.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Connectivity Check request parameters.
        required: true
        x-ms-requestBody-name: connectivityCheckRequestParams
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectivityCheckRequest'
      responses:
        '200':
          description: Connectivity Check Request was completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityCheckResponse'
        '202':
          description: Request was accepted and is currently running. Location header contains the URL where the status of the long running operation can be checked and the result eventually retrieved.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tagResources:
    x-api-version: '2021-08-01'
    get:
      tags:
        - TagResource
      operationId: TagResource_ListByService
      description: Lists a collection of resources associated with tags.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| aid | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| isCurrent | filter | eq |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of TagResource entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TagResourceContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Notification
      operationId: Notification_ListByService
      description: Lists a collection of properties defined within a service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A Collection of the Notification for the specified API Management service instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Notification
      operationId: Notification_Get
      description: Gets the details of the Notification specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Notification.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Notification
      operationId: Notification_CreateOrUpdate
      description: Create or Update API Management publisher notification.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Notification was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers:
    x-api-version: '2021-08-01'
    get:
      tags:
        - NotificationRecipientUser
      operationId: NotificationRecipientUser_ListByNotification
      description: Gets the list of the Notification Recipient User subscribed to the notification.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the Recipient User collection for the notification.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientUserCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers/{userId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - NotificationRecipientUser
      operationId: NotificationRecipientUser_CheckEntityExists
      description: Determine if the Notification Recipient User is subscribed to the notification.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The User is subscribed to receive the notification.
        '404':
          description: Entity does not exists.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - NotificationRecipientUser
      operationId: NotificationRecipientUser_CreateOrUpdate
      description: Adds the API Management User to the list of Recipients for the Notification.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Recipient User is already part of the notification list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientUserContract'
        '201':
          description: Recipient User was successfully added to the notification list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientUserContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - NotificationRecipientUser
      operationId: NotificationRecipientUser_Delete
      description: Removes the API Management user from the list of Notification.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Recipient User was successfully removed from the notification list.
        '204':
          description: Recipient User was successfully removed from the notification list.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails:
    x-api-version: '2021-08-01'
    get:
      tags:
        - NotificationRecipientEmail
      operationId: NotificationRecipientEmail_ListByNotification
      description: Gets the list of the Notification Recipient Emails subscribed to a notification.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the Recipient Email collection subscribed to the notification.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientEmailCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails/{email}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - NotificationRecipientEmail
      operationId: NotificationRecipientEmail_CheckEntityExists
      description: Determine if Notification Recipient Email subscribed to the notification.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/EmailParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The Users is subscribed to receive the notification.
        '404':
          description: The Users is not subscribed to receive the notification.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - NotificationRecipientEmail
      operationId: NotificationRecipientEmail_CreateOrUpdate
      description: Adds the Email address to the list of Recipients for the Notification.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/EmailParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Recipient Email is already part of the notification list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientEmailContract'
        '201':
          description: Recipient Email was successfully added to the notification list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientEmailContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - NotificationRecipientEmail
      operationId: NotificationRecipientEmail_Delete
      description: Removes the email from the list of Notification.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NotificationNameParameter'
        - $ref: '#/components/parameters/EmailParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Recipient Email was successfully removed to the notification list.
        '204':
          description: Recipient Email was successfully removed to the notification list.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Logger
      operationId: Logger_ListByService
      description: Lists a collection of loggers in the specified service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| loggerType | filter | eq |     |</br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Logger entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/LoggerContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Logger
      operationId: Logger_GetEntityTag
      description: Gets the entity state (Etag) version of the logger specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/LoggerIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified logger entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Logger
      operationId: Logger_Get
      description: Gets the details of the logger specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/LoggerIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Logger entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Logger
      operationId: Logger_CreateOrUpdate
      description: Creates or Updates a logger.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/LoggerIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggerContract'
      responses:
        '200':
          description: The existing logger was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Logger was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Logger
      operationId: Logger_Update
      description: Updates an existing logger.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/LoggerIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggerUpdateContract'
      responses:
        '200':
          description: The existing logger was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Logger
      operationId: Logger_Delete
      description: Deletes the specified logger.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/LoggerIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The logger was successfully deleted.
        '204':
          description: The logger was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ContentType
      operationId: ContentType_ListByService
      description: Lists the developer portal's content types. Content types describe content items' properties, validation rules, and constraints.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns a collection of the Content Type entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTypeCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ContentType
      operationId: ContentType_Get
      description: Gets the details of the developer portal's content type. Content types describe content items' properties, validation rules, and constraints.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ContentTypeIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns the details of the specified content type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTypeContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ContentType
      operationId: ContentType_CreateOrUpdate
      description: Creates or updates the developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Custom content types' identifiers need to start with the `c-` prefix. Built-in content types can't be modified.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ContentTypeIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The existing content type was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTypeContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The content type was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTypeContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ContentType
      operationId: ContentType_Delete
      description: Removes the specified developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Built-in content types (with identifiers starting with the `c-` prefix) can't be removed.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ContentTypeIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The content type was successfully deleted.
        '204':
          description: The content type was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ContentTypeContentItem
      operationId: ContentItem_ListByService
      description: Lists developer portal's content items specified by the provided content type.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ContentTypeIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns a collection of Content Type entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItemCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ContentTypeContentItem
      operationId: ContentItem_GetEntityTag
      description: Returns the entity state (ETag) version of the developer portal's content item specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ContentTypeIdParameter'
        - $ref: '#/components/parameters/ContentItemIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified content item entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ContentTypeContentItem
      operationId: ContentItem_Get
      description: Returns the developer portal's content item specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ContentTypeIdParameter'
        - $ref: '#/components/parameters/ContentItemIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns the content item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItemContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ContentTypeContentItem
      operationId: ContentItem_CreateOrUpdate
      description: Creates a new developer portal's content item specified by the provided content type.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ContentTypeIdParameter'
        - $ref: '#/components/parameters/ContentItemIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The existing content item was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItemContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The content item was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItemContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ContentTypeContentItem
      operationId: ContentItem_Delete
      description: Removes the specified developer portal's content item.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ContentTypeIdParameter'
        - $ref: '#/components/parameters/ContentItemIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The content item was successfully deleted.
        '204':
          description: The content item was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders:
    x-api-version: '2021-08-01'
    get:
      tags:
        - OpenidConnectProvider
      operationId: OpenIdConnectProvider_ListByService
      description: Lists of all the OpenId Connect Providers.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists of all the OpenId Connect Providers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenIdConnectProviderCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/OpenidConnectProviderContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - OpenidConnectProvider
      operationId: OpenIdConnectProvider_GetEntityTag
      description: Gets the entity state (Etag) version of the openIdConnectProvider specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/OpenIdConnectIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified openidConnectProvider entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - OpenidConnectProvider
      operationId: OpenIdConnectProvider_Get
      description: Gets specific OpenID Connect Provider without secrets.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/OpenIdConnectIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified OpenId Connect Provider entity without secrets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectProviderContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - OpenidConnectProvider
      operationId: OpenIdConnectProvider_CreateOrUpdate
      description: Creates or updates the OpenID Connect Provider.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/OpenIdConnectIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenidConnectProviderContract'
      responses:
        '200':
          description: OpenIdConnect Provider was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectProviderContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: OpenIdConnect Provider was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectProviderContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - OpenidConnectProvider
      operationId: OpenIdConnectProvider_Update
      description: Updates the specific OpenID Connect Provider.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/OpenIdConnectIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenidConnectProviderUpdateContract'
      responses:
        '200':
          description: OpenIdConnect Provider was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectProviderContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - OpenidConnectProvider
      operationId: OpenIdConnectProvider_Delete
      description: Deletes specific OpenID Connect Provider of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/OpenIdConnectIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OpenId Connect Provider was successfully deleted.
        '204':
          description: OpenId Connect Provider was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}/listSecrets:
    x-api-version: '2021-08-01'
    post:
      tags:
        - OpenidConnectProvider
      operationId: OpenIdConnectProvider_ListSecrets
      description: Gets the client secret details of the OpenID Connect Provider.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/OpenIdConnectIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified OpenId Connect Provider secrets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSecretContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Group
      operationId: Group_ListByService
      description: Lists a collection of groups defined within a service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-groups
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| externalId | filter | eq |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Group entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/GroupContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Group
      operationId: Group_GetEntityTag
      description: Gets the entity state (Etag) version of the group specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified group entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Group
      operationId: Group_Get
      description: Gets the details of the group specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Group entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Group
      operationId: Group_CreateOrUpdate
      description: Creates or Updates a group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateParameters'
      responses:
        '200':
          description: Group already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Group was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Group
      operationId: Group_Update
      description: Updates the details of the group specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateParameters'
      responses:
        '200':
          description: The group details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Group
      operationId: Group_Delete
      description: Deletes specific group of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The group was successfully deleted.
        '204':
          description: The group was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users:
    x-api-version: '2021-08-01'
    get:
      tags:
        - GroupUser
      operationId: GroupUser_List
      description: Lists a collection of user entities associated with the group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of user entities associated with the group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/UserContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{userId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - GroupUser
      operationId: GroupUser_CheckEntityExists
      description: Checks that user entity specified by identifier is associated with the group entity.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: Entity exists
        '404':
          description: Entity does not exists.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - GroupUser
      operationId: GroupUser_Create
      description: Add existing user to existing group
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The specified user is already a member of the specified group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContract'
        '201':
          description: The user was successfully added to the group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GroupUser
      operationId: GroupUser_Delete
      description: Remove existing user from existing group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The user was successfully removed from the group.
        '204':
          description: The user was successfully removed from the group.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Issue
      operationId: Issue_ListByService
      description: Lists a collection of issues in the specified service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| authorName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Issue entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/IssueContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues/{issueId}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Issue
      operationId: Issue_Get
      description: Gets API Management issue details
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Get the details of the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Subscription
      operationId: Subscription_List
      description: Lists all subscriptions of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A collection of the Subscription entities for the specified API Management service instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/SubscriptionContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Subscription
      operationId: Subscription_GetEntityTag
      description: Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionEntityIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified apimanagement subscription entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Subscription
      operationId: Subscription_Get
      description: Gets the specified Subscription entity.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionEntityIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Subscription entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Subscription
      operationId: Subscription_CreateOrUpdate
      description: Creates or updates the subscription of specified user to the specified product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionEntityIdParameter'
        - $ref: '#/components/parameters/NotifySubscriptionStateChangeParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AppTypeParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateParameters'
      responses:
        '200':
          description: The user already subscribed to the product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The user was successfully subscribed to the product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Subscription
      operationId: Subscription_Update
      description: Updates the details of a subscription specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionEntityIdParameter'
        - $ref: '#/components/parameters/NotifySubscriptionStateChangeParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AppTypeParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateParameters'
      responses:
        '200':
          description: The subscription details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Subscription
      operationId: Subscription_Delete
      description: Deletes the specified subscription.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionEntityIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The subscription details were successfully deleted.
        '204':
          description: The subscription details were successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey:
    x-api-version: '2021-08-01'
    post:
      tags:
        - Subscription
      operationId: Subscription_RegeneratePrimaryKey
      description: Regenerates primary key of existing subscription of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionEntityIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The primary key was successfully regenerated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey:
    x-api-version: '2021-08-01'
    post:
      tags:
        - Subscription
      operationId: Subscription_RegenerateSecondaryKey
      description: Regenerates secondary key of existing subscription of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionEntityIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The secondary key was successfully regenerated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/listSecrets:
    x-api-version: '2021-08-01'
    post:
      tags:
        - Subscription
      operationId: Subscription_ListSecrets
      description: Gets the specified Subscription keys.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionEntityIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains subscription keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionKeysContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApisByTag
      operationId: Api_ListByTags
      description: Lists a collection of apis associated with tags.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: includeNotTaggedApis
          in: query
          description: Include not tagged APIs.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of TagResource entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TagResourceContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiVersionSet
      operationId: ApiVersionSet_ListByService
      description: Lists a collection of API Version Sets in the specified service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Api Version Set entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersionSetCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ApiVersionSetContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiVersionSet
      operationId: ApiVersionSet_GetEntityTag
      description: Gets the entity state (Etag) version of the Api Version Set specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionSetIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified Api Version Set entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiVersionSet
      operationId: ApiVersionSet_Get
      description: Gets the details of the Api Version Set specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionSetIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the specified Api Version Set entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersionSetContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiVersionSet
      operationId: ApiVersionSet_CreateOrUpdate
      description: Creates or Updates a Api Version Set.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionSetIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiVersionSetContract'
      responses:
        '200':
          description: Api Version Set was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersionSetContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Api Version Set was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersionSetContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ApiVersionSet
      operationId: ApiVersionSet_Update
      description: Updates the details of the Api VersionSet specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionSetIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiVersionSetUpdateParameters'
      responses:
        '200':
          description: Api Version Set was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersionSetContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiVersionSets
      operationId: ApiVersionSet_Delete
      description: Deletes specific Api Version Set.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionSetIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The ApiVersion Set details were successfully deleted.
        '204':
          description: The ApiVersion Set details were successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Api
      operationId: Api_ListByService
      description: Lists all APIs of the API Management service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq, ne |  |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: tags
          in: query
          description: Include tags in the response.
          required: false
          schema:
            type: string
        - name: expandApiVersionSet
          in: query
          description: Include full ApiVersionSet resource in response
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Paged Result response of Apis.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ApiContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Api
      operationId: Api_GetEntityTag
      description: Gets the entity state (Etag) version of the API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified API entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Api
      operationId: Api_Get
      description: Gets the details of the API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified API entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Api
      operationId: Api_CreateOrUpdate
      description: Creates new or updates existing specified API of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCreateOrUpdateParameter'
      responses:
        '200':
          description: API was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: API was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '202':
          description: Request to create or update API was accepted. Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Api
      operationId: Api_Update
      description: Updates the specified API of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: API Update Contract parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUpdateContract'
      responses:
        '200':
          description: API was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Api
      operationId: Api_Delete
      description: Deletes the specified API of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - name: deleteRevisions
          in: query
          description: Delete all revisions of the Api.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The API was successfully deleted.
        '204':
          description: The API was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/revisions:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiRevision
      operationId: ApiRevision_ListByService
      description: Lists all revisions of an API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation returns a list of revision details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRevisionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ApiRevisionContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiRelease
      operationId: ApiRelease_ListByService
      description: Lists all releases of an API. An API release is created when making an API Revision current. Releases are also used to rollback to previous revisions. Results will be paged and can be constrained by the $top and $skip parameters.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation returns a list of API Releases.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReleaseCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ApiReleaseContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiRelease
      operationId: ApiRelease_GetEntityTag
      description: Returns the etag of an API release.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/ReleaseIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the entity state (Etag) version of the api release as specified by its identifier.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiRelease
      operationId: ApiRelease_Get
      description: Returns the details of an API release.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/ReleaseIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation returns the details of an API Release.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReleaseContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiRelease
      operationId: ApiRelease_CreateOrUpdate
      description: Creates a new Release for the API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/ReleaseIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiReleaseContract'
      responses:
        '200':
          description: Release was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReleaseContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Release was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReleaseContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ApiRelease
      operationId: ApiRelease_Update
      description: Updates the details of the release of the API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/ReleaseIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: API Release Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiReleaseContract'
      responses:
        '200':
          description: Release was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReleaseContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiRelease
      operationId: ApiRelease_Delete
      description: Deletes the specified release in the API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/ReleaseIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: API release successfully removed
        '204':
          description: API release successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiOperation
      operationId: ApiOperation_ListByApi
      description: Lists a collection of the operations for the specified API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: tags
          in: query
          description: Include tags in the response.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A collection of operation summary entities at the API level.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/OperationContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiOperation
      operationId: ApiOperation_GetEntityTag
      description: Gets the entity state (Etag) version of the API operation specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified API operation entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiOperation
      operationId: ApiOperation_Get
      description: Gets the details of the API Operation specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Operation entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiOperation
      operationId: ApiOperation_CreateOrUpdate
      description: Creates a new operation in the API or updates an existing one.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationContract'
      responses:
        '200':
          description: Operation was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Operation was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ApiOperation
      operationId: ApiOperation_Update
      description: Updates the details of the operation in the API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: API Operation Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationUpdateContract'
      responses:
        '200':
          description: Operation was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiOperation
      operationId: ApiOperation_Delete
      description: Deletes the specified operation in the API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: API operation successfully removed
        '204':
          description: API operation successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiOperationPolicy
      operationId: ApiOperationPolicy_ListByOperation
      description: Get the list of policy configuration at the API Operation level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Api Operations Policy Collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiOperationPolicy
      operationId: ApiOperationPolicy_GetEntityTag
      description: Gets the entity state (Etag) version of the API operation policy specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified API operation policy entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiOperationPolicy
      operationId: ApiOperationPolicy_Get
      description: Get the policy configuration at the API Operation level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/PolicyExportFormat'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Api Operation Policy information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiOperationPolicy
      operationId: ApiOperationPolicy_CreateOrUpdate
      description: Creates or updates policy configuration for the API Operation level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The policy contents to apply.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyContract'
      responses:
        '200':
          description: Api Operation policy configuration of the tenant was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Api Operation policy configuration was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiOperationPolicy
      operationId: ApiOperationPolicy_Delete
      description: Deletes the policy configuration at the Api Operation.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Policy successfully removed
        '204':
          description: Policy successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiOperationTag
      operationId: Tag_ListByOperation
      description: Lists all Tags associated with the Operation.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation returns a collection of tags associated with the Operation entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TagContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiOperationTag
      operationId: Tag_GetEntityStateByOperation
      description: Gets the entity state version of the tag specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Empty response body, ETag header entity state version.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiOperationTag
      operationId: Tag_GetByOperation
      description: Get tag associated with the Operation.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the details of the tag specified by its identifier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiOperationTag
      operationId: Tag_AssignToOperation
      description: Assign tag to the Operation.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Tag is already assigned to the Operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
        '201':
          description: Tag was assigned to the Operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiOperationTag
      operationId: Tag_DetachFromOperation
      description: Detach the tag from the Operation.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Tag was successfully removed from Operation
        '204':
          description: Tag successfully removed by previous request or does not exist in Operation
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiProduct
      operationId: ApiProduct_ListByApis
      description: Lists all Products, which the API is part of.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation returns a collection of products which have the Api entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ProductContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiPolicy
      operationId: ApiPolicy_ListByApi
      description: Get the policy configuration at the API level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Apis Policy Collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiPolicy
      operationId: ApiPolicy_GetEntityTag
      description: Gets the entity state (Etag) version of the API policy specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified API Policy entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiPolicy
      operationId: ApiPolicy_Get
      description: Get the policy configuration at the API level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/PolicyExportFormat'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Api Policy information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
            application/vnd.ms-azure-apim.policy+xml:
              schema:
                $ref: '#/components/schemas/PolicyContract'
            application/vnd.ms-azure-apim.policy.raw+xml:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/vnd.ms-azure-apim.policy+xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/vnd.ms-azure-apim.policy.raw+xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiPolicy
      operationId: ApiPolicy_CreateOrUpdate
      description: Creates or updates policy configuration for the API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The policy contents to apply.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyContract'
      responses:
        '200':
          description: Api policy configuration of the tenant was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Api policy configuration was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiPolicy
      operationId: ApiPolicy_Delete
      description: Deletes the policy configuration at the Api.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the policy configuration at the API level.
        '204':
          description: Successfully deleted the policy configuration at the API level.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiSchema
      operationId: ApiSchema_ListByApi
      description: Get the schema configuration at the API level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Apis Schema Collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiSchema
      operationId: ApiSchema_GetEntityTag
      description: Gets the entity state (Etag) version of the schema specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/SchemaIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified schema entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiSchema
      operationId: ApiSchema_Get
      description: Get the schema configuration at the API level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/SchemaIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Api Schema information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiSchema
      operationId: ApiSchema_CreateOrUpdate
      description: Creates or updates schema configuration for the API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/SchemaIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The schema contents to apply.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaContract'
      responses:
        '200':
          description: Api schema configuration of the tenant was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Api schema configuration was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '202':
          description: Request to create or update Api schema was accepted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - ApiSchema
      operationId: ApiSchema_Delete
      description: Deletes the schema configuration at the Api.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/SchemaIdParameter'
        - name: force
          in: query
          description: If true removes all references to the schema before deleting it.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the schema configuration at the API level.
        '204':
          description: Successfully deleted the schema configuration at the API level.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiDiagnostic
      operationId: ApiDiagnostic_ListByService
      description: Lists all diagnostics of an API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Paged Result response of diagnostics for an API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/DiagnosticContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiDiagnostic
      operationId: ApiDiagnostic_GetEntityTag
      description: Gets the entity state (Etag) version of the Diagnostic for an API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation completed successfully.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiDiagnostic
      operationId: ApiDiagnostic_Get
      description: Gets the details of the Diagnostic for an API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Diagnostic entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiDiagnostic
      operationId: ApiDiagnostic_CreateOrUpdate
      description: Creates a new Diagnostic for an API or updates an existing one.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticContract'
      responses:
        '200':
          description: Diagnostic was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Diagnostic was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ApiDiagnostic
      operationId: ApiDiagnostic_Update
      description: Updates the details of the Diagnostic for an API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Diagnostic Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticContract'
      responses:
        '200':
          description: Diagnostic was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiDiagnostic
      operationId: ApiDiagnostic_Delete
      description: Deletes the specified Diagnostic from an API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Diagnostic successfully removed
        '204':
          description: Diagnostic successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiIssue
      operationId: ApiIssue_ListByService
      description: Lists all issues associated with the specified API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>'
          required: false
          schema:
            type: string
        - name: expandCommentsAttachments
          in: query
          description: 'Expand the comment attachments. '
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Paged Result response of issues for the API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/IssueContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiIssue
      operationId: ApiIssue_GetEntityTag
      description: Gets the entity state (Etag) version of the Issue for an API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation completed successfully.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiIssue
      operationId: ApiIssue_Get
      description: Gets the details of the Issue for an API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - name: expandCommentsAttachments
          in: query
          description: 'Expand the comment attachments. '
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Issue entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiIssue
      operationId: ApiIssue_CreateOrUpdate
      description: Creates a new Issue for an API or updates an existing one.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueContract'
      responses:
        '200':
          description: Api issue successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: New api issue successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ApiIssue
      operationId: ApiIssue_Update
      description: Updates an existing issue for an API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueUpdateContract'
      responses:
        '200':
          description: Api issue updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiIssue
      operationId: ApiIssue_Delete
      description: Deletes the specified Issue from an API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Issue successfully removed
        '204':
          description: Issue successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiIssueComment
      operationId: ApiIssueComment_ListByService
      description: Lists all comments for the Issue associated with the specified API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Paged Result response of issue comments for the API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCommentCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/IssueCommentContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiIssueComment
      operationId: ApiIssueComment_GetEntityTag
      description: Gets the entity state (Etag) version of the issue Comment for an API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/CommentIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation completed successfully.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiIssueComment
      operationId: ApiIssueComment_Get
      description: Gets the details of the issue Comment for an API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/CommentIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified issue Comment entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCommentContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiIssueComment
      operationId: ApiIssueComment_CreateOrUpdate
      description: Creates a new Comment for the Issue in an API or updates an existing one.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/CommentIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCommentContract'
      responses:
        '200':
          description: Api issue comment successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCommentContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: New api issue comment successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCommentContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiIssueComment
      operationId: ApiIssueComment_Delete
      description: Deletes the specified comment from an Issue.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/CommentIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Comment successfully removed
        '204':
          description: Comment successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiIssueAttachment
      operationId: ApiIssueAttachment_ListByService
      description: Lists all attachments for the Issue associated with the specified API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Paged Result response of issue attachments for the API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueAttachmentCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/IssueAttachmentContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiIssueAttachment
      operationId: ApiIssueAttachment_GetEntityTag
      description: Gets the entity state (Etag) version of the issue Attachment for an API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/AttachmentIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation completed successfully.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiIssueAttachment
      operationId: ApiIssueAttachment_Get
      description: Gets the details of the issue Attachment for an API specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/AttachmentIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified issue Attachment entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueAttachmentContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiIssueAttachment
      operationId: ApiIssueAttachment_CreateOrUpdate
      description: Creates a new Attachment for the Issue in an API or updates an existing one.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/AttachmentIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueAttachmentContract'
      responses:
        '200':
          description: Api issue attachment successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueAttachmentContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: New api issue attachment successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueAttachmentContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiIssueAttachment
      operationId: ApiIssueAttachment_Delete
      description: Deletes the specified comment from an Issue.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/IssueIdParameter'
        - $ref: '#/components/parameters/AttachmentIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Attachment successfully removed
        '204':
          description: Attachment successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiTagDescription
      operationId: ApiTagDescription_ListByService
      description: Lists all Tags descriptions in scope of API. Model similar to swagger - tagDescription is defined on API level but tag may be assigned to the Operations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation returns a collection of tagDescriptions associated with the Api entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDescriptionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TagDescriptionContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiTagDescription
      operationId: ApiTagDescription_GetEntityTag
      description: Gets the entity state version of the tag specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/TagDescriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Empty response body, ETag header entity state version.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiTagDescription
      operationId: ApiTagDescription_Get
      description: Get Tag description in scope of API
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/TagDescriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the description of the tag specified by its identifier in scope if the Api.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDescriptionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiTagDescription
      operationId: ApiTagDescription_CreateOrUpdate
      description: Create/Update tag description in scope of the Api.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/TagDescriptionIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagDescriptionCreateParameters'
      responses:
        '200':
          description: Tag Description was updated for the Api.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDescriptionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Tag Description was created for the Api.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDescriptionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiTagDescription
      operationId: ApiTagDescription_Delete
      description: Delete tag description for the Api.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/TagDescriptionIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Tag description successfully removed
        '204':
          description: Tag description successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiTag
      operationId: Tag_ListByApi
      description: Lists all Tags associated with the API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation returns a collection of tags associated with the Api entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TagContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ApiTag
      operationId: Tag_GetEntityStateByApi
      description: Gets the entity state version of the tag specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Empty response body, ETag header entity state version.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ApiTag
      operationId: Tag_GetByApi
      description: Get tag associated with the API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the details of the tag specified by its identifier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ApiTag
      operationId: Tag_AssignToApi
      description: Assign tag to the Api.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Tag is already assigned to the Api.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Tag was assigned to the Api.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiTag
      operationId: Tag_DetachFromApi
      description: Detach the tag from the Api.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: API/Tag association successfully removed
        '204':
          description: API/Tag association successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operationsByTags:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiOperationsByTag
      operationId: Operation_ListByTags
      description: Lists a collection of operations associated with tags.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: includeNotTaggedOperations
          in: query
          description: Include not tagged Operations.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of TagResource entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TagResourceContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues:
    x-api-version: '2021-08-01'
    get:
      tags:
        - NamedValue
      operationId: NamedValue_ListByService
      description: Lists a collection of named values defined within a service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-properties
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| tags | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: isKeyVaultRefreshFailed
          in: query
          description: When set to true, the response contains only named value entities which failed refresh.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A Collection of the named value entities for the specified API Management service instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedValueCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/NamedValueContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - NamedValue
      operationId: NamedValue_GetEntityTag
      description: Gets the entity state (Etag) version of the named value specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NamedValueIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified named value entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - NamedValue
      operationId: NamedValue_Get
      description: Gets the details of the named value specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NamedValueIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified named value entity. No secrets included
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedValueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - NamedValue
      operationId: NamedValue_CreateOrUpdate
      description: Creates or updates named value.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NamedValueIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedValueCreateContract'
      responses:
        '200':
          description: Named value was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedValueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Named value was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedValueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '202':
          description: Request to create or update named value was accepted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - NamedValue
      operationId: NamedValue_Update
      description: Updates the specific named value.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NamedValueIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedValueUpdateParameters'
      responses:
        '200':
          description: Named value was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedValueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '202':
          description: Request to create or update named value was accepted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - NamedValue
      operationId: NamedValue_Delete
      description: Deletes specific named value from the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NamedValueIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Named value was successfully deleted.
        '204':
          description: Named value was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}/listValue:
    x-api-version: '2021-08-01'
    post:
      tags:
        - NamedValue
      operationId: NamedValue_ListValue
      description: Gets the secret of the named value specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NamedValueIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified named value secret.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedValueSecretContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}/refreshSecret:
    x-api-version: '2021-08-01'
    post:
      tags:
        - NamedValue
      operationId: NamedValue_RefreshSecret
      description: Refresh the secret of the named value specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/NamedValueIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Named value was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedValueContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '202':
          description: Request to refresh secret was accepted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users:
    x-api-version: '2021-08-01'
    get:
      tags:
        - User
      operationId: User_ListByService
      description: Lists a collection of registered users in the specified service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| groups | expand |     |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: expandGroups
          in: query
          description: Detailed Group in response.
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of User entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/UserContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - User
      operationId: User_GetEntityTag
      description: Gets the entity state (Etag) version of the user specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified user entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - User
      operationId: User_Get
      description: Gets the details of the user specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the specified user entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - User
      operationId: User_CreateOrUpdate
      description: Creates or Updates a user.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - name: notify
          in: query
          description: Send an Email notification to the User.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateParameters'
      responses:
        '200':
          description: User was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: User was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - User
      operationId: User_Update
      description: Updates the details of the user specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateParameters'
      responses:
        '200':
          description: User was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - User
      operationId: User_Delete
      description: Deletes specific user.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - name: deleteSubscriptions
          in: query
          description: Whether to delete user's subscription or not.
          required: false
          schema:
            type: boolean
        - name: notify
          in: query
          description: Send an Account Closed Email notification to the User.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AppTypeParameter'
      responses:
        '200':
          description: The user details were successfully deleted.
        '204':
          description: The user details were successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/generateSsoUrl:
    x-api-version: '2021-08-01'
    post:
      tags:
        - Users
      operationId: User_GenerateSsoUrl
      description: Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the single sign-on URL.
          content:
            application/json:
              schema:
                x-ms-client-flatten: true
                $ref: '#/components/schemas/GenerateSsoUrlResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/groups:
    x-api-version: '2021-08-01'
    get:
      tags:
        - UserGroup
      operationId: UserGroup_List
      description: Lists all user groups.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|------------------------|-----------------------------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Group entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/GroupContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/subscriptions:
    x-api-version: '2021-08-01'
    get:
      tags:
        - UserSubscription
      operationId: UserSubscription_List
      description: Lists the collection of subscriptions of the specified user.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - name: $filter
          in: query
          description: '| Field     |     Usage     |     Supported operators    | Supported functions               |</br>|-------------|------------------------|-----------------------------------|</br>|name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Subscription entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/SubscriptionContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/subscriptions/{sid}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Subscription
      operationId: UserSubscription_Get
      description: Gets the specified Subscription entity associated with a particular user.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/SubscriptionEntityIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Subscription entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/identities:
    x-api-version: '2021-08-01'
    get:
      tags:
        - UserIdentity
      operationId: UserIdentities_List
      description: List of all user identities.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists of User Identities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/token:
    x-api-version: '2021-08-01'
    post:
      tags:
        - UserToken
      operationId: User_GetSharedAccessToken
      description: Gets the Shared Access Authorization Token for the User.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create Authorization Token parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTokenParameters'
      responses:
        '200':
          description: The response body contains the authorization token for the user.
          content:
            application/json:
              schema:
                x-ms-client-flatten: true
                $ref: '#/components/schemas/UserTokenResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/confirmations/password/send:
    x-api-version: '2021-08-01'
    post:
      tags:
        - UserConfirmationPasswordSend
      operationId: UserConfirmationPassword_Send
      description: Sends confirmation
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/UserIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AppTypeParameter'
      responses:
        '204':
          description: Notification successfully sent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/outboundNetworkDependenciesEndpoints:
    x-api-version: '2021-08-01'
    get:
      tags:
        - OutboundNetworkDependenciesEndpoints
      operationId: OutboundNetworkDependenciesEndpoints_ListByService
      description: Gets the network endpoints of all outbound dependencies of a ApiManagement service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEnvironmentEndpointList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - QuotaByCounterKeys
      operationId: QuotaByCounterKeys_ListByService
      description: Lists a collection of current quota counter periods associated with the counter-key configured in the policy on the specified service instance. The api does not support paging yet.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies
        description: Document describing how to configure the quota policies.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/QuotaCounterKeyParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of the quota counter values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaCounterCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - QuotaByCounterKeys
      operationId: QuotaByCounterKeys_Update
      description: Updates all the quota counter values specified with the existing quota counter key to a value in the specified service instance. This should be used for reset of the quota counter values.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/QuotaCounterKeyParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The value of the quota counter to be applied to all quota counter periods.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaCounterValueUpdateContract'
      responses:
        '200':
          description: Updated Quota Counter Values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaCounterCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - QuotaByPeriodKeys
      operationId: QuotaByPeriodKeys_Get
      description: Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies
        description: Document describing how to configure the quota policies.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/QuotaCounterKeyParameter'
        - $ref: '#/components/parameters/QuotaPeriodKeyParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the Quota counter details for the specified period.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaCounterContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - QuotaByPeriodKeys
      operationId: QuotaByPeriodKeys_Update
      description: Updates an existing quota counter value in the specified service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/QuotaCounterKeyParameter'
        - $ref: '#/components/parameters/QuotaPeriodKeyParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The value of the Quota counter to be applied on the specified period.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaCounterValueUpdateContract'
      responses:
        '200':
          description: The response body contains the Quota counter details for the specified period.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaCounterContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Diagnostic
      operationId: Diagnostic_ListByService
      description: Lists all diagnostics of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Paged Result response of diagnostics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/DiagnosticContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Diagnostic
      operationId: Diagnostic_GetEntityTag
      description: Gets the entity state (Etag) version of the Diagnostic specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the entity tag of the diagnostic
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Diagnostic
      operationId: Diagnostic_Get
      description: Gets the details of the Diagnostic specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Diagnostic entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Diagnostic
      operationId: Diagnostic_CreateOrUpdate
      description: Creates a new Diagnostic or updates an existing one.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticContract'
      responses:
        '200':
          description: Diagnostic successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Diagnostic was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Diagnostic
      operationId: Diagnostic_Update
      description: Updates the details of the Diagnostic specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Diagnostic Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticContract'
      responses:
        '200':
          description: Diagnostic successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Diagnostic
      operationId: Diagnostic_Delete
      description: Deletes the specified Diagnostic.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/DiagnosticIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Diagnostic was successfully deleted.
        '204':
          description: The Diagnostic was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Certificate
      operationId: Certificate_ListByService
      description: Lists a collection of all certificates in the specified service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| subject | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| thumbprint | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| expirationDate | filter | ge, le, eq, ne, gt, lt |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: isKeyVaultRefreshFailed
          in: query
          description: When set to true, the response contains only certificates entities which failed refresh.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns a collection of Certificate entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/CertificateContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Certificate
      operationId: Certificate_GetEntityTag
      description: Gets the entity state (Etag) version of the certificate specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified certificate entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Certificate
      operationId: Certificate_Get
      description: Gets the details of the certificate specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Certificate entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Certificate
      operationId: Certificate_CreateOrUpdate
      description: Creates or updates the certificate being used for authentication with the backend.
      externalDocs:
        description: How to secure back-end services using client certificate authentication in Azure API Management
        url: https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateCreateOrUpdateParameters'
      responses:
        '200':
          description: The certificate details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The new certificate was successfully added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Certificate
      operationId: Certificate_Delete
      description: Deletes specific certificate.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The certificate was successfully deleted.
        '204':
          description: The certificate was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}/refreshSecret:
    x-api-version: '2021-08-01'
    post:
      tags:
        - Certificate
      operationId: Certificate_RefreshSecret
      description: From KeyVault, Refresh the certificate being used for authentication with the backend.
      externalDocs:
        description: How to secure back-end services using client certificate authentication in Azure API Management
        url: https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The certificate details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers:
    x-api-version: '2021-08-01'
    get:
      tags:
        - AuthorizationServer
      operationId: AuthorizationServer_ListByService
      description: Lists a collection of authorization servers defined within a service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A Collection of the Authorization Server entities for the specified API Management service instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/AuthorizationServerContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - AuthorizationServer
      operationId: AuthorizationServer_GetEntityTag
      description: Gets the entity state (Etag) version of the authorizationServer specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/AuthenticationServerIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified authorization server entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - AuthorizationServer
      operationId: AuthorizationServer_Get
      description: Gets the details of the authorization server specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/AuthenticationServerIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the details of the specified authorization server. No secrets included.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - AuthorizationServer
      operationId: AuthorizationServer_CreateOrUpdate
      description: Creates new authorization server or updates an existing authorization server.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/AuthenticationServerIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerContract'
      responses:
        '200':
          description: Authorization server is already registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Authorization server was successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - AuthorizationServer
      operationId: AuthorizationServer_Update
      description: Updates the details of the authorization server specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/AuthenticationServerIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: OAuth2 Server settings Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerUpdateContract'
      responses:
        '200':
          description: The authorization server settings were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - AuthorizationServer
      operationId: AuthorizationServer_Delete
      description: Deletes specific authorization server instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/AuthenticationServerIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The authorization server settings were successfully deleted.
        '204':
          description: The authorization server settings were successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}/listSecrets:
    x-api-version: '2021-08-01'
    post:
      tags:
        - AuthorizationServer
      operationId: AuthorizationServer_ListSecrets
      description: Gets the client secret details of the authorization server.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/AuthenticationServerIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the secrets of the specified authorization server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerSecretsContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates:
    x-api-version: '2021-08-01'
    get:
      tags:
        - EmailTemplate
      operationId: EmailTemplate_ListByService
      description: Gets all email templates
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A Collection of the Email Template for the specified API Management service instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - EmailTemplates
      operationId: EmailTemplate_GetEntityTag
      description: Gets the entity state (Etag) version of the email template specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TemplateNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified email template entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - EmailTemplates
      operationId: EmailTemplate_Get
      description: Gets the details of the email template specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TemplateNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Email template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - EmailTemplates
      operationId: EmailTemplate_CreateOrUpdate
      description: Updates an Email Template.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TemplateNameParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Email Template update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateUpdateParameters'
      responses:
        '200':
          description: Email Template was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContract'
        '201':
          description: Email Template was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - EmailTemplates
      operationId: EmailTemplate_Update
      description: Updates API Management email template
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TemplateNameParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateUpdateParameters'
      responses:
        '200':
          description: email template successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - EmailTemplates
      operationId: EmailTemplate_Delete
      description: Reset the Email Template to default template provided by the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TemplateNameParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Email Template was successfully reset to default.
        '204':
          description: Email Template was successfully reset to default.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Region
      operationId: Region_ListByService
      description: Lists all azure regions in which the service exists.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists of Regions in which the service is deployed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders:
    x-api-version: '2021-08-01'
    get:
      tags:
        - IdentityProvider
      operationId: IdentityProvider_ListByService
      description: Lists a collection of Identity Provider configured in the specified service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-authorize-developer-accounts-using-azure-active-directory
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Identity Providers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - IdentityProvider
      operationId: IdentityProvider_GetEntityTag
      description: Gets the entity state (Etag) version of the identityProvider specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IdentityProviderNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified identity provider entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - IdentityProvider
      operationId: IdentityProvider_Get
      description: Gets the configuration details of the identity Provider configured in specified service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IdentityProviderNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified IdentityProvider entity configuration details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - IdentityProvider
      operationId: IdentityProvider_CreateOrUpdate
      description: Creates or Updates the IdentityProvider configuration.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IdentityProviderNameParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderCreateContract'
      responses:
        '200':
          description: The existing Identity Provider was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: IdentityProvider configuration were successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - IdentityProvider
      operationId: IdentityProvider_Update
      description: Updates an existing IdentityProvider configuration.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IdentityProviderNameParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderUpdateParameters'
      responses:
        '200':
          description: The existing Identity Provider was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - IdentityProvider
      operationId: IdentityProvider_Delete
      description: Deletes the specified identity provider configuration.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IdentityProviderNameParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The identity provider configuration was successfully deleted.
        '204':
          description: The identity provider configuration was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}/listSecrets:
    x-api-version: '2021-08-01'
    post:
      tags:
        - IdentityProvider
      operationId: IdentityProvider_ListSecrets
      description: Gets the client secret details of the Identity Provider.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IdentityProviderNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the client secret.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSecretContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/productsByTags:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ProductsByTag
      operationId: Product_ListByTags
      description: Lists a collection of products associated with tags.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: includeNotTaggedProducts
          in: query
          description: Include not tagged Products.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of TagResource entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TagResourceContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyDescriptions:
    x-api-version: '2021-08-01'
    get:
      tags:
        - PolicyDescription
      operationId: PolicyDescription_ListByService
      description: Lists all policy descriptions.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: scope
          in: query
          description: Policy scope.
          required: false
          schema:
            enum:
              - Tenant
              - Product
              - Api
              - Operation
              - All
            x-ms-enum:
              name: PolicyScopeContract
              modelAsString: false
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns an array of policy descriptions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDescriptionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Schema
      operationId: GlobalSchema_ListByService
      description: Lists a collection of schemas registered with service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Schema entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSchemaCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/GlobalSchemaContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Schema
      operationId: GlobalSchema_GetEntityTag
      description: Gets the entity state (Etag) version of the Schema specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SchemaIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified Schema entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Schema
      operationId: GlobalSchema_Get
      description: Gets the details of the Schema specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SchemaIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Schema entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSchemaContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Schema
      operationId: GlobalSchema_CreateOrUpdate
      description: Creates new or updates existing specified Schema of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SchemaIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSchemaContract'
      responses:
        '200':
          description: The Schema details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSchemaContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The new Schema was successfully added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSchemaContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '202':
          description: Accepted the change when updating the service.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Schema
      operationId: GlobalSchema_Delete
      description: Deletes specific Schema.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/SchemaIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Schema was successfully deleted.
        '204':
          description: The Schema was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings:
    x-api-version: '2021-08-01'
    get:
      tags:
        - PortalSettings
      operationId: PortalSettings_ListByService
      description: Lists a collection of portalsettings defined within a service instance..
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Portal Settings entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalSettingsCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signin:
    x-api-version: '2021-08-01'
    head:
      tags:
        - SignInSettings
      operationId: SignInSettings_GetEntityTag
      description: Gets the entity state (Etag) version of the SignInSettings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation completed successfully.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - SignInSettings
      operationId: SignInSettings_Get
      description: Get Sign In Settings for the Portal
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Sign-In settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalSigninSettings'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - SignInSettings
      operationId: SignInSettings_Update
      description: Update Sign-In settings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update Sign-In settings.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalSigninSettings'
      responses:
        '204':
          description: Sign-In settings was updated successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SignInSettings
      operationId: SignInSettings_CreateOrUpdate
      description: Create or Update Sign-In settings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalSigninSettings'
      responses:
        '200':
          description: Sign-In settings was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalSigninSettings'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signup:
    x-api-version: '2021-08-01'
    head:
      tags:
        - SignUpSettings
      operationId: SignUpSettings_GetEntityTag
      description: Gets the entity state (Etag) version of the SignUpSettings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation completed successfully.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - SignUpSettings
      operationId: SignUpSettings_Get
      description: Get Sign Up Settings for the Portal
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Sign-Up settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalSignupSettings'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - SignUpSettings
      operationId: SignUpSettings_Update
      description: Update Sign-Up settings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update Sign-Up settings.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalSignupSettings'
      responses:
        '204':
          description: Sign-Up settings was updated successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SignUpSettings
      operationId: SignUpSettings_CreateOrUpdate
      description: Create or Update Sign-Up settings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalSignupSettings'
      responses:
        '200':
          description: Sign-Up settings was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalSignupSettings'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation:
    x-api-version: '2021-08-01'
    head:
      tags:
        - DelegationSettings
      operationId: DelegationSettings_GetEntityTag
      description: Gets the entity state (Etag) version of the DelegationSettings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation completed successfully.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - DelegationSettings
      operationId: DelegationSettings_Get
      description: Get Delegation Settings for the Portal.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delegation settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalDelegationSettings'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - DelegationSettings
      operationId: DelegationSettings_Update
      description: Update Delegation settings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update Delegation settings.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalDelegationSettings'
      responses:
        '204':
          description: Delegation settings was updated successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DelegationSettings
      operationId: DelegationSettings_CreateOrUpdate
      description: Create or Update Delegation settings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalDelegationSettings'
      responses:
        '200':
          description: Delegation settings was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalDelegationSettings'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation/listSecrets:
    x-api-version: '2021-08-01'
    post:
      tags:
        - DelegationSettings
      operationId: DelegationSettings_ListSecrets
      description: Gets the secret validation key of the DelegationSettings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the validation key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalSettingValidationKeyContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.ApiManagement/operations:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiManagementOperations
      description: Lists all of the available REST API operations of the Microsoft.ApiManagement provider.
      operationId: ApiManagementOperations_List
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Success. The response describes the list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/skus:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiManagementServiceSkus
      summary: Gets available SKUs for API Management service
      description: Gets all available SKU for a given API Management service
      operationId: ApiManagementServiceSkus_ListAvailableServiceSkus
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The response describes the list of SKUs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSkuResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore:
    x-api-version: '2021-08-01'
    post:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_Restore
      description: Restores a backup of an API Management service created using the ApiManagementService_Backup operation on the current service. This is a long running operation and could take several minutes to complete.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Restore API Management service from backup operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiManagementServiceBackupRestoreParameters'
      responses:
        '200':
          description: Successfully restored the backup onto the API Management service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceResource'
        '202':
          description: 'Accepted: Location header contains the URL where the status of the long running operation can be checked.'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup:
    x-api-version: '2021-08-01'
    post:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_Backup
      description: Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the ApiManagementService_Backup operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiManagementServiceBackupRestoreParameters'
      responses:
        '200':
          description: Successfully backed up the API Management service to the storage account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceResource'
        '202':
          description: 'Accepted: Location header contains the URL where the status of the long running operation can be checked.'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}:
    x-api-version: '2021-08-01'
    put:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_CreateOrUpdate
      description: Creates or updates an API Management service. This is long running operation and could take several minutes to complete.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate API Management service operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiManagementServiceResource'
      responses:
        '200':
          description: The service was successfully set up.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceResource'
        '202':
          description: Accepted the configuration change when updating the service.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_Update
      description: Updates an existing API Management service.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate API Management service operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiManagementServiceUpdateParameters'
      responses:
        '200':
          description: The service was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceResource'
        '202':
          description: The service update request was Accepted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_Get
      description: Gets an API Management service resource description.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully got the API Management Service Resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_Delete
      description: Deletes an existing API Management service.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Service was successfully deleted.
        '202':
          description: The service delete request was Accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceResource'
        '204':
          description: The service does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_ListByResourceGroup
      description: List all API Management services within a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The API Management service list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_List
      description: Lists all API Management services within an Azure subscription.
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The API Management service list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/getssotoken:
    x-api-version: '2021-08-01'
    post:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_GetSsoToken
      description: Gets the Single-Sign-On token for the API Management Service which is valid for 5 Minutes.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK if successful with the SSO Redirect URI.
          content:
            application/json:
              schema:
                x-ms-client-flatten: true
                $ref: '#/components/schemas/ApiManagementServiceGetSsoTokenResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/checkNameAvailability:
    x-api-version: '2021-08-01'
    post:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_CheckNameAvailability
      description: Checks availability and correctness of a name for an API Management service.
      requestBody:
        description: Parameters supplied to the CheckNameAvailability operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiManagementServiceCheckNameAvailabilityParameters'
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The result of check name availability.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceNameAvailabilityResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/getDomainOwnershipIdentifier:
    x-api-version: '2021-08-01'
    post:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_GetDomainOwnershipIdentifier
      description: Get the custom domain ownership identifier for an API Management service.
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The result of getting domain ownership identifier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceGetDomainOwnershipIdentifierResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates:
    x-api-version: '2021-08-01'
    post:
      tags:
        - ApiManagementService
      operationId: ApiManagementService_ApplyNetworkConfigurationUpdates
      description: Updates the Microsoft.ApiManagement resource running in the Virtual network to pick the updated DNS changes.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Apply Network Configuration operation. If the parameters are empty, all the regions in which the Api Management service is deployed will be updated sequentially without incurring downtime in the region.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiManagementServiceApplyNetworkConfigurationParameters'
      responses:
        '200':
          description: Network configuration updates were successfully applied on the Api Management service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementServiceResource'
        '202':
          description: 'Accepted: Location header contains the URL where the status of the long running operation can be checked.'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Policy
      operationId: Policy_ListByService
      description: Lists all the Global Policy definitions of the Api Management service.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns an array of Policy Contracts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Policy
      operationId: Policy_GetEntityTag
      description: Gets the entity state (Etag) version of the Global policy definition in the Api Management service.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Policy
      operationId: Policy_Get
      description: Get the Global policy definition of the Api Management service.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/PolicyExportFormat'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Get the Global policy definition of the Api Management service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Policy
      operationId: Policy_CreateOrUpdate
      description: Creates or updates the global policy configuration of the Api Management service.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The policy contents to apply.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyContract'
      responses:
        '200':
          description: Global policy configuration of the Api Management service was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version
        '201':
          description: Global policy configuration was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Policy
      operationId: Policy_Delete
      description: Deletes the global policy configuration of the Api Management Service.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Policy was successfully removed
        '204':
          description: Policy successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings:
    x-api-version: '2021-08-01'
    get:
      tags:
        - TenantSettings
      operationId: TenantSettings_ListByService
      description: Public settings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: Not used
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of TenantSettings entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantSettingsCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TenantSettingsContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings/{settingsType}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - TenantSettings
      operationId: TenantSettings_Get
      description: Get tenant settings.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/SettingsParameter'
      responses:
        '200':
          description: Tenant Settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantSettingsContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/skus:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Skus
      operationId: ApiManagementSkus_List
      description: Gets the list of Microsoft.ApiManagement SKUs available for your Subscription.
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiManagementSkusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/networkstatus:
    x-api-version: '2021-08-01'
    get:
      tags:
        - NetworkStatus
      operationId: NetworkStatus_ListByService
      description: Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Gets the list Network status details for all regions in which service is deployed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkStatusContractByLocation'
                description: List of Network Status values.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/locations/{locationName}/networkstatus:
    x-api-version: '2021-08-01'
    get:
      tags:
        - NetworkStatus
      operationId: NetworkStatus_ListByLocation
      description: Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Gets the Network status details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkStatusContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Product
      operationId: Product_ListByService
      description: Lists a collection of products in the specified service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| groups | expand |     |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: expandGroups
          in: query
          description: When set to true, the response contains an array of groups that have visibility to the product. The default is false.
          required: false
          schema:
            type: boolean
        - name: tags
          in: query
          description: Products which are part of a specific tag.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A Collection of the Product entities for the specified API Management service instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ProductContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Product
      operationId: Product_GetEntityTag
      description: Gets the entity state (Etag) version of the product specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified Product entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Product
      operationId: Product_Get
      description: Gets the details of the product specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Product entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Product
      operationId: Product_CreateOrUpdate
      description: Creates or Updates a product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductContract'
      responses:
        '200':
          description: Product was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Product was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Product
      operationId: Product_Update
      description: Update existing product details.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateParameters'
      responses:
        '200':
          description: Product was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Product
      operationId: Product_Delete
      description: Delete product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - name: deleteSubscriptions
          in: query
          description: Delete existing subscriptions associated with the product or not.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Product was successfully removed.
        '204':
          description: Product was successfully removed by previous request or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ProductApi
      operationId: ProductApi_ListByProduct
      description: Lists a collection of the APIs associated with a product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains a collection of Api entities in the product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ApiContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ProductApi
      operationId: ProductApi_CheckEntityExists
      description: Checks that API entity specified by identifier is associated with the Product entity.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: Entity exists
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ProductApi
      operationId: ProductApi_CreateOrUpdate
      description: Adds an API to the specified product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The specified API is already added to the product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiContract'
        '201':
          description: The API was successfully added to the product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ProductApi
      operationId: ProductApi_Delete
      description: Deletes the specified API from the specified product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/ApiIdRevParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: API was successfully removed from product
        '204':
          description: API successfully removed by previous request or does not exist in product
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ProductGroup
      operationId: ProductGroup_ListByProduct
      description: Lists the collection of developer groups associated with the specified product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt |     |</br>| displayName | filter | eq, ne |     |</br>| description | filter | eq, ne |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Group entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/GroupContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ProductGroup
      operationId: ProductGroup_CheckEntityExists
      description: Checks that Group entity specified by identifier is associated with the Product entity.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The Group is associated with the Product.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ProductGroup
      operationId: ProductGroup_CreateOrUpdate
      description: Adds the association between the specified developer group with the specified product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The specified group is already associated with the product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupContract'
        '201':
          description: The group was successfully associated with the product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ProductGroup
      operationId: ProductGroup_Delete
      description: Deletes the association between the specified group and product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The group was successfully disassociated with the product.
        '204':
          description: The group was successfully disassociated with the product.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ProductSubscription
      operationId: ProductSubscriptions_List
      description: Lists the collection of subscriptions to the specified product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of subscription entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/SubscriptionContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ProductPolicy
      operationId: ProductPolicy_ListByProduct
      description: Get the policy configuration at the Product level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Product Policy information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ProductPolicy
      operationId: ProductPolicy_GetEntityTag
      description: Get the ETag of the policy configuration at the Product level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Product Policy Etag information.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ProductPolicy
      operationId: ProductPolicy_Get
      description: Get the policy configuration at the Product level.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/PolicyExportFormat'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Product Policy information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ProductPolicy
      operationId: ProductPolicy_CreateOrUpdate
      description: Creates or updates policy configuration for the Product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The policy contents to apply.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyContract'
      responses:
        '200':
          description: Product policy configuration of the tenant was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Product policy configuration was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ProductPolicy
      operationId: ProductPolicy_Delete
      description: Deletes the policy configuration at the Product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/PolicyIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the policy configuration at the Product level.
        '204':
          description: Successfully deleted the policy configuration at the Product level.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags:
    x-api-version: '2021-08-01'
    get:
      tags:
        - ProductTag
      operationId: Tag_ListByProduct
      description: Lists all Tags associated with the Product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation returns a collection of tags associated with the Product entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TagContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - ProductTag
      operationId: Tag_GetEntityStateByProduct
      description: Gets the entity state version of the tag specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Empty response body, ETag header entity state version.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ProductTag
      operationId: Tag_GetByProduct
      description: Get tag associated with the Product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the details of the tag specified by its identifier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ProductTag
      operationId: Tag_AssignToProduct
      description: Assign tag to the Product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Tag is already assigned to the Product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
        '201':
          description: Tag was assigned to the Product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ProductTag
      operationId: Tag_DetachFromProduct
      description: Detach the tag from the Product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ProductIdParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully detached the tag from the Product.
        '204':
          description: Successfully detached the tag from the Product.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Gateway
      operationId: Gateway_ListByService
      description: Lists a collection of gateways registered with service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| region | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Gateway entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/GatewayContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Gateway
      operationId: Gateway_GetEntityTag
      description: Gets the entity state (Etag) version of the Gateway specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified Gateway entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Gateway
      operationId: Gateway_Get
      description: Gets the details of the Gateway specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Gateway entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Gateway
      operationId: Gateway_CreateOrUpdate
      description: Creates or updates a Gateway to be used in Api Management instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayContract'
      responses:
        '200':
          description: The Gateway details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The new Gateway was successfully added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Gateway
      operationId: Gateway_Update
      description: Updates the details of the gateway specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayContract'
      responses:
        '200':
          description: The Gateway details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Gateway
      operationId: Gateway_Delete
      description: Deletes specific Gateway.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Gateway was successfully deleted.
        '204':
          description: The Gateway was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listKeys:
    x-api-version: '2021-08-01'
    post:
      tags:
        - GatewayListKeys
      operationId: Gateway_ListKeys
      description: Retrieves gateway keys.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Gateway keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayKeysContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/regenerateKey:
    x-api-version: '2021-08-01'
    post:
      tags:
        - GatewayRegenerateKey
      operationId: Gateway_RegenerateKey
      description: Regenerates specified gateway key invalidating any tokens created with it.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayKeyRegenerationRequestContract'
      responses:
        '204':
          description: Key successfully regenerated
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/generateToken:
    x-api-version: '2021-08-01'
    post:
      tags:
        - GatewayGenerateToken
      operationId: Gateway_GenerateToken
      description: Gets the Shared Access Authorization Token for the gateway.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayTokenRequestContract'
      responses:
        '200':
          description: The response body contains the authorization token for the gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTokenContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations:
    x-api-version: '2021-08-01'
    get:
      tags:
        - GatewayHostnameConfiguration
      operationId: GatewayHostnameConfiguration_ListByService
      description: Lists the collection of hostname configurations for the specified gateway.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| hostname | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Collection of hostname configuration entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayHostnameConfigurationCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/GatewayHostnameConfigurationContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - GatewayHostnameConfiguration
      operationId: GatewayHostnameConfiguration_GetEntityTag
      description: Checks that hostname configuration entity specified by identifier exists for specified Gateway entity.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/GatewayHostnameConfigurationIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified Gateway entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - GatewayHostnameConfiguration
      operationId: GatewayHostnameConfiguration_Get
      description: Get details of a hostname configuration
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/GatewayHostnameConfigurationIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Gateway entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayHostnameConfigurationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - GatewayHostnameConfiguration
      operationId: GatewayHostnameConfiguration_CreateOrUpdate
      description: Creates of updates hostname configuration for a Gateway.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/GatewayHostnameConfigurationIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayHostnameConfigurationContract'
      responses:
        '200':
          description: The Gateway hostname configuration details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayHostnameConfigurationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The new Gateway hostname configuration was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayHostnameConfigurationContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GatewayHostnameConfiguration
      operationId: GatewayHostnameConfiguration_Delete
      description: Deletes the specified hostname configuration from the specified Gateway.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/GatewayHostnameConfigurationIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Hostname configuration was successfully removed from Gateway.
        '204':
          description: Hostname configuration successfully removed by previous request or does not exist in Gateway.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis:
    x-api-version: '2021-08-01'
    get:
      tags:
        - GatewayApi
      operationId: GatewayApi_ListByService
      description: Lists a collection of the APIs associated with a gateway.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains a collection of Api entities in the gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ApiContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - GatewayApi
      operationId: GatewayApi_GetEntityTag
      description: Checks that API entity specified by identifier is associated with the Gateway entity.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified Gateway entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - GatewayApi
      operationId: GatewayApi_CreateOrUpdate
      description: Adds an API to the specified Gateway.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociationContract'
      responses:
        '200':
          description: The specified API is already added to the Gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiContract'
        '201':
          description: The API was successfully added to the Gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GatewayApi
      operationId: GatewayApi_Delete
      description: Deletes the specified API from the specified Gateway.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/ApiIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: API was successfully removed from Gateway
        '204':
          description: API successfully removed by previous request or does not exist in Gateway
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities:
    x-api-version: '2021-08-01'
    get:
      tags:
        - GatewayCertificateAuthority
      operationId: GatewayCertificateAuthority_ListByService
      description: Lists the collection of Certificate Authorities for the specified Gateway entity.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq, ne |  |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Collection of Gateway Certificate Authority entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayCertificateAuthorityCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/GatewayCertificateAuthorityContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - GatewayCertificateAuthority
      operationId: GatewayCertificateAuthority_GetEntityTag
      description: Checks if Certificate entity is assigned to Gateway entity as Certificate Authority.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified Gateway Certificate Authority entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - GatewayCertificateAuthority
      operationId: GatewayCertificateAuthority_Get
      description: Get assigned Gateway Certificate Authority details.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Gateway Certificate Authority entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayCertificateAuthorityContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - GatewayCertificateAuthority
      operationId: GatewayCertificateAuthority_CreateOrUpdate
      description: Assign Certificate entity to Gateway entity as Certificate Authority.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayCertificateAuthorityContract'
      responses:
        '200':
          description: Gateway Certificate Authority details were successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayCertificateAuthorityContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Certificate entity was successfully assigned to Gateway entity as Certificate Authority.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayCertificateAuthorityContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GatewayCertificateAuthority
      operationId: GatewayCertificateAuthority_Delete
      description: Remove relationship between Certificate Authority and Gateway entity.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Certificate entity was successfully removed from Gateway entity as Certificate Authority.
        '204':
          description: Certificate was successfully removed from Gateway entity as Certificate Authority by one of the previous requests or never assigned.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions:
    x-api-version: '2021-08-01'
    get:
      tags:
        - PortalRevision
      operationId: PortalRevision_ListByService
      description: Lists developer portal's revisions.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: "| Field       | Supported operators    | Supported functions               |\n|-------------|------------------------|-----------------------------------|\n\r\n|name | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|isCurrent | eq, ne |    |\n"
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists portal's revisions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalRevisionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions/{portalRevisionId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - PortalRevision
      operationId: PortalRevision_GetEntityTag
      description: Gets the developer portal revision specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/PortalRevisionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The specified portal revision entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - PortalRevision
      operationId: PortalRevision_Get
      description: Gets the developer portal's revision specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/PortalRevisionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the specified portal's revision.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalRevisionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PortalRevision
      operationId: PortalRevision_CreateOrUpdate
      description: Creates a new developer portal's revision by running the portal's publishing. The `isCurrent` property indicates if the revision is publicly accessible.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/PortalRevisionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalRevisionContract'
      responses:
        '201':
          description: The developer portal revision was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalRevisionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '202':
          description: Request to create a developer portal revision was accepted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - PortalRevision
      operationId: PortalRevision_Update
      description: Updates the description of specified portal revision or makes it current.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/PortalRevisionIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalRevisionContract'
      responses:
        '200':
          description: Developer portal revision was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalRevisionContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '202':
          description: Request to update developer portal revision was accepted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Cache
      operationId: Cache_ListByService
      description: Lists a collection of all external Caches in the specified service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns a collection of Cache entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Cache
      operationId: Cache_GetEntityTag
      description: Gets the entity state (Etag) version of the Cache specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CacheIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified Cache entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Cache
      operationId: Cache_Get
      description: Gets the details of the Cache specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CacheIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Cache entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Cache
      operationId: Cache_CreateOrUpdate
      description: Creates or updates an External Cache to be used in Api Management instance.
      externalDocs:
        description: Use an external cache in Azure API Management
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CacheIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create or Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheContract'
      responses:
        '200':
          description: The Cache details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The new Cache was successfully added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Cache
      operationId: Cache_Update
      description: Updates the details of the cache specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CacheIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheUpdateParameters'
      responses:
        '200':
          description: The Cache details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Cache
      operationId: Cache_Delete
      description: Deletes specific Cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/CacheIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Cache was successfully deleted.
        '204':
          description: The Cache was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections:
    x-api-version: '2021-08-01'
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnection_ListByService
      description: Lists all private endpoint connections of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections/{privateEndpointConnectionName}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnection_GetByName
      description: Gets the details of the Private Endpoint Connection specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: Name of the private endpoint connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnection_CreateOrUpdate
      description: Creates a new Private Endpoint Connection or updates an existing one.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: Name of the private endpoint connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: privateEndpointConnectionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnectionRequest'
      responses:
        '200':
          description: Private Endpoint Connection Request was completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Request to approve or reject private endpoint connection. Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnection_Delete
      description: Deletes the specified Private Endpoint Connection.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: Name of the private endpoint connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Private Endpoint Connection was successfully deleted.
        '202':
          description: Request to delete API was accepted. Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources:
    x-api-version: '2021-08-01'
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets the private link resources
      operationId: PrivateEndpointConnection_ListPrivateLinkResources
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources/{privateLinkSubResourceName}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets the private link resources
      operationId: PrivateEndpointConnection_GetPrivateLinkResource
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: privateLinkSubResourceName
          in: path
          description: Name of the private link resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/deletedservices:
    x-api-version: '2021-08-01'
    get:
      tags:
        - DeletedService
      operationId: DeletedServices_ListBySubscription
      description: Lists all soft-deleted services available for undelete for the given subscription.
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of all soft-deleted services available for undelete for the given subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedServicesCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/deletedservices/{serviceName}:
    x-api-version: '2021-08-01'
    get:
      tags:
        - DeletedService
      operationId: DeletedServices_GetByName
      description: Get soft-deleted Api Management Service by name.
      parameters:
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The location of the deleted API Management service.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Soft-deleted Api Management Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedServiceContract'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - DeletedService
      operationId: DeletedServices_Purge
      description: Purges Api Management Service (deletes it with no option to undelete).
      parameters:
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The location of the deleted API Management service.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Api Service was successfully purged.
        '202':
          description: Api Service purge started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedServiceContract'
        '204':
          description: The service does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Backend
      operationId: Backend_ListByService
      description: Lists a collection of backends in the specified service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| url | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Backend entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/BackendContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Backend
      operationId: Backend_GetEntityTag
      description: Gets the entity state (Etag) version of the backend specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/BackendIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Specified backend entity exists and current entity state version is present in the ETag header.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Backend
      operationId: Backend_Get
      description: Gets the details of the backend specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/BackendIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Backend entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Backend
      operationId: Backend_CreateOrUpdate
      description: Creates or Updates a backend.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/BackendIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackendContract'
      responses:
        '200':
          description: The existing backend was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Backend was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Backend
      operationId: Backend_Update
      description: Updates an existing backend.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/BackendIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackendUpdateParameters'
      responses:
        '200':
          description: The existing backend was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Backend
      operationId: Backend_Delete
      description: Deletes the specified backend.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/BackendIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The backend was successfully deleted.
        '204':
          description: The backend was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}/reconnect:
    x-api-version: '2021-08-01'
    post:
      tags:
        - BackendReconnect
      operationId: Backend_Reconnect
      description: Notifies the APIM proxy to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/BackendIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Reconnect request parameters.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackendReconnectContract'
      responses:
        '202':
          description: Reconnect request accepted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Tag
      operationId: Tag_ListByService
      description: Lists a collection of tags defined within a service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: scope
          in: query
          description: Scope like 'apis', 'products' or 'apis/{apiId}
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Tag entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/TagContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}:
    x-api-version: '2021-08-01'
    head:
      tags:
        - Tag
      operationId: Tag_GetEntityState
      description: Gets the entity state version of the tag specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Empty response body, ETag header entity state version.
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Tag
      operationId: Tag_Get
      description: Gets the details of the tag specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The response body contains the specified Tag entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Tag
      operationId: Tag_CreateOrUpdate
      description: Creates a tag.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/IfMatchOptionalParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Create parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreateUpdateParameters'
      responses:
        '200':
          description: Tag already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Tag was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Tag
      operationId: Tag_Update
      description: Updates the details of the tag specified by its identifier.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Update parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreateUpdateParameters'
      responses:
        '200':
          description: The tag details were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagContract'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Tag
      operationId: Tag_Delete
      description: Deletes specific tag of the API Management service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/TagIdParameter'
        - $ref: '#/components/parameters/IfMatchRequiredParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Tag successfully removed
        '204':
          description: Tag successfully removed by previous request or does not exist
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byApi:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Reports
      operationId: Reports_ListByApi
      description: Lists report records by API.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: $orderby
          in: query
          description: OData order by query option.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Report record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ReportRecordContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byUser:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Reports
      operationId: Reports_ListByUser
      description: Lists report records by User.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| userId | select, filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: $orderby
          in: query
          description: OData order by query option.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Report record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ReportRecordContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byOperation:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Reports
      operationId: Reports_ListByOperation
      description: Lists report records by API Operations.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: $orderby
          in: query
          description: OData order by query option.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Report record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ReportRecordContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byProduct:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Reports
      operationId: Reports_ListByProduct
      description: Lists report records by Product.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | select, filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: $orderby
          in: query
          description: OData order by query option.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Report record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ReportRecordContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byGeo:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Reports
      operationId: Reports_ListByGeo
      description: Lists report records by geography.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| country | select |     |     | </br>| region | select |     |     | </br>| zip | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Report record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ReportRecordContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/bySubscription:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Reports
      operationId: Reports_ListBySubscription
      description: Lists report records by subscription.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | select, filter | eq |     | </br>| productId | select, filter | eq |     | </br>| subscriptionId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: $orderby
          in: query
          description: OData order by query option.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Report record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ReportRecordContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byTime:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Reports
      operationId: Reports_ListByTime
      description: Lists report records by Time.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter, select | ge, le |     | </br>| interval | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - name: $orderby
          in: query
          description: OData order by query option.
          required: false
          schema:
            type: string
        - name: interval
          in: query
          description: 'By time interval. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds)).'
          required: true
          schema:
            format: duration
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Report record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: ./definitions.json#/components/schemas/ReportRecordContract
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byRequest:
    x-api-version: '2021-08-01'
    get:
      tags:
        - Reports
      operationId: Reports_ListByRequest
      description: Lists report records by Request.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - name: $filter
          in: query
          description: '|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| productId | filter | eq |     | </br>| userId | filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipQueryParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists a collection of Report record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestReportCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-ms-odata: ./definitions.json#/components/schemas/RequestReportRecordContract
