openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AutomationManagement
  version: '2023-11-01'
  x-ms-code-generation-settings:
    useDateTimeOffset: true
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ConnectionCreateOrUpdateProperties:
      properties:
        description:
          type: string
          description: Gets or sets the description of the connection.
        connectionType:
          $ref: '#/components/schemas/ConnectionTypeAssociationProperty'
          description: Gets or sets the connectionType of the connection.
        fieldDefinitionValues:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the field definition properties of the connection.
      required:
        - connectionType
      description: The properties of the create connection properties
    ConnectionCreateOrUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the connection.
        properties:
          $ref: '#/components/schemas/ConnectionCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the connection.
      required:
        - name
        - properties
      description: The parameters supplied to the create or update connection operation.
    ConnectionProperties:
      properties:
        connectionType:
          $ref: '#/components/schemas/ConnectionTypeAssociationProperty'
          description: Gets or sets the connectionType of the connection.
        fieldDefinitionValues:
          type: object
          additionalProperties:
            type: string
          readOnly: true
          description: Gets the field definition values of the connection.
        creationTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
      description: Definition of the connection properties.
    Connection:
      properties:
        properties:
          $ref: '#/components/schemas/ConnectionProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the connection.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Definition of the connection.
    ConnectionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
          description: Gets or sets a list of connection.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list connection operation.
    ConnectionUpdateProperties:
      properties:
        description:
          type: string
          description: Gets or sets the description of the connection.
        fieldDefinitionValues:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the field definition values of the connection.
      description: The properties of the update connection operation.
    ConnectionUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the connection.
        properties:
          $ref: '#/components/schemas/ConnectionUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the connection.
      description: The parameters supplied to the update connection operation.
    ConnectionTypeAssociationProperty:
      properties:
        name:
          type: string
          description: Gets or sets the name of the connection type.
      description: The connection type property associated with the entity.
    JobScheduleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JobSchedule'
          description: Gets or sets a list of job schedules.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list job schedule operation.
    JobSchedule:
      properties:
        id:
          type: string
          readOnly: true
          description: Gets the id of the resource.
        name:
          type: string
          readOnly: true
          description: Gets the name of the variable.
        type:
          type: string
          readOnly: true
          description: Resource type
        properties:
          $ref: '#/components/schemas/JobScheduleProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the job schedule.
      description: Definition of the job schedule.
    ScheduleAssociationProperty:
      properties:
        name:
          type: string
          description: Gets or sets the name of the Schedule.
      description: The schedule property associated with the entity.
    RunbookAssociationProperty:
      properties:
        name:
          type: string
          description: Gets or sets the name of the runbook.
      description: The runbook property associated with the entity.
    JobScheduleProperties:
      properties:
        jobScheduleId:
          type: string
          description: Gets or sets the id of job schedule.
        schedule:
          $ref: '#/components/schemas/ScheduleAssociationProperty'
          description: Gets or sets the schedule.
        runbook:
          $ref: '#/components/schemas/RunbookAssociationProperty'
          description: Gets or sets the runbook.
        runOn:
          type: string
          description: Gets or sets the hybrid worker group that the scheduled job should run on.
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the job schedule.
      description: Definition of job schedule parameters.
    JobScheduleCreateProperties:
      properties:
        schedule:
          $ref: '#/components/schemas/ScheduleAssociationProperty'
          description: Gets or sets the schedule.
        runbook:
          $ref: '#/components/schemas/RunbookAssociationProperty'
          description: Gets or sets the runbook.
        runOn:
          type: string
          description: Gets or sets the hybrid worker group that the scheduled job should run on.
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets a list of job properties.
      required:
        - schedule
        - runbook
      description: The parameters supplied to the create job schedule operation.
    JobScheduleCreateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/JobScheduleCreateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the list of job schedule properties.
      required:
        - properties
      description: The parameters supplied to the create job schedule operation.
    ActivityParameter:
      type: object
      properties:
        name:
          type: string
          description: Gets or sets the name of the activity parameter.
        type:
          type: string
          description: Gets or sets the type of the activity parameter.
        isMandatory:
          type: boolean
          description: Gets or sets a Boolean value that indicates true if the parameter is required. If the value is false, the parameter is optional.
        isDynamic:
          type: boolean
          description: Gets or sets a Boolean value that indicates true if the parameter is dynamic.
        position:
          type: integer
          format: int64
          description: Gets or sets the position of the activity parameter.
        valueFromPipeline:
          type: boolean
          description: Gets or sets a Boolean value that indicates true if the parameter can take values from the incoming pipeline objects. This setting is used if the cmdlet must access the complete input object. false indicates that the parameter cannot take values from the complete input object.
        valueFromPipelineByPropertyName:
          type: boolean
          description: 'Gets or sets a Boolean value that indicates true if the parameter can be filled from a property of the incoming pipeline object that has the same name as this parameter. false indicates that the parameter cannot be filled from the incoming pipeline object property with the same name. '
        valueFromRemainingArguments:
          type: boolean
          description: Gets or sets a Boolean value that indicates true if the cmdlet parameter accepts all the remaining command-line arguments that are associated with this parameter in the form of an array. false if the cmdlet parameter does not accept all the remaining argument values.
        description:
          type: string
          description: Gets or sets the description of the activity parameter.
        validationSet:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/ActivityParameterValidationSet'
          description: Gets or sets the validation set of activity parameter.
      description: Definition of the activity parameter.
    ActivityParameterSet:
      type: object
      properties:
        name:
          type: string
          description: Gets or sets the name of the activity parameter set.
        parameters:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/ActivityParameter'
          description: Gets or sets the parameters of the activity parameter set.
      description: Definition of the activity parameter set.
    ActivityParameterValidationSet:
      type: object
      properties:
        memberValue:
          type: string
          description: Gets or sets the name of the activity parameter validation set member.
      description: Definition of the activity parameter validation set.
    ActivityOutputType:
      type: object
      properties:
        name:
          type: string
          description: Gets or sets the name of the activity output type.
        type:
          type: string
          description: Gets or sets the type of the activity output type.
      description: Definition of the activity output type.
    ActivityProperties:
      type: object
      properties:
        definition:
          type: string
          description: Gets or sets the user name of the activity.
        parameterSets:
          type: array
          x-ms-identifiers:
            - name
          items:
            $ref: '#/components/schemas/ActivityParameterSet'
          description: Gets or sets the parameter sets of the activity.
        outputTypes:
          type: array
          x-ms-identifiers:
            - name
          items:
            $ref: '#/components/schemas/ActivityOutputType'
          description: Gets or sets the output types of the activity.
        creationTime:
          type: string
          format: date-time
          description: Gets or sets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
      description: Properties of the activity.
    Activity:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the id of the resource.
        name:
          type: string
          readOnly: true
          description: Gets the name of the activity.
        properties:
          $ref: '#/components/schemas/ActivityProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the activity.
      description: Definition of the activity.
    ActivityListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
          description: Gets or sets a list of activities.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list activity operation.
    ModuleErrorInfo:
      type: object
      properties:
        code:
          type: string
          description: Gets the error code.
        message:
          type: string
          description: Gets the error message.
      description: Definition of the module error info type.
    ModuleListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Module'
          description: Gets a list of modules.
        nextLink:
          type: string
          description: Gets the next link.
      description: The response model for the list module operation.
    ContentHash:
      type: object
      properties:
        algorithm:
          type: string
          description: Gets or sets the content hash algorithm used to hash the content.
        value:
          type: string
          description: Gets or sets expected hash value of the content.
      required:
        - algorithm
        - value
      description: Definition of the runbook property type.
    ContentLink:
      type: object
      properties:
        uri:
          type: string
          description: Sets the uri of the content.
        contentHash:
          $ref: '#/components/schemas/ContentHash'
          description: Sets the hash.
        version:
          type: string
          description: Sets the version of the content.
      x-ms-mutability:
        - create
        - update
      description: Definition of the content link.
    PythonPackageCreateProperties:
      type: object
      properties:
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          description: Gets or sets the module content link.
      required:
        - contentLink
      description: The parameters supplied to the create or update module properties.
    PythonPackageCreateParameters:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PythonPackageCreateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the module create properties.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
      required:
        - properties
      description: The parameters supplied to the create or update module operation.
    ModuleProperties:
      type: object
      properties:
        isGlobal:
          type: boolean
          description: Gets the isGlobal flag of the module.
        version:
          type: string
          description: Gets the version of the module.
        sizeInBytes:
          type: integer
          format: int64
          description: Gets the size in bytes of the module.
        activityCount:
          type: integer
          format: int32
          description: Gets the activity count of the module.
        provisioningState:
          type: string
          description: Gets the provisioning state of the module.
          enum:
            - Created
            - Creating
            - StartingImportModuleRunbook
            - RunningImportModuleRunbook
            - ContentRetrieved
            - ContentDownloaded
            - ContentValidated
            - ConnectionTypeImported
            - ContentStored
            - ModuleDataStored
            - ActivitiesStored
            - ModuleImportRunbookComplete
            - Succeeded
            - Failed
            - Canceled
            - Updating
          x-ms-enum:
            name: ModuleProvisioningState
            modelAsString: true
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          description: Gets or sets the contentLink of the module.
        error:
          $ref: '#/components/schemas/ModuleErrorInfo'
          description: Gets the error info of the module.
        creationTime:
          type: string
          format: date-time
          description: Gets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
        isComposite:
          type: boolean
          description: Gets type of module, if its composite or not.
      description: Definition of the module property type.
    PythonPackageUpdateParameters:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
      description: The parameters supplied to the update module operation.
    Module:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/ModuleProperties'
          x-ms-client-flatten: true
          description: Gets the module properties.
        etag:
          type: string
          description: Gets the etag of the resource.
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: Definition of the module type.
    TypeField:
      type: object
      properties:
        name:
          type: string
          description: Gets or sets the name of the field.
        type:
          type: string
          description: Gets or sets the type of the field.
      description: Information about a field of a type.
    TypeFieldListResult:
      type: object
      properties:
        value:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/TypeField'
          description: Gets or sets a list of fields.
      description: The response model for the list fields operation.
    PrivateLinkResourceListResult:
      description: A list of private link resources
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
    PrivateLinkResource:
      description: A private link resource
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
    PrivateLinkResourceProperties:
      description: Properties of a private link resource.
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
    WebhookProperties:
      properties:
        isEnabled:
          type: boolean
          default: false
          description: Gets or sets the value of the enabled flag of the webhook.
        uri:
          type: string
          description: Gets or sets the webhook uri.
        expiryTime:
          type: string
          format: date-time
          description: Gets or sets the expiry time.
          nullable: false
        lastInvokedTime:
          type: string
          format: date-time
          description: Gets or sets the last invoked time.
          nullable: true
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the job that is created when the webhook calls the runbook it is associated with.
        runbook:
          $ref: '#/components/schemas/RunbookAssociationProperty'
          description: Gets or sets the runbook the webhook is associated with.
        runOn:
          type: string
          description: Gets or sets the name of the hybrid worker group the webhook job will run on.
        creationTime:
          type: string
          format: date-time
          description: Gets or sets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time.
          nullable: false
        lastModifiedBy:
          type: string
          description: Details of the user who last modified the Webhook
        description:
          type: string
          description: Gets or sets the description.
      description: Definition of the webhook properties
    Webhook:
      properties:
        properties:
          $ref: '#/components/schemas/WebhookProperties'
          x-ms-client-flatten: true
          description: Gets or sets the webhook properties.
      description: Definition of the webhook type.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
    WebhookListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
          description: Gets or sets a list of webhooks.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list webhook operation.
    WebhookUpdateProperties:
      properties:
        isEnabled:
          type: boolean
          description: Gets or sets the value of the enabled flag of webhook.
        runOn:
          type: string
          description: Gets or sets the name of the hybrid worker group the webhook job will run on.
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the job.
        description:
          type: string
          description: Gets or sets the description of the webhook.
      description: The properties of the update webhook.
    WebhookUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the webhook.
        properties:
          $ref: '#/components/schemas/WebhookUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the value of the webhook.
      description: The parameters supplied to the update webhook operation.
    WebhookCreateOrUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the webhook.
        properties:
          $ref: '#/components/schemas/WebhookCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the webhook.
      required:
        - name
        - properties
      description: The parameters supplied to the create or update webhook operation.
    WebhookCreateOrUpdateProperties:
      properties:
        isEnabled:
          type: boolean
          description: Gets or sets the value of the enabled flag of webhook.
        uri:
          type: string
          description: Gets or sets the uri.
        expiryTime:
          type: string
          format: date-time
          description: Gets or sets the expiry time.
          nullable: false
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the job.
        runbook:
          $ref: '#/components/schemas/RunbookAssociationProperty'
          description: Gets or sets the runbook.
        runOn:
          type: string
          description: Gets or sets the name of the hybrid worker group the webhook job will run on.
      description: The properties of the create webhook operation.
    SourceControlListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SourceControl'
          description: The list of source controls.
        nextLink:
          type: string
          description: The next link.
      description: The response model for the list source controls operation.
    SourceControlUpdateProperties:
      properties:
        branch:
          type: string
          description: The repo branch of the source control.
        folderPath:
          type: string
          description: The folder path of the source control. Path must be relative.
        autoSync:
          type: boolean
          description: The auto sync of the source control. Default is false.
        publishRunbook:
          type: boolean
          description: The auto publish of the source control. Default is true.
        securityToken:
          description: The authorization token for the repo of the source control.
          $ref: '#/components/schemas/SourceControlSecurityTokenProperties'
        description:
          type: string
          description: The user description of the source control.
      description: The properties of the update source control
    SourceControlUpdateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/SourceControlUpdateProperties'
          x-ms-client-flatten: true
          description: The value of the source control.
      description: The parameters supplied to the update source control operation.
    SourceControl:
      properties:
        properties:
          $ref: '#/components/schemas/SourceControlProperties'
          x-ms-client-flatten: true
          description: The properties of the source control.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Definition of the source control.
    SourceControlProperties:
      properties:
        repoUrl:
          type: string
          description: The repo url of the source control.
        branch:
          type: string
          description: The repo branch of the source control. Include branch as empty string for VsoTfvc.
        folderPath:
          type: string
          description: The folder path of the source control.
        autoSync:
          type: boolean
          description: The auto sync of the source control. Default is false.
        publishRunbook:
          type: boolean
          description: The auto publish of the source control. Default is true.
        sourceType:
          type: string
          description: The source type. Must be one of VsoGit, VsoTfvc, GitHub.
          enum:
            - VsoGit
            - VsoTfvc
            - GitHub
          x-ms-enum:
            name: sourceType
            modelAsString: true
        description:
          type: string
          description: The description.
        creationTime:
          type: string
          format: date-time
          nullable: false
          description: The creation time.
        lastModifiedTime:
          type: string
          format: date-time
          nullable: false
          description: The last modified time.
      description: Definition of the source control properties
    SourceControlCreateOrUpdateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/SourceControlCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: The properties of the source control.
      required:
        - properties
      description: The parameters supplied to the create or update source control operation.
    SourceControlCreateOrUpdateProperties:
      properties:
        repoUrl:
          type: string
          maxLength: 2000
          description: The repo url of the source control.
        branch:
          type: string
          maxLength: 255
          description: The repo branch of the source control. Include branch as empty string for VsoTfvc.
        folderPath:
          type: string
          maxLength: 255
          description: The folder path of the source control. Path must be relative.
        autoSync:
          type: boolean
          description: The auto async of the source control. Default is false.
        publishRunbook:
          type: boolean
          description: The auto publish of the source control. Default is true.
        sourceType:
          type: string
          description: The source type. Must be one of VsoGit, VsoTfvc, GitHub, case sensitive.
          enum:
            - VsoGit
            - VsoTfvc
            - GitHub
          x-ms-enum:
            name: sourceType
            modelAsString: true
        securityToken:
          description: The authorization token for the repo of the source control.
          $ref: '#/components/schemas/SourceControlSecurityTokenProperties'
        description:
          type: string
          maxLength: 512
          description: The user description of the source control.
      description: The properties of the create source control operation.
    SourceControlSecurityTokenProperties:
      properties:
        accessToken:
          type: string
          maxLength: 1024
          description: The access token.
        refreshToken:
          type: string
          maxLength: 1024
          description: The refresh token.
        tokenType:
          type: string
          description: The token type. Must be either PersonalAccessToken or Oauth.
          enum:
            - PersonalAccessToken
            - Oauth
          x-ms-enum:
            name: tokenType
            modelAsString: true
    CertificateCreateOrUpdateProperties:
      properties:
        base64Value:
          type: string
          description: Gets or sets the base64 encoded value of the certificate.
        description:
          type: string
          description: Gets or sets the description of the certificate.
        thumbprint:
          type: string
          description: Gets or sets the thumbprint of the certificate.
        isExportable:
          type: boolean
          description: Gets or sets the is exportable flag of the certificate.
          nullable: false
      required:
        - base64Value
      description: The properties of the create certificate operation.
    CertificateCreateOrUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the certificate.
        properties:
          $ref: '#/components/schemas/CertificateCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the certificate.
      required:
        - name
        - properties
      description: The parameters supplied to the create or update or replace certificate operation.
    CertificateProperties:
      properties:
        thumbprint:
          type: string
          readOnly: true
          description: Gets the thumbprint of the certificate.
        expiryTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the expiry time of the certificate.
          nullable: false
        isExportable:
          type: boolean
          readOnly: true
          description: Gets the is exportable flag of the certificate.
          nullable: false
        creationTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
      description: Properties of the certificate.
    Certificate:
      properties:
        properties:
          $ref: '#/components/schemas/CertificateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the certificate.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Definition of the certificate.
    CertificateListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
          description: Gets or sets a list of certificates.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list certificate operation.
    CertificateUpdateProperties:
      properties:
        description:
          type: string
          description: Gets or sets the description of the certificate.
      description: The properties of the update certificate operation
    CertificateUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the certificate.
        properties:
          $ref: '#/components/schemas/CertificateUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the certificate.
      description: The parameters supplied to the update certificate operation.
    JobStream:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the id of the resource.
        properties:
          $ref: '#/components/schemas/JobStreamProperties'
          x-ms-client-flatten: true
          description: Gets or sets the id of the job stream.
      description: Definition of the job stream.
    JobStreamProperties:
      type: object
      properties:
        jobStreamId:
          type: string
          description: Gets or sets the id of the job stream.
        time:
          type: string
          format: date-time
          description: Gets or sets the creation time of the job.
          nullable: false
        streamType:
          type: string
          description: Gets or sets the stream type.
          enum:
            - Progress
            - Output
            - Warning
            - Error
            - Debug
            - Verbose
            - Any
          x-ms-enum:
            name: JobStreamType
            modelAsString: true
        streamText:
          type: string
          description: Gets or sets the stream text.
        summary:
          type: string
          description: Gets or sets the summary.
        value:
          type: object
          additionalProperties:
            type: object
          description: Gets or sets the values of the job stream.
      x-ms-client-flatten: true
      description: Definition of the job stream.
    JobStreamListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JobStream'
          description: A list of job streams.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list job stream operation.
    Job:
      description: Definition of the job.
      x-ms-mutability:
        - read
        - create
      properties:
        properties:
          $ref: '#/components/schemas/JobProperties'
          x-ms-client-flatten: true
          description: The properties of the job.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
    JobListResultV2:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JobCollectionItem'
            readOnly: true
          description: List of jobs.
        nextLink:
          type: string
          readOnly: true
          description: The  link to the next page.
      description: The response model for the list job operation.
    JobCollectionItem:
      description: Job collection item properties.
      type: object
      properties:
        properties:
          x-ms-client-flatten: true
          description: Job properties.
          $ref: '#/components/schemas/JobCollectionItemProperties'
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      required:
        - properties
    JobProperties:
      properties:
        runbook:
          $ref: '#/components/schemas/RunbookAssociationProperty'
          description: Gets or sets the runbook.
        startedBy:
          type: string
          description: Gets or sets the job started by.
        runOn:
          type: string
          description: Gets or sets the runOn which specifies the group name where the job is to be executed.
        jobId:
          type: string
          format: uuid
          description: Gets or sets the id of the job.
          nullable: false
        creationTime:
          type: string
          format: date-time
          nullable: false
          description: Gets or sets the creation time of the job.
        status:
          type: string
          description: Gets or sets the status of the job.
          enum:
            - New
            - Activating
            - Running
            - Completed
            - Failed
            - Stopped
            - Blocked
            - Suspended
            - Disconnected
            - Suspending
            - Stopping
            - Resuming
            - Removing
          x-ms-enum:
            name: JobStatus
            modelAsString: true
        statusDetails:
          type: string
          description: Gets or sets the status details of the job.
        startTime:
          type: string
          format: date-time
          nullable: true
          description: Gets or sets the start time of the job.
        endTime:
          type: string
          format: date-time
          nullable: true
          description: Gets or sets the end time of the job.
        exception:
          type: string
          description: Gets or sets the exception of the job.
        lastModifiedTime:
          type: string
          format: date-time
          nullable: true
          description: Gets or sets the last modified time of the job.
        lastStatusModifiedTime:
          type: string
          format: date-time
          nullable: true
          description: Gets or sets the last status modified time of the job.
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the job.
        provisioningState:
          $ref: '#/components/schemas/JobProvisioningStateProperty'
          description: The current provisioning state of the job.
      description: Definition of job properties.
    JobCreateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/JobCreateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the list of job properties.
      required:
        - properties
      description: The parameters supplied to the create job operation.
    JobCollectionItemProperties:
      description: Job collection item properties.
      properties:
        runbook:
          $ref: '#/components/schemas/RunbookAssociationProperty'
          readOnly: true
          description: The runbook association.
        jobId:
          type: string
          format: uuid
          readOnly: true
          description: The id of the job.
          nullable: false
        creationTime:
          type: string
          format: date-time
          nullable: false
          readOnly: true
          description: The creation time of the job.
        status:
          type: string
          readOnly: true
          description: The status of the job.
          enum:
            - New
            - Activating
            - Running
            - Completed
            - Failed
            - Stopped
            - Blocked
            - Suspended
            - Disconnected
            - Suspending
            - Stopping
            - Resuming
            - Removing
          x-ms-enum:
            name: JobStatus
            modelAsString: true
        startTime:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: The start time of the job.
        endTime:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: The end time of the job.
        lastModifiedTime:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: The last modified time of the job.
        provisioningState:
          type: string
          description: The provisioning state of a resource.
          readOnly: true
        runOn:
          type: string
          description: Specifies the runOn group name where the job was executed.
    JobCreateProperties:
      properties:
        runbook:
          $ref: '#/components/schemas/RunbookAssociationProperty'
          description: Gets or sets the runbook.
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the job.
        runOn:
          type: string
          description: Gets or sets the runOn which specifies the group name where the job is to be executed.
    JobProvisioningStateProperty:
      readOnly: true
      type: string
      description: The provisioning state of the resource.
      enum:
        - Failed
        - Succeeded
        - Suspended
        - Processing
      x-ms-enum:
        name: JobProvisioningState
        modelAsString: true
    Watcher:
      properties:
        properties:
          $ref: '#/components/schemas/WatcherProperties'
          x-ms-client-flatten: true
          description: Gets or sets the watcher properties.
        etag:
          type: string
          description: Gets or sets the etag of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      description: Definition of the watcher type.
      allOf:
        - $ref: '#/components/schemas/Resource'
    WatcherProperties:
      properties:
        executionFrequencyInSeconds:
          type: integer
          format: int64
          description: Gets or sets the frequency at which the watcher is invoked.
        scriptName:
          type: string
          description: Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
        scriptParameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the script.
        scriptRunOn:
          type: string
          description: Gets or sets the name of the hybrid worker group the watcher will run on.
        status:
          type: string
          readOnly: true
          description: Gets the current status of the watcher.
        creationTime:
          type: string
          readOnly: true
          format: date-time
          description: Gets or sets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          readOnly: true
          format: date-time
          description: Gets or sets the last modified time.
          nullable: false
        lastModifiedBy:
          type: string
          readOnly: true
          description: Details of the user who last modified the watcher.
        description:
          type: string
          description: Gets or sets the description.
      description: Definition of the watcher properties
    WatcherUpdateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/WatcherUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the watcher update properties.
        name:
          type: string
          description: Gets or sets the name of the resource.
    WatcherUpdateProperties:
      properties:
        executionFrequencyInSeconds:
          type: integer
          format: int64
          description: Gets or sets the frequency at which the watcher is invoked.
      description: The properties of the update watcher operation.
    WatcherListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Watcher'
          description: Gets or sets a list of watchers.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list watcher operation.
    AdvancedSchedule:
      properties:
        weekDays:
          type: array
          items:
            type: string
          description: Days of the week that the job should execute on.
        monthDays:
          type: array
          items:
            type: integer
            format: int32
            nullable: false
          description: Days of the month that the job should execute on. Must be between 1 and 31.
        monthlyOccurrences:
          type: array
          items:
            $ref: '#/components/schemas/AdvancedScheduleMonthlyOccurrence'
          x-ms-identifiers: []
          description: Occurrences of days within a month.
      description: The properties of the create Advanced Schedule.
    AdvancedScheduleMonthlyOccurrence:
      properties:
        occurrence:
          type: integer
          format: int32
          description: Occurrence of the week within the month. Must be between 1 and 5
        day:
          type: string
          description: Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
          enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          x-ms-enum:
            name: ScheduleDay
            modelAsString: true
      description: The properties of the create advanced schedule monthly occurrence.
    ScheduleCreateOrUpdateProperties:
      properties:
        description:
          type: string
          description: Gets or sets the description of the schedule.
        startTime:
          type: string
          format: date-time
          description: Gets or sets the start time of the schedule.
          nullable: false
        expiryTime:
          type: string
          format: date-time
          description: Gets or sets the end time of the schedule.
          nullable: true
        interval:
          description: Gets or sets the interval of the schedule.
        frequency:
          type: string
          description: Gets or sets the frequency of the schedule.
          $ref: '#/components/schemas/scheduleFrequency'
        timeZone:
          type: string
          description: Gets or sets the time zone of the schedule.
        advancedSchedule:
          $ref: '#/components/schemas/AdvancedSchedule'
          description: Gets or sets the AdvancedSchedule.
      required:
        - startTime
        - frequency
      description: The parameters supplied to the create or update schedule operation.
    scheduleFrequency:
      type: string
      description: Gets or sets the frequency of the schedule.
      enum:
        - OneTime
        - Day
        - Hour
        - Week
        - Month
        - Minute
      x-ms-enum:
        name: ScheduleFrequency
        modelAsString: true
        values:
          - value: OneTime
          - value: Day
          - value: Hour
          - value: Week
          - value: Month
          - value: Minute
            description: The minimum allowed interval for Minute schedules is 15 minutes.
    ScheduleCreateOrUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the Schedule.
        properties:
          $ref: '#/components/schemas/ScheduleCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the list of schedule properties.
      required:
        - name
        - properties
      description: The parameters supplied to the create or update schedule operation.
    Schedule:
      properties:
        properties:
          $ref: '#/components/schemas/ScheduleProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the schedule.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Definition of the schedule.
    ScheduleProperties:
      properties:
        startTime:
          type: string
          format: date-time
          description: Gets or sets the start time of the schedule.
          nullable: false
        startTimeOffsetMinutes:
          readOnly: true
          type: number
          format: double
          description: Gets the start time's offset in minutes.
          nullable: false
        expiryTime:
          type: string
          format: date-time
          description: Gets or sets the end time of the schedule.
          nullable: true
        expiryTimeOffsetMinutes:
          type: number
          format: double
          description: Gets or sets the expiry time's offset in minutes.
          nullable: false
        isEnabled:
          type: boolean
          default: false
          description: Gets or sets a value indicating whether this schedule is enabled.
        nextRun:
          type: string
          format: date-time
          description: Gets or sets the next run time of the schedule.
          nullable: true
        nextRunOffsetMinutes:
          type: number
          format: double
          description: Gets or sets the next run time's offset in minutes.
          nullable: false
        interval:
          description: Gets or sets the interval of the schedule.
        frequency:
          type: string
          description: Gets or sets the frequency of the schedule.
          $ref: '#/components/schemas/scheduleFrequency'
        timeZone:
          type: string
          description: Gets or sets the time zone of the schedule.
        advancedSchedule:
          $ref: '#/components/schemas/AdvancedSchedule'
          description: Gets or sets the advanced schedule.
        creationTime:
          type: string
          format: date-time
          description: Gets or sets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
      description: Definition of schedule parameters.
    ScheduleUpdateProperties:
      properties:
        description:
          type: string
          description: Gets or sets the description of the schedule.
        isEnabled:
          type: boolean
          description: Gets or sets a value indicating whether this schedule is enabled.
      description: The parameters supplied to the update schedule operation.
    ScheduleUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the Schedule.
        properties:
          $ref: '#/components/schemas/ScheduleUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the list of schedule properties.
      description: The parameters supplied to the update schedule operation.
    ScheduleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
          description: Gets or sets a list of schedules.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list schedule operation.
    softwareUpdateConfiguration:
      x-ms-azure-resource: true
      description: Software update configuration properties.
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: Resource name.
        id:
          readOnly: true
          type: string
          description: Resource Id.
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          x-ms-client-flatten: true
          description: Software update configuration properties.
          $ref: '#/components/schemas/softwareUpdateConfigurationProperties'
      required:
        - properties
    softwareUpdateConfigurationProperties:
      description: Software update configuration properties.
      properties:
        updateConfiguration:
          description: update specific properties for the Software update configuration
          $ref: '#/components/schemas/updateConfiguration'
        scheduleInfo:
          description: Schedule information for the Software update configuration
          $ref: '#/components/schemas/SUCScheduleProperties'
        provisioningState:
          type: string
          description: Provisioning state for the software update configuration, which only appears in the response.
          readOnly: true
        error:
          description: Details of provisioning error
          $ref: '#/components/schemas/ErrorResponse'
        creationTime:
          type: string
          description: Creation time of the resource, which only appears in the response.
          format: date-time
          nullable: false
          readOnly: true
        createdBy:
          type: string
          description: CreatedBy property, which only appears in the response.
          readOnly: true
        lastModifiedTime:
          type: string
          description: Last time resource was modified, which only appears in the response.
          format: date-time
          nullable: false
          readOnly: true
        lastModifiedBy:
          type: string
          description: LastModifiedBy property, which only appears in the response.
          readOnly: true
        tasks:
          description: Tasks information for the Software update configuration.
          $ref: '#/components/schemas/softwareUpdateConfigurationTasks'
      required:
        - updateConfiguration
        - scheduleInfo
    softwareUpdateConfigurationTasks:
      type: object
      description: Task properties of the software update configuration.
      properties:
        preTask:
          description: Pre task properties.
          $ref: '#/components/schemas/taskProperties'
        postTask:
          description: Post task properties.
          $ref: '#/components/schemas/taskProperties'
    taskProperties:
      type: object
      description: Task properties of the software update configuration.
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the task.
        source:
          type: string
          description: Gets or sets the name of the runbook.
    WindowsProperties:
      type: object
      description: Windows specific update configuration.
      properties:
        includedUpdateClassifications:
          description: Update classification included in the software update configuration. A comma separated string with required values
          type: string
          enum:
            - Unclassified
            - Critical
            - Security
            - UpdateRollup
            - FeaturePack
            - ServicePack
            - Definition
            - Tools
            - Updates
          x-ms-enum:
            name: WindowsUpdateClasses
            modelAsString: true
        excludedKbNumbers:
          type: array
          description: KB numbers excluded from the software update configuration.
          items:
            type: string
        includedKbNumbers:
          type: array
          description: KB numbers included from the software update configuration.
          items:
            type: string
        rebootSetting:
          description: Reboot setting for the software update configuration.
          type: string
    operatingSystemType:
      type: string
      description: Target operating system for the software update configuration.
      enum:
        - Windows
        - Linux
      x-ms-enum:
        modelAsString: false
        name: OperatingSystemType
    updateConfiguration:
      type: object
      description: Update specific properties of the software update configuration.
      properties:
        operatingSystem:
          description: operating system of target machines
          $ref: '#/components/schemas/operatingSystemType'
        windows:
          description: Windows specific update configuration.
          $ref: '#/components/schemas/WindowsProperties'
        linux:
          description: Linux specific update configuration.
          $ref: '#/components/schemas/LinuxProperties'
        duration:
          type: string
          format: duration
          description: Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601
        azureVirtualMachines:
          type: array
          description: List of azure resource Ids for azure virtual machines targeted by the software update configuration.
          items:
            type: string
            description: Azure Resource Manager Id for a virtual machine.
        nonAzureComputerNames:
          type: array
          description: List of names of non-azure machines targeted by the software update configuration.
          items:
            type: string
            description: Name of Non-Azure OMS Computer.
        targets:
          description: Group targets for the software update configuration.
          $ref: '#/components/schemas/TargetProperties'
      required:
        - operatingSystem
    LinuxProperties:
      type: object
      description: Linux specific update configuration.
      properties:
        includedPackageClassifications:
          description: Update classifications included in the software update configuration.
          type: string
          enum:
            - Unclassified
            - Critical
            - Security
            - Other
          x-ms-enum:
            name: LinuxUpdateClasses
            modelAsString: true
        excludedPackageNameMasks:
          type: array
          description: packages excluded from the software update configuration.
          items:
            type: string
        includedPackageNameMasks:
          type: array
          description: packages included from the software update configuration.
          items:
            type: string
        rebootSetting:
          description: Reboot setting for the software update configuration.
          type: string
    SUCScheduleProperties:
      properties:
        startTime:
          type: string
          format: date-time
          nullable: false
          description: Gets or sets the start time of the schedule.
        startTimeOffsetMinutes:
          readOnly: true
          type: number
          format: double
          description: Gets the start time's offset in minutes.
          nullable: false
        expiryTime:
          type: string
          format: date-time
          nullable: true
          description: Gets or sets the end time of the schedule.
        expiryTimeOffsetMinutes:
          type: number
          format: double
          description: Gets or sets the expiry time's offset in minutes.
          nullable: false
        isEnabled:
          type: boolean
          default: false
          description: Gets or sets a value indicating whether this schedule is enabled.
        nextRun:
          type: string
          format: date-time
          nullable: true
          description: Gets or sets the next run time of the schedule.
        nextRunOffsetMinutes:
          type: number
          format: double
          description: Gets or sets the next run time's offset in minutes.
          nullable: false
        interval:
          type: integer
          format: int64
          description: Gets or sets the interval of the schedule.
        frequency:
          type: string
          description: Gets or sets the frequency of the schedule.
          $ref: '#/components/schemas/scheduleFrequency'
        timeZone:
          type: string
          description: Gets or sets the time zone of the schedule.
        advancedSchedule:
          $ref: '#/components/schemas/AdvancedSchedule'
          description: Gets or sets the advanced schedule.
        creationTime:
          type: string
          format: date-time
          nullable: false
          description: Gets or sets the creation time.
        lastModifiedTime:
          type: string
          format: date-time
          nullable: false
          description: Gets or sets the last modified time.
        description:
          type: string
          description: Gets or sets the description.
      description: Definition of schedule parameters.
    softwareUpdateConfigurationListResult:
      description: result of listing all software update configuration
      properties:
        value:
          description: outer object returned when listing all software update configurations
          type: array
          items:
            $ref: '#/components/schemas/softwareUpdateConfigurationCollectionItem'
    softwareUpdateConfigurationCollectionItem:
      description: Software update configuration collection item properties.
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: Name of the software update configuration.
        id:
          readOnly: true
          type: string
          description: Resource Id of the software update configuration
        properties:
          x-ms-client-flatten: true
          description: Software update configuration properties.
          $ref: '#/components/schemas/softwareUpdateConfigurationCollectionItemProperties'
      required:
        - properties
    softwareUpdateConfigurationCollectionItemProperties:
      description: Software update configuration collection item properties.
      properties:
        updateConfiguration:
          description: Update specific properties of the software update configuration.
          $ref: '#/components/schemas/updateConfiguration'
        tasks:
          description: Pre and Post Tasks defined
          $ref: '#/components/schemas/softwareUpdateConfigurationTasks'
        frequency:
          description: execution frequency of the schedule associated with the software update configuration
          type: string
          $ref: '#/components/schemas/scheduleFrequency'
        startTime:
          type: string
          format: date-time
          nullable: false
          description: the start time of the update.
        creationTime:
          type: string
          description: Creation time of the software update configuration, which only appears in the response.
          format: date-time
          nullable: false
          readOnly: true
        lastModifiedTime:
          type: string
          description: Last time software update configuration was modified, which only appears in the response.
          format: date-time
          nullable: false
          readOnly: true
        provisioningState:
          type: string
          description: Provisioning state for the software update configuration, which only appears in the response.
          readOnly: true
        nextRun:
          type: string
          format: date-time
          nullable: true
          description: ext run time of the update.
    TargetProperties:
      type: object
      description: Group specific to the update configuration.
      properties:
        azureQueries:
          description: List of Azure queries in the software update configuration.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/AzureQueryProperties'
          x-ms-identifiers: []
        nonAzureQueries:
          description: List of non Azure queries in the software update configuration.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/NonAzureQueryProperties'
          x-ms-identifiers:
            - workspaceId
    NonAzureQueryProperties:
      type: object
      description: Non Azure query for the update configuration.
      properties:
        functionAlias:
          type: string
          description: Log Analytics Saved Search name.
        workspaceId:
          type: string
          description: Workspace Id for Log Analytics in which the saved Search is resided.
    AzureQueryProperties:
      type: object
      description: Azure query for the update configuration.
      properties:
        scope:
          type: array
          description: List of Subscription or Resource Group ARM Ids.
          items:
            type: string
            description: Subscription or Resource Group ARM Id.
        locations:
          type: array
          description: List of locations to scope the query to.
          items:
            type: string
            description: Location to scope the query to.
        tagSettings:
          type: object
          description: Tag settings for the VM.
          $ref: '#/components/schemas/TagSettingsProperties'
    TagSettingsProperties:
      type: object
      description: Tag filter information for the VM.
      properties:
        tags:
          type: object
          description: Dictionary of tags with its list of values.
          additionalProperties:
            type: array
            items:
              type: string
              description: List of tag values for a tag.
        filterOperator:
          type: string
          description: Filter VMs by Any or All specified tags.
          enum:
            - All
            - Any
          x-ms-enum:
            name: TagOperators
            modelAsString: false
    PrivateEndpointConnectionListResult:
      description: A list of private endpoint connections
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
    HybridRunbookWorker:
      properties:
        properties:
          $ref: '#/components/schemas/HybridRunbookWorkerProperties'
          x-ms-client-flatten: true
          description: Gets or sets the hybrid worker group properties.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Definition of hybrid runbook worker.
    HybridRunbookWorkerProperties:
      type: object
      properties:
        ip:
          type: string
          description: Gets or sets the assigned machine IP address.
        registeredDateTime:
          type: string
          format: date-time
          description: Gets or sets the registration time of the worker machine.
          nullable: false
        lastSeenDateTime:
          type: string
          format: date-time
          description: Last Heartbeat from the Worker
          nullable: false
        vmResourceId:
          type: string
          description: Azure Resource Manager Id for a virtual machine.
        workerType:
          type: string
          description: Type of the HybridWorker.
          enum:
            - HybridV1
            - HybridV2
          x-ms-enum:
            name: WorkerType
            modelAsString: true
        workerName:
          type: string
          description: Name of the HybridWorker.
      description: Definition of hybrid runbook worker property.
    HybridRunbookWorkersListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/HybridRunbookWorker'
          description: Gets or sets a list of hybrid runbook workers.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list hybrid runbook workers.
    HybridRunbookWorkerMoveParameters:
      type: object
      properties:
        hybridRunbookWorkerGroupName:
          type: string
          description: Gets or sets the target hybrid runbook worker group.
      description: Parameters supplied to move hybrid worker operation.
    HybridRunbookWorkerCreateOrUpdateParameters:
      type: object
      properties:
        vmResourceId:
          type: string
          description: Azure Resource Manager Id for a virtual machine.
      description: The parameters supplied to the create or update hybrid runbook worker operation.
    HybridRunbookWorkerCreateParameters:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/HybridRunbookWorkerCreateOrUpdateParameters'
          x-ms-client-flatten: true
          description: Gets or sets hybrid runbook worker group create or update properties.
        name:
          type: string
          description: Gets or sets the name of the resource.
      required:
        - properties
      description: The parameters supplied to the create hybrid runbook worker operation.
    SourceControlSyncJobListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SourceControlSyncJob'
          description: The list of source control sync jobs.
        nextLink:
          type: string
          description: The next link.
      description: The response model for the list source control sync jobs operation.
    SourceControlSyncJobCreateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/SourceControlSyncJobCreateProperties'
          x-ms-client-flatten: true
          description: The properties of the source control sync job.
      required:
        - properties
      description: The parameters supplied to the create source control sync job operation.
    SourceControlSyncJobCreateProperties:
      properties:
        commitId:
          type: string
          description: The commit id of the source control sync job. If not syncing to a commitId, enter an empty string.
          minLength: 0
      required:
        - commitId
      description: Definition of create source control sync job properties.
    SourceControlSyncJobById:
      properties:
        id:
          type: string
          description: The id of the job.
        properties:
          $ref: '#/components/schemas/SourceControlSyncJobByIdProperties'
          x-ms-client-flatten: true
          description: The properties of the source control sync job.
      description: Definition of the source control sync job.
    SourceControlSyncJobByIdProperties:
      properties:
        sourceControlSyncJobId:
          type: string
          description: The source control sync job id.
        creationTime:
          type: string
          format: date-time
          nullable: false
          readOnly: true
          description: The creation time of the job.
        provisioningState:
          type: string
          description: The provisioning state of the job.
          enum:
            - Completed
            - Failed
            - Running
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        startTime:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: The start time of the job.
        endTime:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: The end time of the job.
        syncType:
          type: string
          description: The sync type.
          enum:
            - PartialSync
            - FullSync
          x-ms-enum:
            name: syncType
            modelAsString: true
        exception:
          type: string
          description: The exceptions that occurred while running the sync job.
      description: Definition of source control sync job properties.
    SourceControlSyncJob:
      properties:
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        id:
          readOnly: true
          type: string
          description: Resource id.
        properties:
          $ref: '#/components/schemas/SourceControlSyncJobProperties'
          x-ms-client-flatten: true
          description: The properties of the source control sync job.
      description: Definition of the source control sync job.
    SourceControlSyncJobProperties:
      properties:
        sourceControlSyncJobId:
          type: string
          description: The source control sync job id.
        creationTime:
          type: string
          format: date-time
          nullable: false
          readOnly: true
          description: The creation time of the job.
        provisioningState:
          type: string
          description: The provisioning state of the job.
          enum:
            - Completed
            - Failed
            - Running
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        startTime:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: The start time of the job.
        endTime:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: The end time of the job.
        syncType:
          type: string
          description: The sync type.
          enum:
            - PartialSync
            - FullSync
          x-ms-enum:
            name: syncType
            modelAsString: true
      description: Definition of source control sync job properties.
    softwareUpdateConfigurationRun:
      description: Software update configuration Run properties.
      x-ms-azure-resource: false
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: Name of the software update configuration run.
        id:
          readOnly: true
          type: string
          description: Resource Id of the software update configuration run
        properties:
          x-ms-client-flatten: true
          description: Software update configuration Run properties.
          $ref: '#/components/schemas/softwareUpdateConfigurationRunProperties'
    softwareUpdateConfigurationRunProperties:
      description: Software update configuration properties.
      properties:
        softwareUpdateConfiguration:
          description: software update configuration triggered this run
          $ref: '#/components/schemas/updateConfigurationNavigation'
        status:
          type: string
          description: Status of the software update configuration run.
          readOnly: true
        configuredDuration:
          type: string
          description: Configured duration for the software update configuration run.
          readOnly: true
        osType:
          type: string
          description: Operating system target of the software update configuration triggered this run
          readOnly: true
        startTime:
          type: string
          format: date-time
          nullable: false
          description: Start time of the software update configuration run.
          readOnly: true
        endTime:
          type: string
          format: date-time
          nullable: true
          description: End time of the software update configuration run.
          readOnly: true
        computerCount:
          type: integer
          description: Number of computers in the software update configuration run.
          readOnly: true
        failedCount:
          type: integer
          description: Number of computers with failed status.
          readOnly: true
        creationTime:
          type: string
          description: Creation time of the resource, which only appears in the response.
          format: date-time
          nullable: false
          readOnly: true
        createdBy:
          type: string
          description: CreatedBy property, which only appears in the response.
          readOnly: true
        lastModifiedTime:
          type: string
          description: Last time resource was modified, which only appears in the response.
          format: date-time
          nullable: false
          readOnly: true
        lastModifiedBy:
          type: string
          description: LastModifiedBy property, which only appears in the response.
          readOnly: true
        tasks:
          description: Software update configuration tasks triggered in this run
          $ref: '#/components/schemas/softwareUpdateConfigurationRunTasks'
    softwareUpdateConfigurationRunTasks:
      description: Software update configuration run tasks model.
      type: object
      properties:
        preTask:
          description: Pre task properties.
          $ref: '#/components/schemas/softwareUpdateConfigurationRunTaskProperties'
        postTask:
          description: Post task properties.
          $ref: '#/components/schemas/softwareUpdateConfigurationRunTaskProperties'
    softwareUpdateConfigurationRunTaskProperties:
      type: object
      description: Task properties of the software update configuration.
      properties:
        status:
          type: string
          description: The status of the task.
        source:
          type: string
          description: The name of the source of the task.
        jobId:
          type: string
          description: The job id of the task.
    updateConfigurationNavigation:
      description: Software update configuration Run Navigation model.
      type: object
      properties:
        name:
          description: Name of the software update configuration triggered the software update configuration run
          type: string
          readOnly: true
    softwareUpdateConfigurationRunListResult:
      description: result of listing all software update configuration runs
      properties:
        value:
          description: outer object returned when listing all software update configuration runs
          type: array
          items:
            $ref: '#/components/schemas/softwareUpdateConfigurationRun'
        nextLink:
          type: string
          description: link to next page of results.
    OperationPropertiesFormat:
      description: Description of operation properties format.
      type: object
      properties:
        serviceSpecification:
          description: Specification of the service.
          type: object
          properties:
            metricSpecifications:
              type: array
              x-ms-identifiers: []
              items:
                $ref: '#/components/schemas/MetricSpecification'
              description: Operation service specification.
            logSpecifications:
              type: array
              x-ms-identifiers: []
              items:
                $ref: '#/components/schemas/LogSpecification'
              description: Operation log specification.
    LogSpecification:
      description: Description of logging specification.
      type: object
      properties:
        name:
          type: string
          description: The name of the specification.
        displayName:
          type: string
          description: The display name of the specification.
        blobDuration:
          type: string
          description: Duration of the blob.
    MetricSpecification:
      description: Description of metrics specification.
      type: object
      properties:
        name:
          type: string
          description: The name of the metric.
        displayName:
          type: string
          description: The display name of the metric.
        displayDescription:
          type: string
          description: The description of the metric.
        unit:
          type: string
          description: Units the metric to be displayed in.
        aggregationType:
          type: string
          description: The aggregation type.
        dimensions:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/Dimension'
          description: List of dimensions.
    Dimension:
      description: Dimension of the metric.
      type: object
      properties:
        name:
          type: string
          description: The name of the dimension.
        displayName:
          type: string
          description: The display name of the dimension.
    GraphicalRunbookContent:
      type: object
      description: Graphical Runbook Content
      properties:
        rawContent:
          nullable: true
          x-nullable: true
          description: Raw graphical Runbook content.
          $ref: '#/components/schemas/RawGraphicalRunbookContent'
        graphRunbookJson:
          type: string
          nullable: true
          description: Graphical Runbook content as JSON
    RawGraphicalRunbookContent:
      type: object
      description: Raw Graphical Runbook content
      properties:
        schemaVersion:
          type: string
          description: Schema version of the serializer.
        runbookDefinition:
          type: string
          description: Serialized Graphical runbook
        runbookType:
          type: string
          description: Runbook Type
          enum:
            - GraphPowerShell
            - GraphPowerShellWorkflow
          x-ms-enum:
            name: GraphRunbookType
            modelAsString: true
    DscCompilationJob:
      properties:
        properties:
          $ref: '#/components/schemas/DscCompilationJobProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the Dsc Compilation job.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Definition of the Dsc Compilation job.
    DscCompilationJobCreateProperties:
      properties:
        configuration:
          $ref: '#/components/schemas/DscConfigurationAssociationProperty'
          description: Gets or sets the configuration.
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the job.
        incrementNodeConfigurationBuild:
          type: boolean
          description: If a new build version of NodeConfiguration is required.
      required:
        - configuration
      description: The parameters supplied to the create compilation job operation.
    DscCompilationJobProperties:
      properties:
        configuration:
          $ref: '#/components/schemas/DscConfigurationAssociationProperty'
          description: Gets or sets the configuration.
        startedBy:
          type: string
          readOnly: true
          description: Gets the compilation job started by.
        jobId:
          type: string
          format: uuid
          readOnly: true
          description: Gets the id of the job.
          nullable: false
        creationTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the creation time of the job.
          nullable: false
        provisioningState:
          $ref: '#/components/schemas/JobProvisioningStateProperty'
          description: The current provisioning state of the job.
        runOn:
          type: string
          description: Gets or sets the runOn which specifies the group name where the job is to be executed.
        status:
          type: string
          description: Gets or sets the status of the job.
          enum:
            - New
            - Activating
            - Running
            - Completed
            - Failed
            - Stopped
            - Blocked
            - Suspended
            - Disconnected
            - Suspending
            - Stopping
            - Resuming
            - Removing
          x-ms-enum:
            name: JobStatus
            modelAsString: true
        statusDetails:
          type: string
          description: Gets or sets the status details of the job.
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the start time of the job.
          nullable: true
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the end time of the job.
          nullable: true
        exception:
          type: string
          readOnly: true
          description: Gets the exception of the job.
        lastModifiedTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the last modified time of the job.
          nullable: false
        lastStatusModifiedTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the last status modified time of the job.
          nullable: true
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the job.
      description: Definition of Dsc Compilation job properties.
    DscCompilationJobListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DscCompilationJob'
          description: Gets or sets a list of Dsc Compilation jobs.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list job operation.
    DscCompilationJobCreateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/DscCompilationJobCreateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the list of compilation job properties.
        name:
          type: string
          description: Gets or sets name of the resource.
        location:
          type: string
          description: Gets or sets the location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
      required:
        - properties
      description: The parameters supplied to the create compilation job operation.
    DscConfigurationAssociationProperty:
      properties:
        name:
          type: string
          description: Gets or sets the name of the Dsc configuration.
      description: The Dsc configuration property associated with the entity.
    ContentSource:
      properties:
        hash:
          $ref: '#/components/schemas/ContentHash'
          description: Gets or sets the hash.
        type:
          type: string
          description: Gets or sets the content source type.
          enum:
            - embeddedContent
            - uri
          x-ms-enum:
            name: ContentSourceType
            modelAsString: true
        value:
          type: string
          description: Gets or sets the value of the content. This is based on the content source type.
        version:
          type: string
          description: Gets or sets the version of the content.
      description: Definition of the content source.
    DscNodeConfiguration:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/DscNodeConfigurationProperties'
          x-ms-client-flatten: true
          description: Gets or sets the configuration properties.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Definition of the dsc node configuration.
    DscNodeConfigurationProperties:
      description: Properties for the DscNodeConfiguration
      properties:
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time.
          nullable: false
        creationTime:
          type: string
          format: date-time
          description: Gets or sets creation time.
          nullable: false
        configuration:
          $ref: '#/components/schemas/DscConfigurationAssociationProperty'
          description: Gets or sets the configuration of the node.
        source:
          type: string
          description: Source of node configuration.
        nodeCount:
          type: integer
          format: int64
          description: Number of nodes with this node configuration assigned
        incrementNodeConfigurationBuild:
          type: boolean
          description: If a new build version of NodeConfiguration is required.
    DscNodeConfigurationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DscNodeConfiguration'
          description: Gets or sets a list of Dsc node configurations.
        nextLink:
          type: string
          description: Gets or sets the next link.
        totalCount:
          type: integer
          description: Gets or sets the total rows in query.
      description: The response model for the list job operation.
    DscNodeExtensionHandlerAssociationProperty:
      properties:
        name:
          type: string
          description: Gets or sets the name of the extension handler.
        version:
          type: string
          description: Gets or sets the version of the extension handler.
      description: The dsc extensionHandler property associated with the node
    DscNodeConfigurationCreateOrUpdateParameters:
      description: The parameters supplied to the create or update node configuration operation.
      properties:
        properties:
          $ref: '#/components/schemas/DscNodeConfigurationCreateOrUpdateParametersProperties'
          x-ms-client-flatten: true
          description: Node configuration properties
        name:
          type: string
          description: Name of the node configuration.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
    DscNodeConfigurationCreateOrUpdateParametersProperties:
      properties:
        source:
          $ref: '#/components/schemas/ContentSource'
          description: Gets or sets the source.
        configuration:
          $ref: '#/components/schemas/DscConfigurationAssociationProperty'
          description: Gets or sets the configuration of the node.
        incrementNodeConfigurationBuild:
          type: boolean
          description: If a new build version of NodeConfiguration is required.
      required:
        - source
        - configuration
      description: The parameter properties supplied to the create or update node configuration operation.
    ModuleCreateOrUpdateProperties:
      type: object
      properties:
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          description: Sets the hash.
      required:
        - contentLink
      description: The parameters supplied to the create or update module properties.
    ModuleCreateOrUpdateParameters:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/ModuleCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Sets the module create properties.
        name:
          type: string
          description: Sets name of the resource.
        location:
          type: string
          description: Sets the location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Sets the tags attached to the resource.
      required:
        - properties
      description: The parameters supplied to the create or update module operation.
    ModuleUpdateProperties:
      type: object
      properties:
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          description: Sets the module content link.
      description: The parameters supplied to the update properties.
    ModuleUpdateParameters:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/ModuleUpdateProperties'
          x-ms-client-flatten: true
          description: Sets the module update properties.
        name:
          type: string
          readOnly: true
          description: Sets name of the resource.
        location:
          type: string
          readOnly: true
          description: Sets the location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Sets the tags attached to the resource.
      description: The parameters supplied to the update module operation.
    DscNodeReportListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DscNodeReport'
          description: Gets or sets a list of dsc node reports.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list dsc nodes operation.
    DscReportResourceNavigation:
      properties:
        resourceId:
          type: string
          description: Gets or sets the ID of the resource to navigate to.
      description: Navigation for DSC Report Resource.
    DscMetaConfiguration:
      properties:
        configurationModeFrequencyMins:
          type: integer
          format: int32
          description: Gets or sets the ConfigurationModeFrequencyMins value of the meta configuration.
        rebootNodeIfNeeded:
          type: boolean
          description: Gets or sets the RebootNodeIfNeeded value of the meta configuration.
        configurationMode:
          type: string
          description: Gets or sets the ConfigurationMode value of the meta configuration.
        actionAfterReboot:
          type: string
          description: Gets or sets the ActionAfterReboot value of the meta configuration.
        certificateId:
          type: string
          description: Gets or sets the CertificateId value of the meta configuration.
        refreshFrequencyMins:
          type: integer
          format: int32
          description: Gets or sets the RefreshFrequencyMins value of the meta configuration.
        allowModuleOverwrite:
          type: boolean
          description: Gets or sets the AllowModuleOverwrite value of the meta configuration.
      description: Definition of the DSC Meta Configuration.
    DscNodeReport:
      properties:
        endTime:
          type: string
          format: date-time
          description: Gets or sets the end time of the node report.
          nullable: true
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the lastModifiedTime of the node report.
          nullable: false
        startTime:
          type: string
          format: date-time
          description: Gets or sets the start time of the node report.
          nullable: true
        type:
          type: string
          description: Gets or sets the type of the node report.
        reportId:
          type: string
          description: Gets or sets the id of the node report.
        status:
          type: string
          description: Gets or sets the status of the node report.
        refreshMode:
          type: string
          description: Gets or sets the refreshMode of the node report.
        rebootRequested:
          type: string
          description: Gets or sets the rebootRequested of the node report.
        reportFormatVersion:
          type: string
          description: Gets or sets the reportFormatVersion of the node report.
        configurationVersion:
          type: string
          description: Gets or sets the configurationVersion of the node report.
        id:
          type: string
          description: Gets or sets the id.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/DscReportError'
          x-ms-identifiers:
            - errorMessage
            - resourceId
          description: Gets or sets the errors for the node report.
        resources:
          type: array
          items:
            $ref: '#/components/schemas/DscReportResource'
          x-ms-identifiers:
            - resourceId
          description: Gets or sets the resource for the node report.
        metaConfiguration:
          $ref: '#/components/schemas/DscMetaConfiguration'
          description: Gets or sets the metaConfiguration of the node at the time of the report.
        hostName:
          type: string
          description: Gets or sets the hostname of the node that sent the report.
        iPV4Addresses:
          type: array
          items:
            type: string
          description: Gets or sets the IPv4 address of the node that sent the report.
        iPV6Addresses:
          type: array
          items:
            type: string
          description: Gets or sets the IPv6 address of the node that sent the report.
        numberOfResources:
          type: integer
          format: int32
          description: Gets or sets the number of resource in the node report.
        rawErrors:
          type: string
          description: Gets or sets the unparsed errors for the node report.
      description: Definition of the dsc node report type.
    DscReportResource:
      properties:
        resourceId:
          type: string
          description: Gets or sets the ID of the resource.
        sourceInfo:
          type: string
          description: Gets or sets the source info of the resource.
        dependsOn:
          type: array
          items:
            $ref: '#/components/schemas/DscReportResourceNavigation'
          x-ms-identifiers:
            - resourceId
          description: Gets or sets the Resource Navigation values for resources the resource depends on.
        moduleName:
          type: string
          description: Gets or sets the module name of the resource.
        moduleVersion:
          type: string
          description: Gets or sets the module version of the resource.
        resourceName:
          type: string
          description: Gets or sets the name of the resource.
        error:
          type: string
          description: Gets or sets the error of the resource.
        status:
          type: string
          description: Gets or sets the status of the resource.
        durationInSeconds:
          type: number
          format: double
          description: Gets or sets the duration in seconds for the resource.
        startDate:
          type: string
          format: date-time
          description: Gets or sets the start date of the resource.
          nullable: false
      description: Definition of the DSC Report Resource.
    DscReportError:
      properties:
        errorSource:
          type: string
          description: Gets or sets the source of the error.
        resourceId:
          type: string
          description: Gets or sets the resource ID which generated the error.
        errorCode:
          type: string
          description: Gets or sets the error code.
        errorMessage:
          type: string
          description: Gets or sets the error message.
        locale:
          type: string
          description: Gets or sets the locale of the error.
        errorDetails:
          type: string
          description: Gets or sets the error details.
      description: Definition of the dsc node report error type.
    AgentRegistration:
      properties:
        dscMetaConfiguration:
          type: string
          description: Gets or sets the dsc meta configuration.
        endpoint:
          type: string
          description: Gets or sets the dsc server endpoint.
        keys:
          $ref: '#/components/schemas/AgentRegistrationKeys'
          description: Gets or sets the agent registration keys.
        id:
          type: string
          description: Gets or sets the id.
      description: Definition of the agent registration information type.
    AgentRegistrationKeys:
      properties:
        primary:
          type: string
          description: Gets or sets the primary key.
        secondary:
          type: string
          description: Gets or sets the secondary key.
      description: Definition of the agent registration keys.
    DscNode:
      description: Definition of a DscNode
      properties:
        properties:
          $ref: '#/components/schemas/DscNodeProperties'
          x-ms-client-flatten: true
          description: The properties of a DscNode.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
    DscNodeProperties:
      description: The properties of a DscNode
      properties:
        lastSeen:
          type: string
          format: date-time
          description: Gets or sets the last seen time of the node.
          nullable: false
        registrationTime:
          type: string
          format: date-time
          description: Gets or sets the registration time of the node.
          nullable: false
        ip:
          type: string
          description: Gets or sets the ip of the node.
        accountId:
          type: string
          description: Gets or sets the account id of the node.
        nodeConfiguration:
          nullable: true
          x-nullable: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DscNodeConfigurationAssociationProperty'
          description: Gets or sets the configuration of the node.
        status:
          type: string
          description: Gets or sets the status of the node.
        nodeId:
          type: string
          description: Gets or sets the node id.
        etag:
          type: string
          description: Gets or sets the etag of the resource.
        totalCount:
          type: integer
          description: Gets the total number of records matching filter criteria.
        extensionHandler:
          type: array
          description: Gets or sets the list of extensionHandler properties for a Node.
          items:
            $ref: '#/components/schemas/DscNodeExtensionHandlerAssociationProperty'
          x-ms-identifiers:
            - name
    DscNodeConfigurationAssociationProperty:
      properties:
        name:
          type: string
          description: Gets or sets the name of the dsc node configuration.
      description: The dsc node configuration property associated with the entity.
    AgentRegistrationRegenerateKeyParameter:
      properties:
        keyName:
          type: string
          description: Gets or sets the agent registration key name - primary or secondary.
          enum:
            - primary
            - secondary
          x-ms-enum:
            name: AgentRegistrationKeyName
            modelAsString: true
      required:
        - keyName
      description: The parameters supplied to the regenerate keys operation.
    DscNodeUpdateParameters:
      properties:
        nodeId:
          type: string
          description: Gets or sets the id of the dsc node.
        properties:
          properties:
            nodeConfiguration:
              x-ms-client-flatten: true
              $ref: '#/components/schemas/DscNodeConfigurationAssociationProperty'
              description: Gets or sets the configuration of the node.
      description: The parameters supplied to the update dsc node operation.
    DscNodeListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DscNode'
          description: Gets or sets a list of dsc nodes.
        nextLink:
          type: string
          description: Gets or sets the next link.
        totalCount:
          type: integer
          description: Gets the total number of nodes matching filter criteria.
      description: The response model for the list dsc nodes operation.
    DeletedAutomationAccountListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DeletedAutomationAccount'
          description: Gets or sets the list of deleted automation accounts.
      description: The response model for the list deleted automation account.
    DeletedAutomationAccount:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/DeletedAutomationAccountProperties'
          x-ms-client-flatten: true
          description: Gets or sets the automation account properties.
        id:
          description: The resource id.
          type: string
        name:
          type: string
          description: Gets or sets name of the resource.
        type:
          type: string
          description: The resource type.
        location:
          type: string
          description: Gets or sets the location of the resource.
      description: Definition of the deleted automation account type.
    DeletedAutomationAccountProperties:
      type: object
      properties:
        automationAccountResourceId:
          type: string
          description: Gets or sets the Automation Account Resource Id.
        automationAccountId:
          type: string
          description: Gets or sets the Automation Account Id.
        location:
          type: string
          description: Gets or sets the location of the resource.
        deletionTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the deletion time.
          nullable: false
      description: Definition of the deleted automation account properties.
    FieldDefinition:
      properties:
        isEncrypted:
          type: boolean
          description: Gets or sets the isEncrypted flag of the connection field definition.
        isOptional:
          type: boolean
          description: Gets or sets the isOptional flag of the connection field definition.
        type:
          type: string
          description: Gets or sets the type of the connection field definition.
      required:
        - type
      description: Definition of the connection fields.
    ConnectionTypeProperties:
      properties:
        isGlobal:
          type: boolean
          description: Gets or sets a Boolean value to indicate if the connection type is global.
        fieldDefinitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FieldDefinition'
          readOnly: true
          description: Gets the field definitions of the connection type.
        creationTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
      description: Properties of the connection type.
    ConnectionType:
      properties:
        id:
          type: string
          readOnly: true
          description: Gets the id of the resource.
        name:
          type: string
          readOnly: true
          description: Gets the name of the connection type.
        type:
          type: string
          readOnly: true
          description: Resource type
        properties:
          $ref: '#/components/schemas/ConnectionTypeProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the connection type.
      description: Definition of the connection type.
    ConnectionTypeListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionType'
          description: Gets or sets a list of connection types.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list connection type operation.
    ConnectionTypeCreateOrUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the connection type.
        properties:
          $ref: '#/components/schemas/ConnectionTypeCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the value of the connection type.
      required:
        - name
        - properties
      description: The parameters supplied to the create or update connection type operation.
    ConnectionTypeCreateOrUpdateProperties:
      properties:
        isGlobal:
          type: boolean
          description: Gets or sets a Boolean value to indicate if the connection type is global.
        fieldDefinitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FieldDefinition'
          description: Gets or sets the field definitions of the connection type.
      required:
        - fieldDefinitions
      description: The properties of the create connection type.
    VariableCreateOrUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the variable.
        properties:
          $ref: '#/components/schemas/VariableCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the variable.
      required:
        - name
        - properties
      description: The parameters supplied to the create or update variable operation.
    VariableCreateOrUpdateProperties:
      properties:
        value:
          type: string
          description: Gets or sets the value of the variable.
        description:
          type: string
          description: Gets or sets the description of the variable.
        isEncrypted:
          type: boolean
          description: Gets or sets the encrypted flag of the variable.
      description: The properties of the create variable operation.
    Variable:
      properties:
        properties:
          $ref: '#/components/schemas/VariableProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the variable.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Definition of the variable.
    VariableListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Variable'
          description: Gets or sets a list of variables.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list variables operation.
    VariableUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the variable.
        properties:
          $ref: '#/components/schemas/VariableUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the value of the variable.
      description: The parameters supplied to the update variable operation.
    VariableUpdateProperties:
      properties:
        value:
          type: string
          description: Gets or sets the value of the variable.
        description:
          type: string
          description: Gets or sets the description of the variable.
      description: The properties of the update variable
    VariableProperties:
      properties:
        value:
          type: string
          description: Gets or sets the value of the variable.
        isEncrypted:
          type: boolean
          description: Gets or sets the encrypted flag of the variable.
          nullable: true
        creationTime:
          type: string
          format: date-time
          description: Gets or sets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
      description: Definition of the variable properties
    LinkedWorkspace:
      properties:
        id:
          type: string
          readOnly: true
          description: Gets the id of the linked workspace.
      description: Definition of the linked workspace.
    PrivateEndpointConnection:
      description: A private endpoint connection
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
    PrivateEndpointConnectionProperties:
      description: Properties of a private endpoint connection.
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpointProperty'
          description: Private endpoint which the connection belongs to.
        groupIds:
          $ref: '#/components/schemas/GroupIdsProperty'
          description: Gets the groupIds.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionStateProperty'
          description: Connection State of the Private Endpoint Connection.
    PrivateEndpointProperty:
      type: object
      description: Private endpoint which the connection belongs to.
      properties:
        id:
          type: string
          description: Resource id of the private endpoint.
    GroupIdsProperty:
      type: array
      items:
        type: string
      description: Gets the groupIds.
    PrivateLinkServiceConnectionStateProperty:
      type: object
      description: Connection State of the Private Endpoint Connection.
      properties:
        status:
          type: string
          description: The private link service connection status.
        description:
          type: string
          description: The private link service connection description.
        actionsRequired:
          type: string
          description: Any action that is required beyond basic workflow (approve/ reject/ disconnect)
          readOnly: true
    AutomationAccount:
      properties:
        properties:
          $ref: '#/components/schemas/AutomationAccountProperties'
          x-ms-client-flatten: true
          description: Gets or sets the automation account properties.
        etag:
          type: string
          description: Gets or sets the etag of the resource.
        identity:
          $ref: '#/components/schemas/Identity'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: Definition of the automation account type.
    AutomationAccountProperties:
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of account.
        lastModifiedBy:
          type: string
          description: Gets or sets the last modified by.
        state:
          type: string
          readOnly: true
          description: Gets status of account.
          enum:
            - Ok
            - Unavailable
            - Suspended
          x-ms-enum:
            name: AutomationAccountState
            modelAsString: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
        encryption:
          $ref: '#/components/schemas/EncryptionProperties'
          description: Encryption properties for the automation account
        privateEndpointConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: List of Automation operations supported by the Automation resource provider.
        publicNetworkAccess:
          type: boolean
          description: Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet
        disableLocalAuth:
          type: boolean
          description: Indicates whether requests using non-AAD authentication are blocked
        automationHybridServiceUrl:
          type: string
          description: URL of automation hybrid service which is used for hybrid worker on-boarding.
      description: Definition of the account property.
    AutomationAccountCreateOrUpdateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/AutomationAccountCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets account create or update properties.
        name:
          type: string
          description: Gets or sets name of the resource.
        location:
          type: string
          description: Gets or sets the location of the resource.
        identity:
          type: object
          $ref: '#/components/schemas/Identity'
          description: Sets the identity property for automation account
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
      description: The parameters supplied to the create or update automation account operation.
    AutomationAccountCreateOrUpdateProperties:
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets account SKU.
        encryption:
          $ref: '#/components/schemas/EncryptionProperties'
          description: Set the encryption properties for the automation account
        publicNetworkAccess:
          type: boolean
          description: Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet
        disableLocalAuth:
          type: boolean
          description: Indicates whether requests using non-AAD authentication are blocked
      description: The parameters supplied to the create or update account properties.
    AutomationAccountListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AutomationAccount'
          description: Gets or sets list of accounts.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list account operation.
    Statistics:
      properties:
        counterProperty:
          type: string
          readOnly: true
          description: Gets the property value of the statistic.
        counterValue:
          type: integer
          format: int64
          readOnly: true
          description: Gets the value of the statistic.
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the startTime of the statistic.
          nullable: false
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the endTime of the statistic.
          nullable: true
        id:
          type: string
          readOnly: true
          description: Gets the id.
      description: Definition of the statistic.
    StatisticsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Statistics'
          description: Gets or sets a list of statistics.
      description: The response model for the list statistics operation.
    Usage:
      properties:
        id:
          type: string
          description: Gets or sets the id of the resource.
        name:
          $ref: '#/components/schemas/UsageCounterName'
          description: Gets or sets the usage counter name.
        unit:
          type: string
          description: Gets or sets the usage unit name.
        currentValue:
          type: number
          format: double
          description: Gets or sets the current usage value.
        limit:
          type: integer
          format: int64
          description: Gets or sets max limit. -1 for unlimited
        throttleStatus:
          type: string
          description: Gets or sets the throttle status.
      description: Definition of Usage.
    UsageCounterName:
      properties:
        value:
          type: string
          description: Gets or sets the usage counter name.
        localizedValue:
          type: string
          description: Gets or sets the localized usage counter name.
      description: Definition of usage counter name.
    UsageListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          description: Gets or sets usage.
      description: The response model for the get usage operation.
    Key:
      properties:
        KeyName:
          readOnly: true
          type: string
          description: Automation key name.
          enum:
            - Primary
            - Secondary
          x-ms-enum:
            name: AutomationKeyName
            modelAsString: true
        Permissions:
          readOnly: true
          type: string
          description: Automation key permissions.
          enum:
            - Read
            - Full
          x-ms-enum:
            name: AutomationKeyPermissions
            modelAsString: true
        Value:
          readOnly: true
          type: string
          description: Value of the Automation Key used for registration.
      description: Automation key which is used to register a DSC Node
    KeyListResult:
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/Key'
          x-ms-identifiers:
            - KeyName
          description: Lists the automation keys.
    AutomationAccountUpdateProperties:
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets account SKU.
        encryption:
          $ref: '#/components/schemas/EncryptionProperties'
          description: Set the encryption properties for the automation account
        publicNetworkAccess:
          type: boolean
          description: Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet
        disableLocalAuth:
          type: boolean
          description: Indicates whether requests using non-AAD authentication are blocked
      description: The parameters supplied to the update account properties.
    AutomationAccountUpdateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/AutomationAccountUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets account update properties.
        name:
          type: string
          description: Gets or sets the name of the resource.
        location:
          type: string
          description: Gets or sets the location of the resource.
        identity:
          type: object
          $ref: '#/components/schemas/Identity'
          description: Sets the identity property for automation account
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
      description: The parameters supplied to the update automation account operation.
    EncryptionProperties:
      description: The encryption settings for automation account
      properties:
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
        keySource:
          type: string
          description: Encryption Key Source
          enum:
            - Microsoft.Automation
            - Microsoft.Keyvault
          x-ms-enum:
            name: EncryptionKeySourceType
            modelAsString: false
        identity:
          description: User identity used for CMK.
          properties:
            userAssignedIdentity:
              type: object
              description: 'The user identity used for CMK. It will be an ARM resource id in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
    UserAssignedIdentitiesProperties:
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of user assigned identity.
        clientId:
          readOnly: true
          type: string
          description: The client id of user assigned identity.
    NodeCounts:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NodeCount'
          x-ms-identifiers:
            - name
          description: Gets an array of counts
        totalCount:
          type: integer
          description: Gets the total number of records matching countType criteria.
      description: Gets the count of nodes by count type
    NodeCount:
      description: Number of nodes based on the Filter
      properties:
        name:
          description: Gets the name of a count type
          type: string
        properties:
          $ref: '#/components/schemas/NodeCountProperties'
    NodeCountProperties:
      properties:
        count:
          description: Gets the count for the name
          type: integer
    RunbookProperties:
      type: object
      properties:
        runbookType:
          type: string
          description: Gets or sets the type of the runbook.
          enum:
            - Script
            - Graph
            - PowerShellWorkflow
            - PowerShell
            - GraphPowerShellWorkflow
            - GraphPowerShell
            - Python2
            - Python3
            - PowerShell72
          x-ms-enum:
            name: RunbookTypeEnum
            modelAsString: true
        publishContentLink:
          $ref: '#/components/schemas/ContentLink'
          description: Gets or sets the published runbook content link.
        state:
          type: string
          description: Gets or sets the state of the runbook.
          enum:
            - New
            - Edit
            - Published
          x-ms-enum:
            name: RunbookState
            modelAsString: true
        logVerbose:
          type: boolean
          description: Gets or sets verbose log option.
        logProgress:
          type: boolean
          description: Gets or sets progress log option.
        logActivityTrace:
          type: integer
          format: int32
          description: Gets or sets the option to log activity trace of the runbook.
        jobCount:
          type: integer
          format: int32
          description: Gets or sets the job count of the runbook.
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RunbookParameter'
          description: Gets or sets the runbook parameters.
        outputTypes:
          type: array
          items:
            type: string
          description: Gets or sets the runbook output types.
        draft:
          $ref: '#/components/schemas/RunbookDraft'
          description: Gets or sets the draft runbook properties.
        provisioningState:
          type: string
          description: Gets or sets the provisioning state of the runbook.
          enum:
            - Succeeded
          x-ms-enum:
            name: RunbookProvisioningState
            modelAsString: false
        lastModifiedBy:
          type: string
          description: Gets or sets the last modified by.
        creationTime:
          type: string
          format: date-time
          description: Gets or sets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
      description: Definition of the runbook property type.
    Runbook:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/RunbookProperties'
          x-ms-client-flatten: true
          description: Gets or sets the runbook properties.
        etag:
          type: string
          description: Gets or sets the etag of the resource.
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: Definition of the runbook type.
    RunbookListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Runbook'
          description: Gets or sets a list of runbooks.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list runbook operation.
    RunbookCreateOrUpdateProperties:
      type: object
      properties:
        logVerbose:
          type: boolean
          description: Gets or sets verbose log option.
        logProgress:
          type: boolean
          description: Gets or sets progress log option.
        runbookType:
          type: string
          description: Gets or sets the type of the runbook.
          enum:
            - Script
            - Graph
            - PowerShellWorkflow
            - PowerShell
            - GraphPowerShellWorkflow
            - GraphPowerShell
            - Python2
            - Python3
            - PowerShell72
          x-ms-enum:
            name: RunbookTypeEnum
            modelAsString: true
        draft:
          $ref: '#/components/schemas/RunbookDraft'
          description: Gets or sets the draft runbook properties.
        publishContentLink:
          $ref: '#/components/schemas/ContentLink'
          description: Gets or sets the published runbook content link.
        description:
          type: string
          description: Gets or sets the description of the runbook.
        logActivityTrace:
          type: integer
          format: int32
          description: Gets or sets the activity-level tracing options of the runbook.
      required:
        - runbookType
      description: The parameters supplied to the create or update runbook properties.
    RunbookCreateOrUpdateParameters:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/RunbookCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets runbook create or update properties.
        name:
          type: string
          description: Gets or sets the name of the resource.
        location:
          type: string
          description: Gets or sets the location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
      required:
        - properties
      description: The parameters supplied to the create or update runbook operation.
    RunbookUpdateProperties:
      type: object
      properties:
        description:
          type: string
          description: Gets or sets the description of the runbook.
        logVerbose:
          type: boolean
          description: Gets or sets verbose log option.
        logProgress:
          type: boolean
          description: Gets or sets progress log option.
        logActivityTrace:
          type: integer
          format: int32
          description: Gets or sets the activity-level tracing options of the runbook.
      description: The parameters supplied to the update runbook properties.
    RunbookUpdateParameters:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/RunbookUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the runbook update properties.
        name:
          type: string
          description: Gets or sets the name of the resource.
        location:
          type: string
          description: Gets or sets the location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
      description: The parameters supplied to the update runbook operation.
    RunbookDraftUndoEditResult:
      type: object
      properties:
        statusCode:
          type: string
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          x-ms-enum:
            name: HttpStatusCode
            modelAsString: true
        requestId:
          type: string
      description: The response model for the undo edit runbook operation.
    RunbookDraft:
      type: object
      properties:
        inEdit:
          type: boolean
          description: Gets or sets whether runbook is in edit mode.
        draftContentLink:
          $ref: '#/components/schemas/ContentLink'
          description: Gets or sets the draft runbook content link.
        creationTime:
          type: string
          format: date-time
          description: Gets or sets the creation time of the runbook draft.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time of the runbook draft.
          nullable: false
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RunbookParameter'
          description: Gets or sets the runbook draft parameters.
        outputTypes:
          type: array
          items:
            type: string
          description: Gets or sets the runbook output types.
    RunbookParameter:
      type: object
      properties:
        type:
          type: string
          description: Gets or sets the type of the parameter.
        isMandatory:
          type: boolean
          description: Gets or sets a Boolean value to indicate whether the parameter is mandatory or not.
        position:
          type: integer
          format: int32
          description: Get or sets the position of the parameter.
        defaultValue:
          type: string
          description: Gets or sets the default value of parameter.
      description: Definition of the runbook parameter type.
    TestJobCreateParameters:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the test job.
        runOn:
          type: string
          description: Gets or sets the runOn which specifies the group name where the job is to be executed.
      description: The parameters supplied to the create test job operation.
    TestJob:
      type: object
      x-ms-mutability:
        - read
        - create
      properties:
        creationTime:
          type: string
          format: date-time
          description: Gets or sets the creation time of the test job.
          nullable: false
        status:
          type: string
          description: Gets or sets the status of the test job.
        statusDetails:
          type: string
          description: Gets or sets the status details of the test job.
        runOn:
          type: string
          description: Gets or sets the runOn which specifies the group name where the job is to be executed.
        startTime:
          type: string
          format: date-time
          description: Gets or sets the start time of the test job.
          nullable: true
        endTime:
          type: string
          format: date-time
          description: Gets or sets the end time of the test job.
          nullable: true
        exception:
          type: string
          description: Gets or sets the exception of the test job.
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time of the test job.
          nullable: false
        lastStatusModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last status modified time of the test job.
          nullable: true
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters of the test job.
        logActivityTrace:
          type: integer
          format: int32
          description: The activity-level tracing options of the runbook.
      description: Definition of the test job.
    RunbookCreateOrUpdateDraftProperties:
      type: object
      properties:
        logVerbose:
          type: boolean
          description: Gets or sets verbose log option.
        logProgress:
          type: boolean
          description: Gets or sets progress log option.
        runbookType:
          type: string
          description: Gets or sets the type of the runbook.
          enum:
            - Script
            - Graph
            - PowerShellWorkflow
            - PowerShell
            - GraphPowerShellWorkflow
            - GraphPowerShell
            - Python2
            - Python3
            - PowerShell72
          x-ms-enum:
            name: RunbookTypeEnum
            modelAsString: true
        draft:
          $ref: '#/components/schemas/RunbookDraft'
          description: Gets or sets the draft runbook properties.
        description:
          type: string
          description: Gets or sets the description of the runbook.
        logActivityTrace:
          type: integer
          format: int32
          description: Gets or sets the activity-level tracing options of the runbook.
      required:
        - runbookType
        - draft
      description: The parameters supplied to the create or update draft runbook properties.
    RunbookCreateOrUpdateDraftParameters:
      type: object
      properties:
        runbookContent:
          type: string
          description: Content of the Runbook.
      x-ms-client-flatten: true
      required:
        - runbookContent
      description: The parameters supplied to the create or update runbook operation.
    CredentialCreateOrUpdateProperties:
      properties:
        userName:
          type: string
          description: Gets or sets the user name of the credential.
        password:
          type: string
          description: Gets or sets the password of the credential.
        description:
          type: string
          description: Gets or sets the description of the credential.
      required:
        - userName
        - password
      description: The properties of the create credential operation.
    CredentialCreateOrUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the credential.
        properties:
          $ref: '#/components/schemas/CredentialCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the credential.
      required:
        - name
        - properties
      description: The parameters supplied to the create or update credential operation.
    CredentialProperties:
      properties:
        userName:
          type: string
          readOnly: true
          description: Gets the user name of the credential.
        creationTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the last modified time.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
      description: Definition of the credential properties
    Credential:
      properties:
        properties:
          $ref: '#/components/schemas/CredentialProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the credential.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Definition of the credential.
    CredentialListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Credential'
          description: Gets or sets a list of credentials.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list credential operation.
    CredentialUpdateProperties:
      properties:
        userName:
          type: string
          description: Gets or sets the user name of the credential.
        password:
          type: string
          description: Gets or sets the password of the credential.
        description:
          type: string
          description: Gets or sets the description of the credential.
      description: The properties of the Update credential
    CredentialUpdateParameters:
      properties:
        name:
          type: string
          description: Gets or sets the name of the credential.
        properties:
          $ref: '#/components/schemas/CredentialUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets the properties of the variable.
      description: The parameters supplied to the Update credential operation.
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    softwareUpdateConfigurationMachineRun:
      description: Software update configuration machine run model.
      x-ms-azure-resource: false
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: Name of the software update configuration machine run
        id:
          readOnly: true
          type: string
          description: Resource Id of the software update configuration machine run
        properties:
          x-ms-client-flatten: true
          description: Software update configuration machine run properties.
          $ref: '#/components/schemas/updateConfigurationMachineRunProperties'
    softwareUpdateConfigurationMachineRunListResult:
      description: result of listing all software update configuration machine runs
      properties:
        value:
          description: outer object returned when listing all software update configuration machine runs
          type: array
          items:
            $ref: '#/components/schemas/softwareUpdateConfigurationMachineRun'
        nextLink:
          type: string
          description: link to next page of results.
    updateConfigurationMachineRunProperties:
      description: Software update configuration machine run properties.
      properties:
        targetComputer:
          type: string
          description: name of the updated computer
          readOnly: true
        targetComputerType:
          type: string
          description: type of the updated computer.
          readOnly: true
        softwareUpdateConfiguration:
          description: software update configuration triggered this run
          $ref: '#/components/schemas/updateConfigurationNavigation'
        status:
          type: string
          description: Status of the software update configuration machine run.
          readOnly: true
        osType:
          type: string
          description: Operating system target of the software update configuration triggered this run
          readOnly: true
        correlationId:
          type: string
          format: uuid
          description: correlation id of the software update configuration machine run
          readOnly: true
        sourceComputerId:
          type: string
          format: uuid
          description: source computer id of the software update configuration machine run
          readOnly: true
        startTime:
          type: string
          format: date-time
          nullable: false
          description: Start time of the software update configuration machine run.
          readOnly: true
        endTime:
          type: string
          format: date-time
          nullable: true
          description: End time of the software update configuration machine run.
          readOnly: true
        configuredDuration:
          type: string
          description: configured duration for the software update configuration run.
          readOnly: true
        job:
          description: Job associated with the software update configuration machine run
          $ref: '#/components/schemas/jobNavigation'
        creationTime:
          type: string
          description: Creation time of the resource, which only appears in the response.
          format: date-time
          nullable: false
          readOnly: true
        createdBy:
          type: string
          description: createdBy property, which only appears in the response.
          readOnly: true
        lastModifiedTime:
          type: string
          description: Last time resource was modified, which only appears in the response.
          format: date-time
          nullable: false
          readOnly: true
        lastModifiedBy:
          type: string
          description: lastModifiedBy property, which only appears in the response.
          readOnly: true
        error:
          description: Details of provisioning error
          $ref: '#/components/schemas/ErrorResponse'
    jobNavigation:
      description: Software update configuration machine run job navigation properties.
      type: object
      properties:
        id:
          description: Id of the job associated with the software update configuration run
          type: string
          readOnly: true
    SourceControlSyncJobStreamsListBySyncJob:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SourceControlSyncJobStream'
          description: The list of source control sync job streams.
        nextLink:
          type: string
          readOnly: true
          description: The next link.
      description: The response model for the list source control sync job streams operation.
    SourceControlSyncJobStream:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource id.
        properties:
          $ref: '#/components/schemas/SourceControlSyncJobStreamProperties'
          x-ms-client-flatten: true
          description: The properties of the source control sync job stream.
      description: Definition of the source control sync job stream.
    SourceControlSyncJobStreamProperties:
      properties:
        sourceControlSyncJobStreamId:
          type: string
          description: The sync job stream id.
        summary:
          type: string
          description: The summary of the sync job stream.
        time:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: The time of the sync job stream.
        streamType:
          type: string
          description: The type of the sync job stream.
          enum:
            - Error
            - Output
          x-ms-enum:
            name: streamType
            modelAsString: true
      description: Definition of source control sync job stream properties.
    SourceControlSyncJobStreamById:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource id.
        properties:
          $ref: '#/components/schemas/SourceControlSyncJobStreamByIdProperties'
          x-ms-client-flatten: true
          description: The properties of the source control sync job stream.
      description: Definition of the source control sync job stream by id.
    SourceControlSyncJobStreamByIdProperties:
      properties:
        sourceControlSyncJobStreamId:
          type: string
          description: The sync job stream id.
        summary:
          type: string
          description: The summary of the sync job stream.
        time:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          description: The time of the sync job stream.
        streamType:
          type: string
          description: The type of the sync job stream.
          enum:
            - Error
            - Output
          x-ms-enum:
            name: streamType
            modelAsString: true
        streamText:
          type: string
          description: The text of the sync job stream.
        value:
          type: object
          additionalProperties:
            type: object
          description: The values of the job stream.
      description: Definition of source control sync job stream by id properties.
    DscConfigurationCreateOrUpdateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/DscConfigurationCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets configuration create or update properties.
        name:
          type: string
          description: Gets or sets name of the resource.
        location:
          type: string
          description: Gets or sets the location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
      required:
        - properties
      description: The parameters supplied to the create or update configuration operation.
    DscConfigurationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DscConfiguration'
          description: Gets or sets a list of configurations.
        nextLink:
          type: string
          description: Gets or sets the next link.
        totalCount:
          type: integer
          description: Gets the total number of configurations matching filter criteria.
      description: The response model for the list configuration operation.
    DscConfigurationCreateOrUpdateProperties:
      properties:
        logVerbose:
          type: boolean
          description: Gets or sets verbose log option.
        logProgress:
          type: boolean
          description: Gets or sets progress log option.
        source:
          $ref: '#/components/schemas/ContentSource'
          description: Gets or sets the source.
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DscConfigurationParameter'
          description: Gets or sets the configuration parameters.
        description:
          type: string
          description: Gets or sets the description of the configuration.
      required:
        - source
      description: The properties to create or update configuration.
    DscConfigurationParameter:
      properties:
        type:
          type: string
          description: Gets or sets the type of the parameter.
        isMandatory:
          type: boolean
          description: Gets or sets a Boolean value to indicate whether the parameter is mandatory or not.
        position:
          type: integer
          format: int32
          description: Get or sets the position of the parameter.
        defaultValue:
          type: string
          description: Gets or sets the default value of parameter.
      description: Definition of the configuration parameter type.
    DscConfigurationUpdateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/DscConfigurationCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets configuration create or update properties.
        name:
          type: string
          description: Gets or sets name of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
      description: The parameters supplied to the create or update configuration operation.
    DscConfigurationProperties:
      properties:
        provisioningState:
          type: string
          description: Gets or sets the provisioning state of the configuration.
          enum:
            - Succeeded
          x-ms-enum:
            name: DscConfigurationProvisioningState
            modelAsString: false
        jobCount:
          type: integer
          format: int32
          description: Gets or sets the job count of the configuration.
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DscConfigurationParameter'
          description: Gets or sets the configuration parameters.
        source:
          $ref: '#/components/schemas/ContentSource'
          description: Gets or sets the source.
        state:
          type: string
          description: Gets or sets the state of the configuration.
          enum:
            - New
            - Edit
            - Published
          x-ms-enum:
            name: DscConfigurationState
            modelAsString: true
        logVerbose:
          type: boolean
          description: Gets or sets verbose log option.
        creationTime:
          type: string
          format: date-time
          description: Gets or sets the creation time.
          nullable: false
        lastModifiedTime:
          type: string
          format: date-time
          description: Gets or sets the last modified time.
          nullable: false
        nodeConfigurationCount:
          type: integer
          description: Gets the number of compiled node configurations.
          nullable: false
        description:
          type: string
          description: Gets or sets the description.
      description: Definition of the configuration property type.
    DscConfiguration:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/DscConfigurationProperties'
          x-ms-client-flatten: true
          description: Gets or sets the configuration properties.
        etag:
          type: string
          description: Gets or sets the etag of the resource.
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: Definition of the configuration type.
    RunAsCredentialAssociationProperty:
      properties:
        name:
          type: string
          description: Gets or sets the name of the credential.
      description: Definition of RunAs credential to use for hybrid worker.
    HybridRunbookWorkerGroupProperties:
      type: object
      properties:
        groupType:
          type: string
          description: Type of the HybridWorkerGroup.
          enum:
            - User
            - System
          x-ms-enum:
            name: GroupTypeEnum
            modelAsString: true
        credential:
          $ref: '#/components/schemas/RunAsCredentialAssociationProperty'
          description: Sets the credential of a worker group.
      description: Definition of hybrid runbook worker group property.
    HybridRunbookWorkerGroup:
      properties:
        properties:
          $ref: '#/components/schemas/HybridRunbookWorkerGroupProperties'
          x-ms-client-flatten: true
          description: Gets or sets the hybrid worker group properties.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Definition of hybrid runbook worker group.
    HybridRunbookWorkerGroupsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/HybridRunbookWorkerGroup'
          description: Gets or sets a list of hybrid runbook worker groups.
        nextLink:
          type: string
          description: Gets or sets the next link.
      description: The response model for the list hybrid runbook worker groups.
    HybridRunbookWorkerGroupCreateOrUpdateProperties:
      type: object
      properties:
        credential:
          $ref: '#/components/schemas/RunAsCredentialAssociationProperty'
          description: Sets the credential of a worker group.
      description: The hybrid runbook worker group properties.
    HybridRunbookWorkerGroupCreateOrUpdateParameters:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/HybridRunbookWorkerGroupCreateOrUpdateProperties'
          x-ms-client-flatten: true
          description: Gets or sets hybrid runbook worker group create or update properties.
        name:
          type: string
          description: Gets or sets the name of the resource.
      description: The parameters supplied to the create hybrid runbook worker group operation.
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AutomationAccountNameParameter:
      name: automationAccountName
      in: path
      description: The name of the automation account.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
        type: string
    clientRequestId:
      name: clientRequestId
      in: header
      description: Identifies this specific client request.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    CountTypeParameter:
      name: countType
      in: path
      description: The type of counts to retrieve
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - status
          - nodeconfiguration
        x-ms-enum:
          name: CountType
          modelAsString: true
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RuntimeEnvironmentNameParameter:
      name: runtimeEnvironmentName
      in: path
      description: The name of the Runtime Environment.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
        type: string
    ModuleNameParameter:
      name: moduleName
      in: path
      description: The name of module.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z][a-zA-Z-._0-9]*$
        type: string
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connections/{connectionName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - Connection
      operationId: Connection_Delete
      description: Delete the connection.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/connectionoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: connectionName
          in: path
          description: The name of connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Connection
      operationId: Connection_Get
      description: Retrieve the connection identified by connection name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/connectionoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: connectionName
          in: path
          description: The name of connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Connection
      operationId: Connection_CreateOrUpdate
      description: Create or update a connection.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/connectionoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: connectionName
          in: path
          description: The parameters supplied to the create or update connection operation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create or update connection operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Connection
      operationId: Connection_Update
      description: Update a connection.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/connectionoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: connectionName
          in: path
          description: The parameters supplied to the update a connection operation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the update a connection operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connections:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Connection
      operationId: Connection_ListByAutomationAccount
      description: Retrieve a list of connections.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/connectionoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules/{jobScheduleId}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - JobSchedule
      operationId: JobSchedule_Delete
      description: Delete the job schedule identified by job schedule name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobscheduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobScheduleId
          in: path
          description: The job schedule name.
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - JobSchedule
      operationId: JobSchedule_Get
      description: Retrieve the job schedule identified by job schedule name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobscheduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobScheduleId
          in: path
          description: The job schedule name.
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSchedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - JobSchedule
      operationId: JobSchedule_Create
      description: Create a job schedule.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobscheduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobScheduleId
          in: path
          description: The job schedule name.
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create job schedule operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobScheduleCreateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSchedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules:
    x-api-version: '2023-11-01'
    get:
      tags:
        - JobSchedule
      operationId: JobSchedule_ListByAutomationAccount
      description: Retrieve a list of job schedules.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobscheduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobScheduleListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/JobSchedule'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python3Packages/{packageName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - Python3Package
      operationId: Python3Package_Delete
      description: Delete the python 3 package by name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: packageName
          in: path
          description: The python package name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Python3Package
      operationId: Python3Package_Get
      description: Retrieve the python 3 package identified by package name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: packageName
          in: path
          description: The python package name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Python3Package
      operationId: Python3Package_CreateOrUpdate
      description: Create or Update the python 3 package identified by package name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: packageName
          in: path
          description: The name of python package.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for python package.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PythonPackageCreateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Python3Package
      operationId: Python3Package_Update
      description: Update the python 3 package identified by package name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: packageName
          in: path
          description: The name of python package.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The update parameters for python package.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PythonPackageUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python3Packages:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Python3Package
      operationId: Python3Package_ListByAutomationAccount
      description: Retrieve a list of python 3 packages.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/privateLinkResources:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - PrivateLinkResources
      description: Gets the private link resources that need to be created for Automation account.
      operationId: PrivateLinkResources_Automation
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/webhooks/generateUri:
    x-api-version: '2015-10-31'
    post:
      tags:
        - Webhook
      operationId: Webhook_GenerateUri
      description: Generates a Uri for use in creating a webhook.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/webhookoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/webhooks/{webhookName}:
    x-api-version: '2015-10-31'
    delete:
      tags:
        - Webhook
      operationId: Webhook_Delete
      description: Delete the webhook by name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/webhookoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: webhookName
          in: path
          description: The webhook name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Webhook
      operationId: Webhook_Get
      description: Retrieve the webhook identified by webhook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/webhookoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: webhookName
          in: path
          description: The webhook name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Webhook
      operationId: Webhook_CreateOrUpdate
      description: Create the webhook identified by webhook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/webhookoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: webhookName
          in: path
          description: The webhook name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for webhook.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Webhook
      operationId: Webhook_Update
      description: Update the webhook identified by webhook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/webhookoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: webhookName
          in: path
          description: The webhook name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The update parameters for webhook.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/webhooks:
    x-api-version: '2015-10-31'
    get:
      tags:
        - Webhook
      operationId: Webhook_ListByAutomationAccount
      description: Retrieve a list of webhooks.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/webhookoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Webhook'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}:
    x-api-version: '2023-11-01'
    put:
      tags:
        - SourceControl
      operationId: SourceControl_CreateOrUpdate
      description: Create a source control.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontroloperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: sourceControlName
          in: path
          description: The source control name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create or update source control operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceControlCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - SourceControl
      operationId: SourceControl_Update
      description: Update a source control.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontroloperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: sourceControlName
          in: path
          description: The source control name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the update source control operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceControlUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - SourceControl
      operationId: SourceControl_Delete
      description: Delete the source control.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontroloperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: sourceControlName
          in: path
          description: The name of source control.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - SourceControl
      operationId: SourceControl_Get
      description: Retrieve the source control identified by source control name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontroloperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: sourceControlName
          in: path
          description: The name of source control.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls:
    x-api-version: '2023-11-01'
    get:
      tags:
        - SourceControl
      operationId: SourceControl_ListByAutomationAccount
      description: Retrieve a list of source controls.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontroloperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/certificates/{certificateName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - Certificate
      operationId: Certificate_Delete
      description: Delete the certificate.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/certificateoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: certificateName
          in: path
          description: The name of certificate.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Certificate
      operationId: Certificate_Get
      description: Retrieve the certificate identified by certificate name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/certificateoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: certificateName
          in: path
          description: The name of certificate.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Certificate
      operationId: Certificate_CreateOrUpdate
      description: Create a certificate.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/certificateoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: certificateName
          in: path
          description: The parameters supplied to the create or update certificate operation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create or update certificate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Certificate
      operationId: Certificate_Update
      description: Update a certificate.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/certificateoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: certificateName
          in: path
          description: The parameters supplied to the update certificate operation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the update certificate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/certificates:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Certificate
      operationId: Certificate_ListByAutomationAccount
      description: Retrieve a list of certificates.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/certificateoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/output:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Job
      operationId: Job_GetOutput
      description: Retrieve the job output identified by job name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/joboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobName
          in: path
          description: The name of the job to be created.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        default:
          description: Automation error response describing why the operation failed.
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/runbookContent:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Job
      operationId: Job_GetRunbookContent
      description: Retrieve the runbook content of the job identified by job name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/joboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: OK
          content:
            text/powershell:
              schema:
                type: string
        default:
          description: Automation error response describing why the operation failed.
          content:
            text/powershell:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/suspend:
    x-api-version: '2023-11-01'
    post:
      tags:
        - Job
      operationId: Job_Suspend
      description: Suspend the job identified by job name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/joboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/stop:
    x-api-version: '2023-11-01'
    post:
      tags:
        - Job
      operationId: Job_Stop
      description: Stop the job identified by jobName.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/joboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Job
      operationId: Job_Get
      description: Retrieve the job identified by job name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/joboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Job
      operationId: Job_Create
      description: Create a job of the runbook.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/joboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      requestBody:
        description: The parameters supplied to the create job operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCreateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Job
      operationId: Job_ListByAutomationAccount
      description: Retrieve a list of jobs.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/joboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResultV2'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/JobCollectionItem'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/resume:
    x-api-version: '2023-11-01'
    post:
      tags:
        - Job
      operationId: Job_Resume
      description: Resume the job identified by jobName.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/joboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/streams/{jobStreamId}:
    x-api-version: '2023-11-01'
    get:
      tags:
        - JobStream
      operationId: JobStream_Get
      description: Retrieve the job stream identified by job stream id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobstreamoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - name: jobStreamId
          in: path
          description: The job stream id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStream'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}/streams:
    x-api-version: '2023-11-01'
    get:
      tags:
        - JobStream
      operationId: JobStream_ListByJob
      description: Retrieve a list of jobs streams identified by job name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobstreamoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStreamListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/watchers/{watcherName}:
    x-api-version: 2020-01-13-preview
    put:
      tags:
        - Watcher
      operationId: Watcher_CreateOrUpdate
      description: Create the watcher identified by watcher name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/watcheroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: watcherName
          in: path
          description: The watcher name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for watcher.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watcher'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Watcher
      operationId: Watcher_Get
      description: Retrieve the watcher identified by watcher name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/watcheroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: watcherName
          in: path
          description: The watcher name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Watcher
      operationId: Watcher_Update
      description: Update the watcher identified by watcher name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/watcheroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: watcherName
          in: path
          description: The watcher name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The update parameters for watcher.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatcherUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Watcher
      operationId: Watcher_Delete
      description: Delete the watcher by name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/watcheroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: watcherName
          in: path
          description: The watcher name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/watchers/{watcherName}/start:
    x-api-version: 2020-01-13-preview
    post:
      tags:
        - Watcher
      operationId: Watcher_Start
      description: Resume the watcher identified by watcher name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/watcheroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: watcherName
          in: path
          description: The watcher name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/watchers/{watcherName}/stop:
    x-api-version: 2020-01-13-preview
    post:
      tags:
        - Watcher
      operationId: Watcher_Stop
      description: Resume the watcher identified by watcher name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/watcheroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: watcherName
          in: path
          description: The watcher name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/watchers:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - Watcher
      operationId: Watcher_ListByAutomationAccount
      description: Retrieve a list of watchers.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/watcheroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatcherListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Watcher'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/schedules/{scheduleName}:
    x-api-version: '2023-11-01'
    put:
      tags:
        - Schedule
      operationId: Schedule_CreateOrUpdate
      description: Create a schedule.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/scheduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: scheduleName
          in: path
          description: The schedule name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create or update schedule operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '409':
          description: Conflict
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Schedule
      operationId: Schedule_Update
      description: Update the schedule identified by schedule name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/scheduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: scheduleName
          in: path
          description: The schedule name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the update schedule operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Schedule
      operationId: Schedule_Get
      description: Retrieve the schedule identified by schedule name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/scheduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: scheduleName
          in: path
          description: The schedule name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Schedule
      operationId: Schedule_Delete
      description: Delete the schedule identified by schedule name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/scheduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: scheduleName
          in: path
          description: The schedule name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/schedules:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Schedule
      operationId: Schedule_ListByAutomationAccount
      description: Retrieve a list of schedules.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/scheduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations/{softwareUpdateConfigurationName}:
    x-api-version: '2019-06-01'
    put:
      tags:
        - Software Update Configuration
      description: Create a new software update configuration with the name given in the URI.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/softwareupdateconfigurationoperations
      operationId: SoftwareUpdateConfigurations_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: softwareUpdateConfigurationName
          in: path
          description: The name of the software update configuration to be created.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      requestBody:
        description: Request body.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/softwareUpdateConfiguration'
      responses:
        '200':
          description: Software update configuration with the same name and properties already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/softwareUpdateConfiguration'
        '201':
          description: Software update configuration is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/softwareUpdateConfiguration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Software Update Configuration
      description: Get a single software update configuration by name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/softwareupdateconfigurationoperations
      operationId: SoftwareUpdateConfigurations_GetByName
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: softwareUpdateConfigurationName
          in: path
          description: The name of the software update configuration to be created.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: A single software update configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/softwareUpdateConfiguration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Software Update Configuration
      description: delete a specific software update configuration.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/softwareupdateconfigurationoperations
      operationId: SoftwareUpdateConfigurations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: softwareUpdateConfigurationName
          in: path
          description: The name of the software update configuration to be created.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: The software update configuration has been deleted.
        '204':
          description: The software update configuration does not exist.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations:
    x-api-version: '2019-06-01'
    get:
      tags:
        - Software Update Configuration
      description: Get all software update configurations for the account.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/softwareupdateconfigurationoperations
      operationId: SoftwareUpdateConfigurations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Return list of software update configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/softwareUpdateConfigurationListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/privateEndpointConnections:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - PrivateEndpointConnections
      description: List all private endpoint connections on a Automation account.
      operationId: PrivateEndpointConnections_ListByAutomationAccount
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
      responses:
        '200':
          description: Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/privateEndpointConnections/{privateEndpointConnectionName}:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets a private endpoint connection.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: Successfully retrieved a specified private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
    put:
      tags:
        - PrivateEndpointConnections
      description: Approve or reject a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Successfully approved or rejected private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Accepted. The private endpoint connection update will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - PrivateEndpointConnections
      description: Deletes a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '202':
          description: Accepted. The private endpoint connection delete will complete asynchronously.
        '204':
          description: Private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}/hybridRunbookWorkers/{hybridRunbookWorkerId}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - HybridRunbookWorker
      operationId: HybridRunbookWorkers_Delete
      description: Delete a hybrid runbook worker.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: hybridRunbookWorkerGroupName
          in: path
          description: The hybrid runbook worker group name
          required: true
          schema:
            type: string
        - name: hybridRunbookWorkerId
          in: path
          description: The hybrid runbook worker id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - HybridRunbookWorker
      operationId: HybridRunbookWorkers_Get
      description: Retrieve a hybrid runbook worker.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: hybridRunbookWorkerGroupName
          in: path
          description: The hybrid runbook worker group name
          required: true
          schema:
            type: string
        - name: hybridRunbookWorkerId
          in: path
          description: The hybrid runbook worker id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridRunbookWorker'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - HybridRunbookWorker
      operationId: HybridRunbookWorkers_Create
      description: Create a hybrid runbook worker.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: hybridRunbookWorkerGroupName
          in: path
          description: The hybrid runbook worker group name
          required: true
          schema:
            type: string
        - name: hybridRunbookWorkerId
          in: path
          description: The hybrid runbook worker id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for hybrid runbook worker.
        required: true
        x-ms-requestBody-name: HybridRunbookWorkerCreationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridRunbookWorkerCreateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridRunbookWorker'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridRunbookWorker'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}/hybridRunbookWorkers/{hybridRunbookWorkerId}/move:
    x-api-version: '2023-11-01'
    post:
      tags:
        - HybridRunbookWorker
      operationId: HybridRunbookWorkers_Move
      description: Move a hybrid worker to a different group.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: hybridRunbookWorkerGroupName
          in: path
          description: The hybrid runbook worker group name
          required: true
          schema:
            type: string
        - name: hybridRunbookWorkerId
          in: path
          description: The hybrid runbook worker id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The hybrid runbook worker move parameters
        required: true
        x-ms-requestBody-name: HybridRunbookWorkerMoveParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridRunbookWorkerMoveParameters'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}/hybridRunbookWorkers:
    x-api-version: '2023-11-01'
    get:
      tags:
        - HybridRunbookWorker
      operationId: HybridRunbookWorkers_ListByHybridRunbookWorkerGroup
      description: Retrieve a list of hybrid runbook workers.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: hybridRunbookWorkerGroupName
          in: path
          description: The hybrid runbook worker group name
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridRunbookWorkersListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/HybridRunbookWorker'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}:
    x-api-version: '2023-11-01'
    put:
      tags:
        - SourceControlSyncJob
      operationId: SourceControlSyncJob_Create
      description: Creates the sync job for a source control.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: sourceControlName
          in: path
          description: The source control name.
          required: true
          schema:
            type: string
        - name: sourceControlSyncJobId
          in: path
          description: The source control sync job id.
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create source control sync job operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceControlSyncJobCreateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlSyncJob'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - SourceControlSyncJob
      operationId: SourceControlSyncJob_Get
      description: Retrieve the source control sync job identified by job id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: sourceControlName
          in: path
          description: The source control name.
          required: true
          schema:
            type: string
        - name: sourceControlSyncJobId
          in: path
          description: The source control sync job id.
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlSyncJobById'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs:
    x-api-version: '2023-11-01'
    get:
      tags:
        - SourceControlSyncJob
      operationId: SourceControlSyncJob_ListByAutomationAccount
      description: Retrieve a list of source control sync jobs.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: sourceControlName
          in: path
          description: The source control name.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlSyncJobListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns/{softwareUpdateConfigurationRunId}:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Software Update Configuration Run
      description: Get a single software update configuration Run by Id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/softwareupdateconfigurationrunoperations
      operationId: SoftwareUpdateConfigurationRuns_GetById
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: softwareUpdateConfigurationRunId
          in: path
          description: The Id of the software update configuration run.
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: A single software update configuration Run.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/softwareUpdateConfigurationRun'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Software Update Configuration Run
      description: Return list of software update configuration runs
      externalDocs:
        url: http://aka.ms/azureautomationsdk/softwareupdateconfigurationoperations
      operationId: SoftwareUpdateConfigurationRuns_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. You can use the following filters: ''properties/osType'', ''properties/status'', ''properties/startTime'', and ''properties/softwareUpdateConfiguration/name'''
          required: false
          schema:
            type: string
        - name: $skip
          in: query
          description: Number of entries you skip before returning results
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: Maximum number of entries returned in the results collection
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Return list of software update configurations runs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/softwareUpdateConfigurationRunListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Automation/operations:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Operations
      description: Lists all of the available Automation REST API operations.
      operationId: Operations_List
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/convertGraphRunbookContent:
    x-api-version: '2023-11-01'
    post:
      tags:
        - Operations
      description: Post operation to serialize or deserialize GraphRunbookContent
      operationId: convertGraphRunbookContent
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: Input data describing the graphical runbook.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphicalRunbookContent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphicalRunbookContent'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{compilationJobName}:
    x-api-version: 2020-01-13-preview
    put:
      tags:
        - DscCompilationJob
      operationId: DscCompilationJob_Create
      x-ms-long-running-operation: true
      description: Creates the Dsc compilation job of the configuration.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscconfigurationcompilejoboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: compilationJobName
          in: path
          description: The DSC configuration Id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create compilation job operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DscCompilationJobCreateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscCompilationJob'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - DscCompilationJob
      operationId: DscCompilationJob_Get
      description: Retrieve the Dsc configuration compilation job identified by job id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dsccompilationjoboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: compilationJobName
          in: path
          description: The DSC configuration Id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscCompilationJob'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - DscCompilationJob
      operationId: DscCompilationJob_ListByAutomationAccount
      description: Retrieve a list of dsc compilation jobs.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/compilationjoboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscCompilationJobListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DscCompilationJob'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - DscCompilationJob
      operationId: DscCompilationJobStream_ListByJob
      description: Retrieve all the job streams for the compilation Job.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobstreamoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobId
          in: path
          description: The job id.
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStreamListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams/{jobStreamId}:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - DscCompilationJob
      operationId: DscCompilationJob_GetStream
      description: Retrieve the job stream identified by job stream id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobstreamoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: jobId
          in: path
          description: The job id.
          required: true
          schema:
            format: uuid
            type: string
        - name: jobStreamId
          in: path
          description: The job stream id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStream'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodeConfigurations/{nodeConfigurationName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - DscNodeConfiguration
      operationId: DscNodeConfiguration_Delete
      description: Delete the Dsc node configurations by node configuration.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodeconfigurations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: nodeConfigurationName
          in: path
          description: The Dsc node configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - DscNodeConfiguration
      operationId: DscNodeConfiguration_Get
      description: Retrieve the Dsc node configurations by node configuration.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodeconfigurations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: nodeConfigurationName
          in: path
          description: The Dsc node configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscNodeConfiguration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DscNodeConfiguration
      operationId: DscNodeConfiguration_CreateOrUpdate
      x-ms-long-running-operation: true
      description: Create the node configuration identified by node configuration name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodeconfigurations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: nodeConfigurationName
          in: path
          description: The Dsc node configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DscNodeConfigurationCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscNodeConfiguration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodeConfigurations:
    x-api-version: '2023-11-01'
    get:
      tags:
        - DscNodeConfiguration
      operationId: DscNodeConfiguration_ListByAutomationAccount
      description: Retrieve a list of dsc node configurations.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodeconfigurations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - name: $skip
          in: query
          description: The number of rows to skip.
          required: false
          schema:
            type: integer
        - name: $top
          in: query
          description: The number of rows to take.
          required: false
          schema:
            type: integer
        - name: $inlinecount
          in: query
          description: Return total rows.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscNodeConfigurationListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DscNodeConfiguration'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/powerShell72Modules/{moduleName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - Module
      operationId: PowerShell72Module_Delete
      description: Delete the module by name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ModuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Module
      operationId: PowerShell72Module_Get
      description: Retrieve the module identified by module name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ModuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Module
      operationId: PowerShell72Module_CreateOrUpdate
      description: Create or Update the module identified by module name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ModuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for module.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModuleCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Module
      operationId: PowerShell72Module_Update
      description: Update the module identified by module name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ModuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The update parameters for module.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModuleUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/powerShell72Modules:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Module
      operationId: PowerShell72Module_ListByAutomationAccount
      description: Retrieve a list of PowerShell72 modules.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - AgentRegistrationInformation
      operationId: AgentRegistrationInformation_Get
      description: Retrieve the automation agent registration information.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/agentregistrationoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentRegistration'
            text/plain:
              schema:
                $ref: '#/components/schemas/AgentRegistration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey:
    x-api-version: 2020-01-13-preview
    post:
      tags:
        - AgentRegistrationInformation
      operationId: AgentRegistrationInformation_RegenerateKey
      description: Regenerate a primary or secondary agent registration key
      externalDocs:
        url: http://aka.ms/azureautomationsdk/agentregistrationoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The name of the agent registration key to be regenerated
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentRegistrationRegenerateKeyParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentRegistration'
            text/plain:
              schema:
                $ref: '#/components/schemas/AgentRegistration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}:
    x-api-version: 2020-01-13-preview
    delete:
      tags:
        - DscNode
      operationId: DscNode_Delete
      description: Delete the dsc node identified by node id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: nodeId
          in: path
          description: The node id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - DscNode
      operationId: DscNode_Get
      description: Retrieve the dsc node identified by node id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: nodeId
          in: path
          description: The node id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscNode'
            text/plain:
              schema:
                $ref: '#/components/schemas/DscNode'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - DscNode
      operationId: DscNode_Update
      description: Update the dsc node.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: nodeId
          in: path
          description: Parameters supplied to the update dsc node.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: Parameters supplied to the update dsc node.
        required: true
        x-ms-requestBody-name: dscNodeUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DscNodeUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscNode'
            text/plain:
              schema:
                $ref: '#/components/schemas/DscNode'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - DscNode
      operationId: DscNode_ListByAutomationAccount
      description: Retrieve a list of dsc nodes.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - name: $skip
          in: query
          description: The number of rows to skip.
          required: false
          schema:
            type: integer
        - name: $top
          in: query
          description: The number of rows to take.
          required: false
          schema:
            type: integer
        - name: $inlinecount
          in: query
          description: Return total rows.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscNodeListResult'
            text/plain:
              schema:
                $ref: '#/components/schemas/DscNodeListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DscNode'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - NodeReports
      operationId: NodeReports_ListByNode
      description: Retrieve the Dsc node report list by node id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodereportoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: nodeId
          in: path
          description: The parameters supplied to the list operation.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscNodeReportListResult'
            text/plain:
              schema:
                $ref: '#/components/schemas/DscNodeReportListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DscNodeReport'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports/{reportId}:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - NodeReports
      operationId: NodeReports_Get
      description: Retrieve the Dsc node report data by node id and report id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodereportoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: nodeId
          in: path
          description: The Dsc node id.
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          description: The report id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscNodeReport'
            text/plain:
              schema:
                $ref: '#/components/schemas/DscNodeReport'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports/{reportId}/content:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - NodeReports
      operationId: NodeReports_GetContent
      description: Retrieve the Dsc node reports by node id and report id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/dscnodereportoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: nodeId
          in: path
          description: The Dsc node id.
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          description: The report id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Automation/deletedAutomationAccounts:
    x-api-version: '2022-01-31'
    get:
      tags:
        - DeletedAutomationAccounts
      operationId: deletedAutomationAccounts_ListBySubscription
      description: Retrieve deleted automation account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedAutomationAccountListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connectionTypes/{connectionTypeName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - ConnectionType
      operationId: ConnectionType_Delete
      description: Delete the connection type.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/connectiontypeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: connectionTypeName
          in: path
          description: The name of connection type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ConnectionType
      operationId: ConnectionType_Get
      description: Retrieve the connection type identified by connection type name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/connectiontypeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: connectionTypeName
          in: path
          description: The name of connection type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionType'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ConnectionType
      operationId: ConnectionType_CreateOrUpdate
      description: Create a connection type.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/connectiontypeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: connectionTypeName
          in: path
          description: The parameters supplied to the create or update connection type operation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create or update connection type operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionTypeCreateOrUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionType'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connectionTypes:
    x-api-version: '2023-11-01'
    get:
      tags:
        - ConnectionType
      operationId: ConnectionType_ListByAutomationAccount
      description: Retrieve a list of connection types.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/connectiontypeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionTypeListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/variables/{variableName}:
    x-api-version: '2023-11-01'
    put:
      tags:
        - Variable
      operationId: Variable_CreateOrUpdate
      description: Create a variable.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/variableoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: variableName
          in: path
          description: The variable name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create or update variable operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Variable
      operationId: Variable_Update
      description: Update a variable.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/variableoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: variableName
          in: path
          description: The variable name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the update variable operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Variable
      operationId: Variable_Delete
      description: Delete the variable.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/variableoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: variableName
          in: path
          description: The name of variable.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Variable
      operationId: Variable_Get
      description: Retrieve the variable identified by variable name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/variableoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: variableName
          in: path
          description: The name of variable.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/variables:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Variable
      operationId: Variable_ListByAutomationAccount
      description: Retrieve a list of variables.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/variableoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/linkedWorkspace:
    x-api-version: '2023-11-01'
    get:
      tags:
        - LinkedWorkspace
      operationId: LinkedWorkspace_Get
      description: Retrieve the linked workspace for the account id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/linkedworkspaceoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedWorkspace'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}:
    x-api-version: '2023-11-01'
    patch:
      tags:
        - AutomationAccount
      operationId: AutomationAccount_Update
      description: Update an automation account.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/automationaccountoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: Parameters supplied to the update automation account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationAccountUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationAccount'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - AutomationAccount
      operationId: AutomationAccount_CreateOrUpdate
      description: Create or update automation account.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/automationaccountoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: Parameters supplied to the create or update automation account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationAccountCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationAccount'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationAccount'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - AutomationAccount
      operationId: AutomationAccount_Delete
      description: Delete an automation account.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/automationaccountoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - AutomationAccount
      operationId: AutomationAccount_Get
      description: Get information about an Automation Account.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/automationaccountoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationAccount'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts:
    x-api-version: '2023-11-01'
    get:
      tags:
        - AutomationAccount
      operationId: AutomationAccount_ListByResourceGroup
      description: Retrieve a list of accounts within a given resource group.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/automationaccountoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationAccountListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Automation/automationAccounts:
    x-api-version: '2023-11-01'
    get:
      tags:
        - AutomationAccount
      summary: Lists the Automation Accounts within an Azure subscription.
      operationId: AutomationAccount_List
      description: Retrieve a list of accounts within a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationAccountListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/statistics:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Statistics
      operationId: Statistics_ListByAutomationAccount
      description: Retrieve the statistics for the account.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/statisticsoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/usages:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Usages
      operationId: Usages_ListByAutomationAccount
      description: Retrieve the usage for the account id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/usageoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/listKeys:
    x-api-version: '2023-11-01'
    post:
      tags:
        - ListKeys
      operationId: Keys_ListByAutomationAccount
      description: Retrieve the automation keys for an account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodecounts/{countType}:
    x-api-version: 2020-01-13-preview
    get:
      tags:
        - NodeCountInformation
      operationId: NodeCountInformation_Get
      description: Retrieve counts for Dsc Nodes.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/nodecounts
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/CountTypeParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeCounts'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - Python2Package
      operationId: Python2Package_Delete
      description: Delete the python 2 package by name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: packageName
          in: path
          description: The python package name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Python2Package
      operationId: Python2Package_Get
      description: Retrieve the python 2 package identified by package name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: packageName
          in: path
          description: The python package name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Python2Package
      operationId: Python2Package_CreateOrUpdate
      description: Create or Update the python 2 package identified by package name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: packageName
          in: path
          description: The name of python package.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for python package.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PythonPackageCreateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Python2Package
      operationId: Python2Package_Update
      description: Update the python 2 package identified by package name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: packageName
          in: path
          description: The name of python package.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The update parameters for python package.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PythonPackageUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Python2Package
      operationId: Python2Package_ListByAutomationAccount
      description: Retrieve a list of python 2 packages.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/modules/{moduleName}/activities/{activityName}:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Activity
      operationId: Activity_Get
      description: Retrieve the activity in the module identified by module name and activity name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/activityoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: moduleName
          in: path
          description: The name of module.
          required: true
          schema:
            type: string
        - name: activityName
          in: path
          description: The name of activity.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/modules/{moduleName}/activities:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Activity
      operationId: Activity_ListByModule
      description: Retrieve a list of activities in the module identified by module name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/activityoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: moduleName
          in: path
          description: The name of module.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/modules/{moduleName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - Module
      operationId: Module_Delete
      description: Delete the module by name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: moduleName
          in: path
          description: The module name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Module
      operationId: Module_Get
      description: Retrieve the module identified by module name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: moduleName
          in: path
          description: The module name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Module
      operationId: Module_CreateOrUpdate
      description: Create or Update the module identified by module name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: moduleName
          in: path
          description: The name of module.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for module.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModuleCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Module
      operationId: Module_Update
      description: Update the module identified by module name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: moduleName
          in: path
          description: The name of module.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The update parameters for module.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModuleUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/modules:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Module
      operationId: Module_ListByAutomationAccount
      description: Retrieve a list of modules.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/moduleoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/modules/{moduleName}/objectDataTypes/{typeName}/fields:
    x-api-version: '2023-11-01'
    get:
      tags:
        - ObjectDataTypes
      operationId: ObjectDataTypes_ListFieldsByModuleAndType
      description: Retrieve a list of fields of a given type identified by module name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/objectdatatypeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: moduleName
          in: path
          description: The name of module.
          required: true
          schema:
            type: string
        - name: typeName
          in: path
          description: The name of type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeFieldListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/objectDataTypes/{typeName}/fields:
    x-api-version: '2023-11-01'
    get:
      tags:
        - ObjectDataTypes
      operationId: ObjectDataTypes_ListFieldsByType
      description: Retrieve a list of fields of a given type across all accessible modules.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/objectdatatypeoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: typeName
          in: path
          description: The name of type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeFieldListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/modules/{moduleName}/types/{typeName}/fields:
    x-api-version: '2023-11-01'
    get:
      tags:
        - TypeFields
      operationId: Fields_ListByType
      description: Retrieve a list of fields of a given type identified by module name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/typefieldoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: moduleName
          in: path
          description: The name of module.
          required: true
          schema:
            type: string
        - name: typeName
          in: path
          description: The name of type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeFieldListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/content:
    x-api-version: '2023-11-01'
    get:
      tags:
        - RunbookDraft
      operationId: RunbookDraft_GetContent
      description: Retrieve the content of runbook draft identified by runbook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookdraftoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            text/powershell:
              schema:
                type: file
        default:
          description: Automation error response describing why the operation failed.
          content:
            text/powershell:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - RunbookDraft
      operationId: RunbookDraft_ReplaceContent
      description: Replaces the runbook draft content.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookdraftoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The runbook draft content.
        required: true
        x-ms-requestBody-name: runbookContent
        content:
          text/powershell:
            schema:
              type: object
              format: file
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: file
        '202':
          description: Accepted and  the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft:
    x-api-version: '2023-11-01'
    get:
      tags:
        - RunbookDraft
      operationId: RunbookDraft_Get
      description: Retrieve the runbook draft identified by runbook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookdraftoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunbookDraft'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/publish:
    x-api-version: '2023-11-01'
    post:
      tags:
        - Runbook
      operationId: Runbook_Publish
      description: Publish runbook draft.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookdraftoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The parameters supplied to the publish runbook operation.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: Accepted and  the operation will complete asynchronously.
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/undoEdit:
    x-api-version: '2023-11-01'
    post:
      tags:
        - RunbookDraft
      operationId: RunbookDraft_UndoEdit
      description: Undo draft edit to last known published state identified by runbook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookdraftoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunbookDraftUndoEditResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/content:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Runbook
      operationId: Runbook_GetContent
      description: Retrieve the content of runbook identified by runbook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            text/powershell:
              schema:
                type: file
        default:
          description: Automation error response describing why the operation failed.
          content:
            text/powershell:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Runbook
      operationId: Runbook_Get
      description: Retrieve the runbook identified by runbook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runbook'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Runbook
      operationId: Runbook_CreateOrUpdate
      description: Create the runbook identified by runbook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for runbook. Provide either content link for a published runbook or draft, not both.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunbookCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runbook'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runbook'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Runbook
      operationId: Runbook_Update
      description: Update the runbook identified by runbook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The update parameters for runbook.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunbookUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runbook'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Runbook
      operationId: Runbook_Delete
      description: Delete the runbook by name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Runbook
      operationId: Runbook_ListByAutomationAccount
      description: Retrieve a list of runbooks.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/runbookoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunbookListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/testJob/streams/{jobStreamId}:
    x-api-version: '2023-11-01'
    get:
      tags:
        - TestJobStream
      operationId: TestJobStreams_Get
      description: Retrieve a test job stream of the test job identified by runbook name and stream id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobstreamoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - name: jobStreamId
          in: path
          description: The job stream id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStream'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/testJob/streams:
    x-api-version: '2023-11-01'
    get:
      tags:
        - TestJobStream
      operationId: TestJobStreams_ListByTestJob
      description: Retrieve a list of test job streams identified by runbook name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/jobstreamoperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStreamListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/testJob:
    x-api-version: '2023-11-01'
    put:
      tags:
        - TestJob
      operationId: TestJob_Create
      description: Create a test job of the runbook.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/testjoboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The parameters supplied to the create test job operation.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create test job operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestJobCreateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestJob'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - TestJob
      operationId: TestJob_Get
      description: Retrieve the test job for the specified runbook.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/testjoboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestJob'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/testJob/resume:
    x-api-version: '2023-11-01'
    post:
      tags:
        - TestJob
      operationId: TestJob_Resume
      description: Resume the test job.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/testjoboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/testJob/stop:
    x-api-version: '2023-11-01'
    post:
      tags:
        - TestJob
      operationId: TestJob_Stop
      description: Stop the test job.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/testjoboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/draft/testJob/suspend:
    x-api-version: '2023-11-01'
    post:
      tags:
        - TestJob
      operationId: TestJob_Suspend
      description: Suspend the test job.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/testjoboperations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: runbookName
          in: path
          description: The runbook name.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z-_0-9]*$
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/credentials/{credentialName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - Credential
      operationId: Credential_Delete
      description: Delete the credential.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/credentialoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: credentialName
          in: path
          description: The name of credential.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Credential
      operationId: Credential_Get
      description: Retrieve the credential identified by credential name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/credentialoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: credentialName
          in: path
          description: The name of credential.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Credential
      operationId: Credential_CreateOrUpdate
      description: Create a credential.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/credentialoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: credentialName
          in: path
          description: The parameters supplied to the create or update credential operation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the create or update credential operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Credential
      operationId: Credential_Update
      description: Update a credential.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/credentialoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: credentialName
          in: path
          description: The parameters supplied to the Update credential operation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The parameters supplied to the Update credential operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/credentials:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Credential
      operationId: Credential_ListByAutomationAccount
      description: Retrieve a list of credentials.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/credentialoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationMachineRuns/{softwareUpdateConfigurationMachineRunId}:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Software Update Configuration Machine Run
      description: Get a single software update configuration machine run by Id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/softwareupdateconfigurationoperations
      operationId: SoftwareUpdateConfigurationMachineRuns_GetById
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: softwareUpdateConfigurationMachineRunId
          in: path
          description: The Id of the software update configuration machine run.
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
      responses:
        '200':
          description: A single software update configuration machine run.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/softwareUpdateConfigurationMachineRun'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationMachineRuns:
    x-api-version: '2023-11-01'
    get:
      tags:
        - Software Update Configuration Machine Run
      description: Return list of software update configuration machine runs
      externalDocs:
        url: http://aka.ms/azureautomationsdk/softwareupdateconfigurationoperations
      operationId: SoftwareUpdateConfigurationMachineRuns_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/clientRequestId'
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. You can use the following filters: ''properties/osType'', ''properties/status'', ''properties/startTime'', and ''properties/softwareUpdateConfiguration/name'''
          required: false
          schema:
            type: string
        - name: $skip
          in: query
          description: number of entries you skip before returning results
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: Maximum number of entries returned in the results collection
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Return list of software update configuration machine runs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/softwareUpdateConfigurationMachineRunListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}/streams:
    x-api-version: '2023-11-01'
    get:
      tags:
        - SourceControlSyncJobStreams
      operationId: SourceControlSyncJobStreams_ListBySyncJob
      description: Retrieve a list of sync job streams identified by sync job id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: sourceControlName
          in: path
          description: The source control name.
          required: true
          schema:
            type: string
        - name: sourceControlSyncJobId
          in: path
          description: The source control sync job id.
          required: true
          schema:
            format: uuid
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlSyncJobStreamsListBySyncJob'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}/streams/{streamId}:
    x-api-version: '2023-11-01'
    get:
      tags:
        - SourceControlSyncJobStreams
      operationId: SourceControlSyncJobStreams_Get
      description: Retrieve a sync job stream identified by stream id.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: sourceControlName
          in: path
          description: The source control name.
          required: true
          schema:
            type: string
        - name: sourceControlSyncJobId
          in: path
          description: The source control sync job id.
          required: true
          schema:
            format: uuid
            type: string
        - name: streamId
          in: path
          description: The id of the sync job stream.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlSyncJobStreamById'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/configurations/{configurationName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - DscConfiguration
      operationId: DscConfiguration_Delete
      description: Delete the dsc configuration identified by configuration name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/configurationoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: configurationName
          in: path
          description: The configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - DscConfiguration
      operationId: DscConfiguration_Get
      description: Retrieve the configuration identified by configuration name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/configurationoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: configurationName
          in: path
          description: The configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscConfiguration'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DscConfiguration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DscConfiguration
      operationId: DscConfiguration_CreateOrUpdate
      description: Create the configuration identified by configuration name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/configurationoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: configurationName
          in: path
          description: The create or update parameters for configuration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DscConfigurationCreateOrUpdateParameters'
          text/plain; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DscConfigurationCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscConfiguration'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DscConfiguration'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscConfiguration'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DscConfiguration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - DscConfiguration
      operationId: DscConfiguration_Update
      description: Create the configuration identified by configuration name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/configurationoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: configurationName
          in: path
          description: The create or update parameters for configuration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for configuration.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DscConfigurationUpdateParameters'
          text/plain; charset=utf-8:
            schema:
              $ref: '#/components/schemas/DscConfigurationUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscConfiguration'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DscConfiguration'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/configurations/{configurationName}/content:
    x-api-version: '2023-11-01'
    get:
      tags:
        - DscConfiguration
      operationId: DscConfiguration_GetContent
      description: Retrieve the configuration script identified by configuration name.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/configurationoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: configurationName
          in: path
          description: The configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            text/powershell:
              schema:
                type: file
        default:
          description: Automation error response describing why the operation failed.
          content:
            text/powershell:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/configurations:
    x-api-version: '2023-11-01'
    get:
      tags:
        - DscConfiguration
      operationId: DscConfiguration_ListByAutomationAccount
      description: Retrieve a list of configurations.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/configurationoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - name: $skip
          in: query
          description: The number of rows to skip.
          required: false
          schema:
            type: integer
        - name: $top
          in: query
          description: The number of rows to take.
          required: false
          schema:
            type: integer
        - name: $inlinecount
          in: query
          description: Return total rows.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscConfigurationListResult'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DscConfigurationListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DscConfiguration'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}:
    x-api-version: '2023-11-01'
    delete:
      tags:
        - ListAllHybridRunbookWorkerGroupInAutomationAccount
      operationId: HybridRunbookWorkerGroup_Delete
      description: Delete a hybrid runbook worker group.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkergroupoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: hybridRunbookWorkerGroupName
          in: path
          description: The hybrid runbook worker group name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - HybridRunbookWorkerGroup
      operationId: HybridRunbookWorkerGroup_Get
      description: Retrieve a hybrid runbook worker group.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkergroupoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: hybridRunbookWorkerGroupName
          in: path
          description: The hybrid runbook worker group name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridRunbookWorkerGroup'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - HybridRunbookWorkerGroup
      operationId: HybridRunbookWorkerGroup_Create
      description: Create a hybrid runbook worker group.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkergroupoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: hybridRunbookWorkerGroupName
          in: path
          description: The hybrid runbook worker group name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The create or update parameters for hybrid runbook worker group.
        required: true
        x-ms-requestBody-name: HybridRunbookWorkerGroupCreationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridRunbookWorkerGroupCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridRunbookWorkerGroup'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridRunbookWorkerGroup'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - HybridRunbookWorkerGroup
      operationId: HybridRunbookWorkerGroup_Update
      description: Update a hybrid runbook worker group.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkergroupoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: hybridRunbookWorkerGroupName
          in: path
          description: The hybrid runbook worker group name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      requestBody:
        description: The hybrid runbook worker group
        required: true
        x-ms-requestBody-name: HybridRunbookWorkerGroupUpdationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridRunbookWorkerGroupCreateOrUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridRunbookWorkerGroup'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups:
    x-api-version: '2023-11-01'
    get:
      tags:
        - HybridRunbookWorkerGroup
      operationId: HybridRunbookWorkerGroup_ListByAutomationAccount
      description: Retrieve a list of hybrid runbook worker groups.
      externalDocs:
        url: http://aka.ms/azureautomationsdk/hybridrunbookworkergroupoperations
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutomationAccountNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridRunbookWorkerGroupsListResult'
        default:
          description: Automation error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/HybridRunbookWorkerGroup'
