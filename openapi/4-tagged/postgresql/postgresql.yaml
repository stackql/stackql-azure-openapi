openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  version: '2021-06-01'
  title: PostgreSQLManagementClient
  description: The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    PrivateDnsZoneSuffix:
      type: string
      description: Represents a resource name availability.
    CloudError:
      x-ms-external: true
      properties:
        error:
          title: Error Response
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
          type: object
          properties:
            code:
              readOnly: true
              type: string
              description: The error code.
            message:
              readOnly: true
              type: string
              description: The error message.
            target:
              readOnly: true
              type: string
              description: The error target.
            details:
              readOnly: true
              type: array
              items:
                $ref: '#/components/schemas/CloudError/properties/error'
              x-ms-identifiers:
                - message
                - target
              description: The error details.
            additionalInfo:
              readOnly: true
              type: array
              items:
                type: object
                properties:
                  type:
                    readOnly: true
                    type: string
                    description: The additional info type.
                  info:
                    readOnly: true
                    type: object
                    description: The additional info.
                description: The resource management error additional info.
              x-ms-identifiers: []
              description: The error additional info.
      description: An error response from the Batch service.
    DatabaseProperties:
      properties:
        charset:
          type: string
          description: The charset of the database.
        collation:
          type: string
          description: The collation of the database.
      description: The properties of a database.
    Database:
      properties:
        properties:
          $ref: '#/components/schemas/DatabaseProperties'
          x-ms-client-flatten: true
          description: The properties of a database.
        systemData:
          readOnly: true
          description: The system metadata relating to this resource.
          type: object
          properties:
            createdBy:
              type: string
              description: The identity that created the resource.
            createdByType:
              type: string
              description: The type of identity that created the resource.
              enum:
                - User
                - Application
                - ManagedIdentity
                - Key
              x-ms-enum:
                name: createdByType
                modelAsString: true
            createdAt:
              type: string
              format: date-time
              description: The timestamp of resource creation (UTC).
            lastModifiedBy:
              type: string
              description: The identity that last modified the resource.
            lastModifiedByType:
              type: string
              description: The type of identity that last modified the resource.
              enum:
                - User
                - Application
                - ManagedIdentity
                - Key
              x-ms-enum:
                name: createdByType
                modelAsString: true
            lastModifiedAt:
              type: string
              format: date-time
              description: The timestamp of resource last modification (UTC)
      allOf:
        - title: Proxy Resource
          description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
          type: object
          allOf:
            - title: Resource
              description: Common fields that are returned in the response for all Azure Resource Manager resources
              type: object
              properties:
                id:
                  readOnly: true
                  type: string
                  description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                name:
                  readOnly: true
                  type: string
                  description: The name of the resource
                type:
                  readOnly: true
                  type: string
                  description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
              x-ms-azure-resource: true
      description: Represents a Database.
    DatabaseListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Database'
          description: The list of databases housed in a server
        nextLink:
          description: The link used to get the next page of databases.
          type: string
      description: A List of databases.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      properties:
        name:
          type: string
          description: The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
        tier:
          type: string
          description: The tier of the particular SKU, e.g. Burstable.
          enum:
            - Burstable
            - GeneralPurpose
            - MemoryOptimized
          x-ms-enum:
            name: SkuTier
            modelAsString: true
      required:
        - name
        - tier
      description: Sku information related properties of a server.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the operation being performed on this particular object.
        display:
          $ref: '#/components/schemas/OperationDisplay'
          readOnly: true
          description: The localized display information for this particular operation or action.
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        origin:
          type: string
          readOnly: true
          description: The intended executor of the operation.
          enum:
            - NotSpecified
            - user
            - system
          x-ms-enum:
            name: OperationOrigin
            modelAsString: true
        properties:
          type: object
          additionalProperties:
            type: object
          readOnly: true
          x-ms-client-flatten: false
          description: Additional descriptions for the operation.
      description: REST API operation definition.
    OperationListResult:
      description: A list of resource provider operations.
      type: object
      properties:
        value:
          description: Collection of available operation details
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    VirtualNetworkSubnetUsageParameter:
      type: object
      properties:
        virtualNetworkArmResourceId:
          type: string
          description: Virtual network resource id.
      description: Virtual network subnet usage parameter
    VirtualNetworkSubnetUsageResult:
      type: object
      properties:
        location:
          type: string
          description: The location the resource resides in.
          readOnly: true
        subscriptionId:
          type: string
          description: The subscription ID.
          readOnly: true
        delegatedSubnetsUsage:
          type: array
          items:
            $ref: '#/components/schemas/DelegatedSubnetUsage'
          x-ms-identifiers:
            - subnetName
          readOnly: true
      description: Virtual network subnet usage data.
    DelegatedSubnetUsage:
      type: object
      properties:
        subnetName:
          type: string
          readOnly: true
          description: name of the subnet
        usage:
          type: integer
          format: int64
          readOnly: true
          description: Number of used delegated subnets
      description: Delegated subnet usage data.
    StorageMBCapability:
      type: object
      properties:
        name:
          type: string
          description: storage MB name
          readOnly: true
        supportedIops:
          type: integer
          format: int64
          description: supported IOPS
          readOnly: true
        storageSizeMB:
          type: integer
          format: int64
          description: storage size in MB
          readOnly: true
        status:
          type: string
          description: The status
          readOnly: true
      description: storage size in MB capability
    VcoreCapability:
      type: object
      properties:
        name:
          type: string
          description: vCore name
          readOnly: true
        vCores:
          type: integer
          format: int64
          description: supported vCores
          readOnly: true
        supportedIops:
          type: integer
          format: int64
          description: supported IOPS
          readOnly: true
        supportedMemoryPerVcoreMB:
          type: integer
          format: int64
          description: supported memory per vCore in MB
          readOnly: true
        status:
          type: string
          description: The status
          readOnly: true
      description: Vcores capability
    ServerVersionCapability:
      type: object
      properties:
        name:
          type: string
          description: server version
          readOnly: true
        supportedVcores:
          type: array
          items:
            $ref: '#/components/schemas/VcoreCapability'
          x-ms-identifiers:
            - name
          readOnly: true
        status:
          type: string
          description: The status
          readOnly: true
      description: Server version capabilities.
    StorageEditionCapability:
      properties:
        name:
          type: string
          description: storage edition name
          readOnly: true
        supportedStorageMB:
          type: array
          items:
            $ref: '#/components/schemas/StorageMBCapability'
          x-ms-identifiers:
            - name
          readOnly: true
        status:
          type: string
          description: The status
          readOnly: true
      description: storage edition capability
    NodeTypeCapability:
      type: object
      properties:
        name:
          type: string
          description: note type name
          readOnly: true
        nodeType:
          type: string
          description: note type
          readOnly: true
        status:
          type: string
          description: The status
          readOnly: true
      description: node type capability
    FlexibleServerEditionCapability:
      type: object
      properties:
        name:
          type: string
          description: Server edition name
          readOnly: true
        supportedStorageEditions:
          type: array
          items:
            $ref: '#/components/schemas/StorageEditionCapability'
          x-ms-identifiers:
            - name
          description: The list of editions supported by this server edition.
          readOnly: true
        supportedServerVersions:
          type: array
          items:
            $ref: '#/components/schemas/ServerVersionCapability'
          x-ms-identifiers:
            - name
          description: The list of server versions supported by this server edition.
          readOnly: true
        status:
          type: string
          description: The status
          readOnly: true
      description: Flexible server edition capabilities.
    HyperscaleNodeEditionCapability:
      type: object
      properties:
        name:
          type: string
          description: Server edition name
          readOnly: true
        supportedStorageEditions:
          type: array
          items:
            $ref: '#/components/schemas/StorageEditionCapability'
          x-ms-identifiers:
            - name
          description: The list of editions supported by this server edition.
          readOnly: true
        supportedServerVersions:
          type: array
          items:
            $ref: '#/components/schemas/ServerVersionCapability'
          x-ms-identifiers:
            - name
          description: The list of server versions supported by this server edition.
          readOnly: true
        supportedNodeTypes:
          type: array
          items:
            $ref: '#/components/schemas/NodeTypeCapability'
          x-ms-identifiers:
            - name
          description: The list of Node Types supported by this server edition.
          readOnly: true
        status:
          type: string
          description: The status
          readOnly: true
      description: Hyperscale node edition capabilities.
    CapabilityProperties:
      properties:
        zone:
          type: string
          description: zone name
          readOnly: true
        geoBackupSupported:
          type: boolean
          description: A value indicating whether a new server in this region can have geo-backups to paired region.
          readOnly: true
        zoneRedundantHaSupported:
          type: boolean
          description: A value indicating whether a new server in this region can support multi zone HA.
          readOnly: true
        zoneRedundantHaAndGeoBackupSupported:
          type: boolean
          description: A value indicating whether a new server in this region can have geo-backups to paired region.
          readOnly: true
        supportedFlexibleServerEditions:
          type: array
          items:
            $ref: '#/components/schemas/FlexibleServerEditionCapability'
          x-ms-identifiers:
            - name
          readOnly: true
        supportedHyperscaleNodeEditions:
          type: array
          items:
            $ref: '#/components/schemas/HyperscaleNodeEditionCapability'
          x-ms-identifiers:
            - name
          readOnly: true
        supportedHAMode:
          type: array
          items:
            type: string
          description: Supported high availability mode
          readOnly: true
        status:
          type: string
          description: The status
          readOnly: true
      description: Location capabilities.
    CapabilitiesListResult:
      type: object
      properties:
        value:
          description: A list of supported capabilities.
          type: array
          items:
            $ref: '#/components/schemas/CapabilityProperties'
          x-ms-identifiers:
            - zone
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
      description: location capability
    ServerVersion:
      type: string
      description: The version of a server.
      enum:
        - '14'
        - '13'
        - '12'
        - '11'
      x-ms-enum:
        name: ServerVersion
        modelAsString: true
    ServerProperties:
      properties:
        administratorLogin:
          type: string
          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
          x-ms-mutability:
            - create
            - read
        administratorLoginPassword:
          type: string
          description: The administrator login password (required for server creation).
          x-ms-secret: true
          format: password
          x-ms-mutability:
            - create
            - update
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: PostgreSQL Server version.
        minorVersion:
          type: string
          description: The minor version of the server.
          readOnly: true
        state:
          type: string
          description: A state of a server that is visible to user.
          readOnly: true
          enum:
            - Ready
            - Dropping
            - Disabled
            - Starting
            - Stopping
            - Stopped
            - Updating
          x-ms-enum:
            name: ServerState
            modelAsString: true
        fullyQualifiedDomainName:
          type: string
          description: The fully qualified domain name of a server.
          readOnly: true
        storage:
          $ref: '#/components/schemas/Storage'
          default: null
          description: Storage properties of a server.
        backup:
          $ref: '#/components/schemas/Backup'
          default: null
          description: Backup properties of a server.
        network:
          $ref: '#/components/schemas/Network'
          default: null
          description: Network properties of a server.
          x-ms-mutability:
            - create
            - read
        highAvailability:
          $ref: '#/components/schemas/HighAvailability'
          default: null
          description: High availability properties of a server.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          default: null
          description: Maintenance window properties of a server.
          x-ms-mutability:
            - update
            - read
        sourceServerResourceId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.DBforPostgreSQL/flexibleServers
          description: The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore'.
          x-ms-mutability:
            - create
        pointInTimeUTC:
          type: string
          format: date-time
          description: Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore'.
          x-ms-mutability:
            - create
        availabilityZone:
          type: string
          default: ''
          description: availability zone information of the server.
          x-ms-mutability:
            - create
            - read
        createMode:
          type: string
          description: The mode to create a new PostgreSQL server.
          enum:
            - Default
            - Create
            - Update
            - PointInTimeRestore
          x-ms-enum:
            name: CreateMode
            modelAsString: true
          x-ms-mutability:
            - create
            - update
      description: The properties of a server.
    Server:
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        properties:
          $ref: '#/components/schemas/ServerProperties'
          x-ms-client-flatten: true
          description: Properties of the server.
        systemData:
          readOnly: true
          description: The system metadata relating to this resource.
          type: object
          properties:
            createdBy:
              type: string
              description: The identity that created the resource.
            createdByType:
              type: string
              description: The type of identity that created the resource.
              enum:
                - User
                - Application
                - ManagedIdentity
                - Key
              x-ms-enum:
                name: createdByType
                modelAsString: true
            createdAt:
              type: string
              format: date-time
              description: The timestamp of resource creation (UTC).
            lastModifiedBy:
              type: string
              description: The identity that last modified the resource.
            lastModifiedByType:
              type: string
              description: The type of identity that last modified the resource.
              enum:
                - User
                - Application
                - ManagedIdentity
                - Key
              x-ms-enum:
                name: createdByType
                modelAsString: true
            lastModifiedAt:
              type: string
              format: date-time
              description: The timestamp of resource last modification (UTC)
      allOf:
        - title: Tracked Resource
          description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
          type: object
          properties:
            tags:
              type: object
              additionalProperties:
                type: string
              x-ms-mutability:
                - read
                - create
                - update
              description: Resource tags.
            location:
              type: string
              x-ms-mutability:
                - read
                - create
              description: The geo-location where the resource lives
          required:
            - location
          allOf:
            - title: Resource
              description: Common fields that are returned in the response for all Azure Resource Manager resources
              type: object
              properties:
                id:
                  readOnly: true
                  type: string
                  description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                name:
                  readOnly: true
                  type: string
                  description: The name of the resource
                type:
                  readOnly: true
                  type: string
                  description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
              x-ms-azure-resource: true
      description: Represents a server.
    ServerPropertiesForUpdate:
      properties:
        administratorLoginPassword:
          type: string
          x-ms-secret: true
          format: password
          description: The password of the administrator login.
          x-ms-mutability:
            - update
        storage:
          $ref: '#/components/schemas/Storage'
          default: null
          description: Storage properties of a server.
        backup:
          $ref: '#/components/schemas/Backup'
          default: null
          description: Backup properties of a server.
        highAvailability:
          $ref: '#/components/schemas/HighAvailability'
          default: null
          description: High availability properties of a server.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          default: null
          description: Maintenance window properties of a server.
          x-ms-mutability:
            - update
            - read
        createMode:
          type: string
          description: The mode to update a new PostgreSQL server.
          enum:
            - Default
            - Update
          x-ms-enum:
            name: CreateModeForUpdate
            modelAsString: true
          x-ms-mutability:
            - update
    ServerForUpdate:
      properties:
        location:
          type: string
          description: The location the resource resides in.
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        properties:
          $ref: '#/components/schemas/ServerPropertiesForUpdate'
          x-ms-client-flatten: true
          description: Properties of the server.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
      description: Represents a server to be updated.
    ServerListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Server'
          description: The list of flexible servers
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of servers.
    Storage:
      properties:
        storageSizeGB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
      description: Storage properties of a server
    Backup:
      properties:
        backupRetentionDays:
          type: integer
          format: int32
          default: 7
          description: Backup retention days for the server.
        geoRedundantBackup:
          type: string
          default: Disabled
          description: A value indicating whether Geo-Redundant backup is enabled on the server.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: GeoRedundantBackupEnum
            modelAsString: true
          x-ms-mutability:
            - create
            - read
        earliestRestoreDate:
          type: string
          format: date-time
          description: The earliest restore point time (ISO8601 format) for server.
          readOnly: true
      description: Backup properties of a server
    Network:
      properties:
        publicNetworkAccess:
          type: string
          description: public network access is enabled or not
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ServerPublicNetworkAccessState
            modelAsString: true
          readOnly: true
        delegatedSubnetResourceId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/virtualNetworks/subnets
          default: ''
          description: delegated subnet arm resource id.
          x-ms-mutability:
            - create
            - read
        privateDnsZoneArmResourceId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/privateDnsZones
          default: ''
          description: private dns zone arm resource id.
          x-ms-mutability:
            - create
            - read
      description: Network properties of a server
    HighAvailability:
      properties:
        mode:
          type: string
          default: Disabled
          description: The HA mode for the server.
          enum:
            - Disabled
            - ZoneRedundant
          x-ms-enum:
            name: HighAvailabilityMode
            modelAsString: true
        state:
          type: string
          description: A state of a HA server that is visible to user.
          enum:
            - NotEnabled
            - CreatingStandby
            - ReplicatingData
            - FailingOver
            - Healthy
            - RemovingStandby
          x-ms-enum:
            name: ServerHAState
            modelAsString: true
          readOnly: true
        standbyAvailabilityZone:
          type: string
          default: ''
          description: availability zone information of the standby.
      description: High availability properties of a server
    MaintenanceWindow:
      type: object
      description: Maintenance window properties of a server.
      properties:
        customWindow:
          type: string
          default: Disabled
          description: indicates whether custom window is enabled or disabled
        startHour:
          type: integer
          format: int32
          default: 0
          description: start hour for maintenance window
        startMinute:
          type: integer
          format: int32
          default: 0
          description: start minute for maintenance window
        dayOfWeek:
          type: integer
          format: int32
          default: 0
          description: day of week for maintenance window
    FirewallRuleProperties:
      properties:
        startIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The start IP address of the server firewall rule. Must be IPv4 format.
        endIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The end IP address of the server firewall rule. Must be IPv4 format.
      required:
        - startIpAddress
        - endIpAddress
      description: The properties of a server firewall rule.
    FirewallRule:
      properties:
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
          x-ms-client-flatten: true
          description: The properties of a firewall rule.
        systemData:
          $ref: '#/components/schemas/Server/properties/systemData'
          readOnly: true
          description: The system metadata relating to this resource.
      allOf:
        - title: Proxy Resource
          description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
          type: object
          allOf:
            - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/responses/200/content/application~1json/schema/properties/value/items/allOf/0/allOf/0'
      required:
        - properties
      description: Represents a server firewall rule.
    FirewallRuleListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The list of firewall rules in a server.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of firewall rules.
    ConfigurationProperties:
      properties:
        value:
          type: string
          description: Value of the configuration.
        description:
          type: string
          readOnly: true
          description: Description of the configuration.
        defaultValue:
          type: string
          readOnly: true
          description: Default value of the configuration.
        dataType:
          type: string
          readOnly: true
          description: Data type of the configuration.
          enum:
            - Boolean
            - Numeric
            - Integer
            - Enumeration
          x-ms-enum:
            name: ConfigurationDataType
            modelAsString: true
        allowedValues:
          type: string
          readOnly: true
          description: Allowed values of the configuration.
        source:
          type: string
          description: Source of the configuration.
        isDynamicConfig:
          type: boolean
          readOnly: true
          description: Configuration dynamic or static.
        isReadOnly:
          type: boolean
          readOnly: true
          description: Configuration read-only or not.
        isConfigPendingRestart:
          type: boolean
          readOnly: true
          description: Configuration is pending restart or not.
        unit:
          type: string
          readOnly: true
          description: Configuration unit.
        documentationLink:
          type: string
          readOnly: true
          description: Configuration documentation link.
      description: The properties of a configuration.
    Configuration:
      properties:
        properties:
          $ref: '#/components/schemas/ConfigurationProperties'
          x-ms-client-flatten: true
          description: The properties of a configuration.
        systemData:
          $ref: '#/components/schemas/Server/properties/systemData'
          readOnly: true
          description: The system metadata relating to this resource.
      allOf:
        - $ref: '#/components/schemas/FirewallRule/allOf/0'
      description: Represents a Configuration.
    ConfigurationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Configuration'
          description: The list of server configurations.
        nextLink:
          description: The link used to get the next page of operations.
          type: string
      description: A list of server configurations.
    OperationDisplay:
      properties:
        provider:
          type: string
          readOnly: true
          description: Operation resource provider name.
        resource:
          type: string
          readOnly: true
          description: Resource on which the operation is performed.
        operation:
          type: string
          readOnly: true
          description: Localized friendly name for the operation.
        description:
          type: string
          readOnly: true
          description: Operation description.
      description: Display metadata associated with the operation.
    NameAvailabilityRequest:
      required:
        - name
      properties:
        name:
          type: string
          description: Resource name to verify.
        type:
          type: string
          description: Resource type used for verification.
      description: Request from client to check resource name availability.
    NameAvailability:
      properties:
        message:
          type: string
          description: Error Message.
          readOnly: true
        nameAvailable:
          type: boolean
          description: Indicates whether the resource name is available.
          readOnly: true
        name:
          type: string
          description: name of the PostgreSQL server.
          readOnly: true
        type:
          type: string
          description: type of the server
          readOnly: true
        reason:
          type: string
          description: The name availability reason.
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: Reason
            modelAsString: true
          readOnly: true
      description: Represents a resource name availability.
    RestartParameter:
      type: object
      properties:
        restartWithFailover:
          type: boolean
          description: Indicates whether to restart the server with failover.
        failoverMode:
          type: string
          description: Failover mode.
          enum:
            - PlannedFailover
            - ForcedFailover
            - PlannedSwitchover
            - ForcedSwitchover
          x-ms-enum:
            name: FailoverMode
            modelAsString: true
      description: Represents server restart parameters.
  parameters:
    ServerNameParameter:
      name: serverName
      in: path
      description: The name of the server.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DatabaseNameParameter:
      name: databaseName
      in: path
      description: The name of the database.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationNameParameter:
      name: locationName
      in: path
      description: The name of the location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FirewallRuleNameParameter:
      name: firewallRuleName
      in: path
      description: The name of the server firewall rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: The name of the server configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    MaintenanceWindowNameParameter:
      name: maintenanceWindowName
      in: path
      description: The name of the maintenance window.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
paths:
  /providers/Microsoft.DBforPostgreSQL/getPrivateDnsZoneSuffix:
    post:
      tags:
        - GetPrivateDnsZoneSuffix
      operationId: GetPrivateDnsZoneSuffix_Execute
      description: Get private DNS zone suffix in the cloud
      parameters:
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDnsZoneSuffix'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: get_private_dns_zone_suffix
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases/{databaseName}:
    put:
      tags:
        - Databases
      operationId: Databases_Create
      description: Creates a new database or updates an existing database.
      parameters:
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1%7BserverName%7D~1databases/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1%7BserverName%7D~1databases/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1%7BserverName%7D~1databases/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      requestBody:
        description: The required parameters for creating or updating a database.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: databases
      x-stackQL-verb: insert
    delete:
      tags:
        - Databases
      operationId: Databases_Delete
      description: Deletes a database.
      parameters:
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1%7BserverName%7D~1databases/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1%7BserverName%7D~1databases/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1%7BserverName%7D~1databases/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: databases
      x-stackQL-verb: delete
    get:
      tags:
        - Databases
      operationId: Databases_Get
      description: Gets information about a database.
      parameters:
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1%7BserverName%7D~1databases/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1%7BserverName%7D~1databases/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers~1%7BserverName%7D~1databases/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: databases
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases:
    get:
      tags:
        - Databases
      operationId: Databases_ListByServer
      description: List all the databases in a given server.
      parameters:
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
        - name: subscriptionId
          in: path
          description: The ID of the target subscription.
          required: true
          schema:
            minLength: 1
            type: string
        - name: resourceGroupName
          in: path
          description: The name of the resource group. The name is case insensitive.
          required: true
          x-ms-parameter-location: method
          schema:
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: databases
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}:
    put:
      tags:
        - Servers
      operationId: Servers_Create
      description: Creates a new server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for creating or updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: insert
    patch:
      tags:
        - Servers
      operationId: Servers_Update
      description: Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerForUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: exec
    delete:
      tags:
        - Servers
      operationId: Servers_Delete
      description: Deletes a server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: delete
    get:
      tags:
        - Servers
      operationId: Servers_Get
      description: Gets information about a server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: servers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers:
    get:
      tags:
        - Servers
      operationId: Servers_ListByResourceGroup
      description: List all the servers in a given resource group.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - name: resourceGroupName
          in: path
          description: The name of the resource group. The name is case insensitive.
          required: true
          x-ms-parameter-location: method
          schema:
            minLength: 1
            maxLength: 90
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: servers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/flexibleServers:
    get:
      tags:
        - Servers
      operationId: Servers_List
      description: List all the servers in a given subscription.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - name: subscriptionId
          in: path
          description: The ID of the target subscription.
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: servers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/restart:
    post:
      tags:
        - ServerRestart
      operationId: Servers_Restart
      description: Restarts a server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The parameters for restarting a server.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/start:
    post:
      tags:
        - ServerStart
      operationId: Servers_Start
      description: Starts a server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/stop:
    post:
      tags:
        - ServerStop
      operationId: Servers_Stop
      description: Stops a server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}:
    put:
      tags:
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      description: Creates a new firewall rule or updates an existing firewall rule.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      requestBody:
        description: The required parameters for creating or updating a firewall rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: insert
    delete:
      tags:
        - FirewallRules
      operationId: FirewallRules_Delete
      description: Deletes a PostgreSQL server firewall rule.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: delete
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_Get
      description: List all the firewall rules in a given server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules:
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_ListByServer
      description: List all the firewall rules in a given PostgreSQL server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations:
    get:
      tags:
        - Configurations
      operationId: Configurations_ListByServer
      description: List all the configurations in a given server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations/{configurationName}:
    get:
      tags:
        - Configurations
      operationId: Configurations_Get
      description: Gets information about a configuration of server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: configurations
      x-stackQL-verb: select
    patch:
      tags:
        - Configurations
      operationId: Configurations_Update
      description: Updates a configuration of a server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a server configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: configurations
      x-stackQL-verb: exec
    put:
      tags:
        - Configurations
      operationId: Configurations_Put
      description: Updates a configuration of a server.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1resourceGroups~1%7BresourceGroupName%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/2'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a server configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability:
    post:
      tags:
        - CheckNameAvailability
      operationId: CheckNameAvailability_Execute
      description: Check the availability of name for resource
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
      requestBody:
        description: The required parameters for checking if resource name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: check_name_availability
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/capabilities:
    get:
      tags:
        - LocationBasedCapabilities
      operationId: LocationBasedCapabilities_Execute
      description: Get capabilities at specified location in a given subscription.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/components/parameters/LocationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilitiesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: location_based_capabilities
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkVirtualNetworkSubnetUsage:
    post:
      tags:
        - VirtualNetworkSubnetUsage
      operationId: VirtualNetworkSubnetUsage_Execute
      description: Get virtual network subnet usage for a given vNet resource id.
      parameters:
        - $ref: '#/paths/~1providers~1Microsoft.DBforPostgreSQL~1operations/get/parameters/0'
        - $ref: '#/paths/~1subscriptions~1%7BsubscriptionId%7D~1providers~1Microsoft.DBforPostgreSQL~1flexibleServers/get/parameters/1'
        - $ref: '#/components/parameters/LocationNameParameter'
      requestBody:
        description: The required parameters for creating or updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkSubnetUsageParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkSubnetUsageResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_subnet_usage
      x-stackQL-verb: exec
  /providers/Microsoft.DBforPostgreSQL/operations:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available REST API operations.
      parameters:
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: operations
      x-stackQL-verb: select
